{"version":3,"sources":["node_modules/browser-pack/_prelude.js","sd-model.js","src/data-model.js","src/domain/edge.js","src/domain/index.js","src/domain/node/chance-node.js","src/domain/node/decision-node.js","src/domain/node/node.js","src/domain/node/terminal-node.js","src/domain/object-with-computed-values.js","src/domain/object-with-id-and-editable-fields.js","src/domain/point.js","src/domain/text.js","src/index.js","src/validation-result.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","defineProperty","value","DataModel","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_sdUtils","_domain","domain","_validationResult","data","this","nodes","edges","texts","payoffNames","defaultCriterion1Weight","weightLowerBound","weightUpperBound","Infinity","expressionScope","$codeError","$codeDirty","$version","validationResults","maxStackSize","undoStack","redoStack","undoRedoStateChangedCallback","nodeAddedCallback","nodeRemovedCallback","textAddedCallback","textRemovedCallback","callbacksDisabled","load","filterLocation","arguments","filterComputed","replacer","filterPrivate","k","v","Utils","startsWith","stringify","trees","getRoots","slice","getJsonReplacer","_this","clear","forEach","nodeData","createNodeFromData","textData","location","Point","x","y","text","Text","push","clearExpressionScope","extend","dto","serializedData","serialize","dataReviver","_this2","JSON","parse","ValidationResult","createFromDTO","dataModel","log","warn","byId","$id","loadComputedValues","computed","filterFunction","res","forOwn","isFunction","parent","node","_this3","DecisionNode","$TYPE","type","ChanceNode","TerminalNode","$fieldStatus","name","folded","edgeOrNode","addNode","childEdges","ed","edge","childNode","payoff","probability","self","_addChild","_fireNodeAddedCallback","parentNode","child","$parent","Edge","_setEdgeInitialProbability","$l","removeNode","_removeNode","parentEdge","find","removeEdge","_removeEdge","_fireNodeRemovedCallback","_this4","roots","findSubtreeRoots","typeToConvertTo","newNode","_this5","createNodeByType","replaceNode","oldNode","index","indexOf","filter","nodeToCopy","cloneComputedValues","clone","cloneNode","childClone","cloneSubtree","guid","cloneDeep","nodeToAttach","nodeOrEdge","getAllDescendantEdges","id","findNodeById","findEdgeById","splice","nodesToRemove","edgesToRemove","result","apply","getAllDescendantNodes","descendants","unshift","revertConf","state","_pushToStack","_fireUndoRedoCallback","saveStateFromSnapshot","createStateSnapshot","newState","pop","_setNewState","_fireTextAddedCallback","_this6","removeText","_fireTextRemovedCallback","_this7","reverse","redo","nodeById","getObjectByIdMap","edgeById","onUndo","onRedo","stack","shift","./domain","./validation-result","sd-utils","2","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Symbol","iterator","_objectWithComputedValues","_ObjectWithComputedVa","getPrototypeOf","$DISPLAY_VALUE_NAMES","val","computedValue","displayValue","ObjectWithComputedValues","./object-with-computed-values","3","_node","keys","get","_decisionNode","_chanceNode","_terminalNode","_edge","_point","_text","./edge","./node/chance-node","./node/decision-node","./node/node","./node/terminal-node","./point","./text","4","_Node","Node","./node","5","6","withChildren","dx","dy","move","moveTo","../object-with-computed-values","../point","7","8","_objectWithIdAndEditableFields","_ObjectWithIdAndEdita","_ref","_temp","_ret","_len","args","_key","concat","ruleName","fieldPath","path","set","ObjectWithIdAndEditableFields","./object-with-id-and-editable-fields","9","valid","syntax","fieldStatus","getFieldStatus","10","11","12","_dataModel","./data-model","13","errors","warnings","objectIdToError","error","isString","errorsByName","objE","getOwnPropertyNames","sd-model","_index","./src/index"],"mappings":"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","file":"sd-model.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DataModel = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _domain = require(\"./domain\");\n\nvar domain = _interopRequireWildcard(_domain);\n\nvar _validationResult = require(\"./validation-result\");\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n * Data model manager\n * */\nvar DataModel = exports.DataModel = function () {\n    //code evaluation errors\n    //global expression scope\n    function DataModel(data) {\n        _classCallCheck(this, DataModel);\n\n        this.nodes = [];\n        this.edges = [];\n        this.texts = [];\n        this.payoffNames = [];\n        this.defaultCriterion1Weight = 1;\n        this.weightLowerBound = 0;\n        this.weightUpperBound = Infinity;\n        this.expressionScope = {};\n        this.code = \"\";\n        this.$codeError = null;\n        this.$codeDirty = false;\n        this.$version = 1;\n        this.validationResults = [];\n        this.maxStackSize = 20;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.undoRedoStateChangedCallback = null;\n        this.nodeAddedCallback = null;\n        this.nodeRemovedCallback = null;\n        this.textAddedCallback = null;\n        this.textRemovedCallback = null;\n        this.callbacksDisabled = false;\n\n        if (data) {\n            this.load(data);\n        }\n    }\n\n    // undo / redo\n    // is code changed without reevaluation?\n    //global expression code\n    //floating texts\n\n\n    _createClass(DataModel, [{\n        key: \"getJsonReplacer\",\n        value: function getJsonReplacer() {\n            var filterLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var filterComputed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var replacer = arguments[2];\n            var filterPrivate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return function (k, v) {\n\n                if (filterPrivate && _sdUtils.Utils.startsWith(k, '$') || k == 'parentNode') {\n                    return undefined;\n                }\n                if (filterLocation && k == 'location') {\n                    return undefined;\n                }\n                if (filterComputed && k == 'computed') {\n                    return undefined;\n                }\n\n                if (replacer) {\n                    return replacer(k, v);\n                }\n\n                return v;\n            };\n        }\n    }, {\n        key: \"serialize\",\n        value: function serialize() {\n            var stringify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            var filterLocation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var filterComputed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var replacer = arguments[3];\n            var filterPrivate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n            var data = {\n                code: this.code,\n                expressionScope: this.expressionScope,\n                trees: this.getRoots(),\n                texts: this.texts,\n                payoffNames: this.payoffNames.slice(),\n                defaultCriterion1Weight: this.defaultCriterion1Weight,\n                weightLowerBound: this.weightLowerBound,\n                weightUpperBound: this.weightUpperBound\n            };\n\n            if (!stringify) {\n                return data;\n            }\n\n            return _sdUtils.Utils.stringify(data, this.getJsonReplacer(filterLocation, filterComputed, replacer, filterPrivate), []);\n        }\n\n        /*Loads serialized data*/\n\n    }, {\n        key: \"load\",\n        value: function load(data) {\n            var _this = this;\n\n            //roots, texts, code, expressionScope\n            var callbacksDisabled = this.callbacksDisabled;\n            this.callbacksDisabled = true;\n\n            this.clear();\n\n            data.trees.forEach(function (nodeData) {\n                var node = _this.createNodeFromData(nodeData);\n            });\n\n            if (data.texts) {\n                data.texts.forEach(function (textData) {\n                    var location = new domain.Point(textData.location.x, textData.location.y);\n                    var text = new domain.Text(location, textData.value);\n                    _this.texts.push(text);\n                });\n            }\n\n            this.clearExpressionScope();\n            this.code = data.code || '';\n\n            if (data.expressionScope) {\n                _sdUtils.Utils.extend(this.expressionScope, data.expressionScope);\n            }\n\n            if (data.payoffNames !== undefined && data.payoffNames !== null) {\n                this.payoffNames = data.payoffNames;\n            }\n\n            if (data.defaultCriterion1Weight !== undefined && data.defaultCriterion1Weight !== null) {\n                this.defaultCriterion1Weight = data.defaultCriterion1Weight;\n            }\n\n            if (data.weightLowerBound !== undefined && data.weightLowerBound !== null) {\n                this.weightLowerBound = data.weightLowerBound;\n            }\n\n            if (data.weightUpperBound !== undefined && data.weightUpperBound !== null) {\n                this.weightUpperBound = data.weightUpperBound;\n            }\n\n            this.callbacksDisabled = callbacksDisabled;\n        }\n    }, {\n        key: \"getDTO\",\n        value: function getDTO() {\n            var filterLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var filterComputed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var filterPrivate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var dto = {\n                serializedData: this.serialize(true, filterLocation, filterComputed, null, filterPrivate),\n                $codeError: this.$codeError,\n                $codeDirty: this.$codeDirty,\n                validationResults: this.validationResults.slice()\n\n            };\n            return dto;\n        }\n    }, {\n        key: \"loadFromDTO\",\n        value: function loadFromDTO(dto, dataReviver) {\n            var _this2 = this;\n\n            this.load(JSON.parse(dto.serializedData, dataReviver));\n            this.$codeError = dto.$codeError;\n            this.$codeDirty = dto.$codeDirty;\n            this.validationResults.length = 0;\n            dto.validationResults.forEach(function (v) {\n                _this2.validationResults.push(_validationResult.ValidationResult.createFromDTO(v));\n            });\n        }\n\n        /*This method updates only computation results/validation*/\n\n    }, {\n        key: \"updateFrom\",\n        value: function updateFrom(dataModel) {\n            if (this.$version > dataModel.$version) {\n                _sdUtils.log.warn(\"DataModel.updateFrom: version of current model greater than update\");\n                return;\n            }\n            var byId = {};\n            dataModel.nodes.forEach(function (n) {\n                byId[n.$id] = n;\n            });\n            this.nodes.forEach(function (n, i) {\n                if (byId[n.$id]) {\n                    n.loadComputedValues(byId[n.$id].computed);\n                }\n            });\n            dataModel.edges.forEach(function (e) {\n                byId[e.$id] = e;\n            });\n            this.edges.forEach(function (e, i) {\n                if (byId[e.$id]) {\n                    e.loadComputedValues(byId[e.$id].computed);\n                }\n            });\n            this.expressionScope = dataModel.expressionScope;\n            this.$codeError = dataModel.$codeError;\n            this.$codeDirty = dataModel.$codeDirty;\n            this.validationResults = dataModel.validationResults;\n        }\n    }, {\n        key: \"getGlobalVariableNames\",\n        value: function getGlobalVariableNames() {\n            var filterFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            var res = [];\n            _sdUtils.Utils.forOwn(this.expressionScope, function (value, key) {\n                if (filterFunction && _sdUtils.Utils.isFunction(value)) {\n                    return;\n                }\n                res.push(key);\n            });\n            return res;\n        }\n\n        /*create node from serialized data*/\n\n    }, {\n        key: \"createNodeFromData\",\n        value: function createNodeFromData(data, parent) {\n            var _this3 = this;\n\n            var node, location;\n\n            if (data.location) {\n                location = new domain.Point(data.location.x, data.location.y);\n            } else {\n                location = new domain.Point(0, 0);\n            }\n\n            if (domain.DecisionNode.$TYPE == data.type) {\n                node = new domain.DecisionNode(location);\n            } else if (domain.ChanceNode.$TYPE == data.type) {\n                node = new domain.ChanceNode(location);\n            } else if (domain.TerminalNode.$TYPE == data.type) {\n                node = new domain.TerminalNode(location);\n            }\n            if (data.$id) {\n                node.$id = data.$id;\n            }\n            if (data.$fieldStatus) {\n                node.$fieldStatus = data.$fieldStatus;\n            }\n            node.name = data.name;\n\n            if (data.code) {\n                node.code = data.code;\n            }\n            if (data.expressionScope) {\n                node.expressionScope = data.expressionScope;\n            }\n            if (data.computed) {\n                node.loadComputedValues(data.computed);\n            }\n\n            node.folded = !!data.folded;\n\n            var edgeOrNode = this.addNode(node, parent);\n            data.childEdges.forEach(function (ed) {\n                var edge = _this3.createNodeFromData(ed.childNode, node);\n                if (_sdUtils.Utils.isArray(ed.payoff)) {\n                    edge.payoff = ed.payoff;\n                } else {\n                    edge.payoff = [ed.payoff, 0];\n                }\n\n                edge.probability = ed.probability;\n                edge.name = ed.name;\n                if (ed.computed) {\n                    edge.loadComputedValues(ed.computed);\n                }\n                if (ed.$id) {\n                    edge.$id = ed.$id;\n                }\n                if (ed.$fieldStatus) {\n                    edge.$fieldStatus = ed.$fieldStatus;\n                }\n            });\n\n            return edgeOrNode;\n        }\n\n        /*returns node or edge from parent to this node*/\n\n    }, {\n        key: \"addNode\",\n        value: function addNode(node, parent) {\n            var self = this;\n            self.nodes.push(node);\n            if (parent) {\n                var edge = self._addChild(parent, node);\n                this._fireNodeAddedCallback(node);\n                return edge;\n            }\n\n            this._fireNodeAddedCallback(node);\n            return node;\n        }\n\n        /*injects given node into given edge*/\n\n    }, {\n        key: \"injectNode\",\n        value: function injectNode(node, edge) {\n            var parent = edge.parentNode;\n            var child = edge.childNode;\n            this.nodes.push(node);\n            node.$parent = parent;\n            edge.childNode = node;\n            this._addChild(node, child);\n            this._fireNodeAddedCallback(node);\n        }\n    }, {\n        key: \"_addChild\",\n        value: function _addChild(parent, child) {\n            var self = this;\n            var edge = new domain.Edge(parent, child);\n            self._setEdgeInitialProbability(edge);\n            self.edges.push(edge);\n\n            parent.childEdges.push(edge);\n            child.$parent = parent;\n            return edge;\n        }\n    }, {\n        key: \"_setEdgeInitialProbability\",\n        value: function _setEdgeInitialProbability(edge) {\n            if (edge.parentNode instanceof domain.ChanceNode) {\n                edge.probability = '#';\n            } else {\n                edge.probability = undefined;\n            }\n        }\n\n        /*removes given node and its subtree*/\n\n    }, {\n        key: \"removeNode\",\n        value: function removeNode(node) {\n            var $l = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            var self = this;\n            node.childEdges.forEach(function (e) {\n                return self.removeNode(e.childNode, $l + 1);\n            });\n\n            self._removeNode(node);\n            var parent = node.$parent;\n            if (parent) {\n                var parentEdge = _sdUtils.Utils.find(parent.childEdges, function (e, i) {\n                    return e.childNode === node;\n                });\n                if ($l == 0) {\n                    self.removeEdge(parentEdge);\n                } else {\n                    self._removeEdge(parentEdge);\n                }\n            }\n            this._fireNodeRemovedCallback(node);\n        }\n\n        /*removes given nodes and their subtrees*/\n\n    }, {\n        key: \"removeNodes\",\n        value: function removeNodes(nodes) {\n            var _this4 = this;\n\n            var roots = this.findSubtreeRoots(nodes);\n            roots.forEach(function (n) {\n                return _this4.removeNode(n, 0);\n            }, this);\n        }\n    }, {\n        key: \"convertNode\",\n        value: function convertNode(node, typeToConvertTo) {\n            var _this5 = this;\n\n            var newNode;\n            if (!node.childEdges.length && node.$parent) {\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            } else {\n                if (node instanceof domain.DecisionNode && typeToConvertTo == domain.ChanceNode.$TYPE) {\n                    newNode = this.createNodeByType(typeToConvertTo, node.location);\n                } else if (typeToConvertTo == domain.DecisionNode.$TYPE) {\n                    newNode = this.createNodeByType(typeToConvertTo, node.location);\n                }\n            }\n\n            if (newNode) {\n                newNode.name = node.name;\n                this.replaceNode(newNode, node);\n                newNode.childEdges.forEach(function (e) {\n                    return _this5._setEdgeInitialProbability(e);\n                });\n                this._fireNodeAddedCallback(newNode);\n            }\n        }\n    }, {\n        key: \"createNodeByType\",\n        value: function createNodeByType(type, location) {\n            if (type == domain.DecisionNode.$TYPE) {\n                return new domain.DecisionNode(location);\n            } else if (type == domain.ChanceNode.$TYPE) {\n                return new domain.ChanceNode(location);\n            } else if (type == domain.TerminalNode.$TYPE) {\n                return new domain.TerminalNode(location);\n            }\n        }\n    }, {\n        key: \"replaceNode\",\n        value: function replaceNode(newNode, oldNode) {\n            var parent = oldNode.$parent;\n            newNode.$parent = parent;\n\n            if (parent) {\n                var parentEdge = _sdUtils.Utils.find(newNode.$parent.childEdges, function (e) {\n                    return e.childNode === oldNode;\n                });\n                parentEdge.childNode = newNode;\n            }\n\n            newNode.childEdges = oldNode.childEdges;\n            newNode.childEdges.forEach(function (e) {\n                return e.parentNode = newNode;\n            });\n\n            var index = this.nodes.indexOf(oldNode);\n            if (~index) {\n                this.nodes[index] = newNode;\n            }\n        }\n    }, {\n        key: \"getRoots\",\n        value: function getRoots() {\n            return this.nodes.filter(function (n) {\n                return !n.$parent;\n            });\n        }\n    }, {\n        key: \"findSubtreeRoots\",\n        value: function findSubtreeRoots(nodes) {\n            return nodes.filter(function (n) {\n                return !n.$parent || nodes.indexOf(n.$parent) === -1;\n            });\n        }\n\n        /*creates detached clone of given node*/\n\n    }, {\n        key: \"cloneSubtree\",\n        value: function cloneSubtree(nodeToCopy, cloneComputedValues) {\n            var self = this;\n            var clone = this.cloneNode(nodeToCopy);\n\n            nodeToCopy.childEdges.forEach(function (e) {\n                var childClone = self.cloneSubtree(e.childNode, cloneComputedValues);\n                childClone.$parent = clone;\n                var edge = _sdUtils.Utils.clone(e);\n                edge.$id = _sdUtils.Utils.guid();\n                edge.parentNode = clone;\n                edge.childNode = childClone;\n                edge.payoff = _sdUtils.Utils.cloneDeep(e.payoff);\n                edge.computed = {};\n                if (cloneComputedValues) {\n                    edge.computed = _sdUtils.Utils.cloneDeep(e.computed);\n                    childClone.computed = _sdUtils.Utils.cloneDeep(e.childNode.computed);\n                }\n                clone.childEdges.push(edge);\n            });\n            if (cloneComputedValues) {\n                clone.computed = _sdUtils.Utils.cloneDeep(nodeToCopy.computed);\n            }\n            return clone;\n        }\n\n        /*attaches detached subtree to given parent*/\n\n    }, {\n        key: \"attachSubtree\",\n        value: function attachSubtree(nodeToAttach, parent) {\n            var self = this;\n            var nodeOrEdge = self.addNode(nodeToAttach, parent);\n\n            nodeToAttach.expressionScope = null;\n\n            var childEdges = self.getAllDescendantEdges(nodeToAttach);\n            childEdges.forEach(function (e) {\n                self.edges.push(e);\n                self.nodes.push(e.childNode);\n                e.childNode.expressionScope = null;\n            });\n\n            return nodeOrEdge;\n        }\n    }, {\n        key: \"cloneNodes\",\n        value: function cloneNodes(nodes) {\n            var roots = [];\n            //TODO\n        }\n\n        /*shallow clone without parent and children*/\n\n    }, {\n        key: \"cloneNode\",\n        value: function cloneNode(node) {\n            var clone = _sdUtils.Utils.clone(node);\n            clone.$id = _sdUtils.Utils.guid();\n            clone.location = _sdUtils.Utils.clone(node.location);\n            clone.computed = _sdUtils.Utils.clone(node.computed);\n            clone.$parent = null;\n            clone.childEdges = [];\n            return clone;\n        }\n    }, {\n        key: \"findNodeById\",\n        value: function findNodeById(id) {\n            return _sdUtils.Utils.find(this.nodes, function (n) {\n                return n.$id == id;\n            });\n        }\n    }, {\n        key: \"findEdgeById\",\n        value: function findEdgeById(id) {\n            return _sdUtils.Utils.find(this.edges, function (e) {\n                return e.$id == id;\n            });\n        }\n    }, {\n        key: \"findById\",\n        value: function findById(id) {\n            var node = this.findNodeById(id);\n            if (node) {\n                return node;\n            }\n            return this.findEdgeById(id);\n        }\n    }, {\n        key: \"_removeNode\",\n        value: function _removeNode(node) {\n            // simply removes node from node list\n            var index = this.nodes.indexOf(node);\n            if (index > -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"removeEdge\",\n        value: function removeEdge(edge) {\n            var index = edge.parentNode.childEdges.indexOf(edge);\n            if (index > -1) {\n                edge.parentNode.childEdges.splice(index, 1);\n            }\n            this._removeEdge(edge);\n        }\n    }, {\n        key: \"_removeEdge\",\n        value: function _removeEdge(edge) {\n            //removes edge from edge list without removing connected nodes\n            var index = this.edges.indexOf(edge);\n            if (index > -1) {\n                this.edges.splice(index, 1);\n            }\n        }\n    }, {\n        key: \"_removeNodes\",\n        value: function _removeNodes(nodesToRemove) {\n            this.nodes = this.nodes.filter(function (n) {\n                return nodesToRemove.indexOf(n) === -1;\n            });\n        }\n    }, {\n        key: \"_removeEdges\",\n        value: function _removeEdges(edgesToRemove) {\n            this.edges = this.edges.filter(function (e) {\n                return edgesToRemove.indexOf(e) === -1;\n            });\n        }\n    }, {\n        key: \"getAllDescendantEdges\",\n        value: function getAllDescendantEdges(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                result.push(e);\n                if (e.childNode) {\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantEdges(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"getAllDescendantNodes\",\n        value: function getAllDescendantNodes(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                if (e.childNode) {\n                    result.push(e.childNode);\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantNodes(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: \"getAllNodesInSubtree\",\n        value: function getAllNodesInSubtree(node) {\n            var descendants = this.getAllDescendantNodes(node);\n            descendants.unshift(node);\n            return descendants;\n        }\n    }, {\n        key: \"isUndoAvailable\",\n        value: function isUndoAvailable() {\n            return !!this.undoStack.length;\n        }\n    }, {\n        key: \"isRedoAvailable\",\n        value: function isRedoAvailable() {\n            return !!this.redoStack.length;\n        }\n    }, {\n        key: \"createStateSnapshot\",\n        value: function createStateSnapshot(revertConf) {\n            return {\n                revertConf: revertConf,\n                nodes: _sdUtils.Utils.cloneDeep(this.nodes),\n                edges: _sdUtils.Utils.cloneDeep(this.edges),\n                texts: _sdUtils.Utils.cloneDeep(this.texts),\n                payoffNames: _sdUtils.Utils.cloneDeep(this.payoffNames),\n                defaultCriterion1Weight: _sdUtils.Utils.cloneDeep(this.defaultCriterion1Weight),\n                weightLowerBound: _sdUtils.Utils.cloneDeep(this.weightLowerBound),\n                weightUpperBound: _sdUtils.Utils.cloneDeep(this.weightUpperBound),\n                expressionScope: _sdUtils.Utils.cloneDeep(this.expressionScope),\n                code: this.code,\n                $codeError: this.$codeError\n            };\n        }\n    }, {\n        key: \"saveStateFromSnapshot\",\n        value: function saveStateFromSnapshot(state) {\n            this.redoStack.length = 0;\n\n            this._pushToStack(this.undoStack, state);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: \"saveState\",\n        value: function saveState(revertConf) {\n            this.saveStateFromSnapshot(this.createStateSnapshot(revertConf));\n            return this;\n        }\n    }, {\n        key: \"undo\",\n        value: function undo() {\n            var self = this;\n            var newState = this.undoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.redoStack, {\n                revertConf: newState.revertConf,\n                nodes: self.nodes,\n                edges: self.edges,\n                texts: self.texts,\n                payoffNames: self.payoffNames,\n                defaultCriterion1Weight: self.defaultCriterion1Weight,\n                weightLowerBound: self.weightLowerBound,\n                weightUpperBound: self.weightUpperBound,\n                expressionScope: self.expressionScope,\n                code: self.code,\n                $codeError: self.$codeError\n\n            });\n\n            this._setNewState(newState);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: \"redo\",\n        value: function redo() {\n            var self = this;\n            var newState = this.redoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.undoStack, {\n                revertConf: newState.revertConf,\n                nodes: self.nodes,\n                edges: self.edges,\n                texts: self.texts,\n                payoffNames: self.payoffNames,\n                defaultCriterion1Weight: self.defaultCriterion1Weight,\n                weightLowerBound: self.weightLowerBound,\n                weightUpperBound: self.weightUpperBound,\n                expressionScope: self.expressionScope,\n                code: self.code,\n                $codeError: self.$codeError\n            });\n\n            this._setNewState(newState, true);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: \"clear\",\n        value: function clear() {\n            this.nodes.length = 0;\n            this.edges.length = 0;\n            this.undoStack.length = 0;\n            this.redoStack.length = 0;\n            this.texts.length = 0;\n            this.clearExpressionScope();\n            this.code = '';\n            this.$codeError = null;\n            this.$codeDirty = false;\n\n            this.payoffNames = [];\n            this.defaultCriterion1Weight = 1;\n            this.weightLowerBound = 0;\n            this.weightUpperBound = Infinity;\n        }\n    }, {\n        key: \"addText\",\n        value: function addText(text) {\n            this.texts.push(text);\n\n            this._fireTextAddedCallback(text);\n        }\n    }, {\n        key: \"removeTexts\",\n        value: function removeTexts(texts) {\n            var _this6 = this;\n\n            texts.forEach(function (t) {\n                return _this6.removeText(t);\n            });\n        }\n    }, {\n        key: \"removeText\",\n        value: function removeText(text) {\n            var index = this.texts.indexOf(text);\n            if (index > -1) {\n                this.texts.splice(index, 1);\n                this._fireTextRemovedCallback(text);\n            }\n        }\n    }, {\n        key: \"clearExpressionScope\",\n        value: function clearExpressionScope() {\n            var _this7 = this;\n\n            _sdUtils.Utils.forOwn(this.expressionScope, function (value, key) {\n                delete _this7.expressionScope[key];\n            });\n        }\n    }, {\n        key: \"reversePayoffs\",\n        value: function reversePayoffs() {\n            this.payoffNames.reverse();\n            this.edges.forEach(function (e) {\n                return e.payoff.reverse();\n            });\n        }\n    }, {\n        key: \"_setNewState\",\n        value: function _setNewState(newState, redo) {\n            var nodeById = _sdUtils.Utils.getObjectByIdMap(newState.nodes);\n            var edgeById = _sdUtils.Utils.getObjectByIdMap(newState.edges);\n            this.nodes = newState.nodes;\n            this.edges = newState.edges;\n            this.texts = newState.texts;\n            this.payoffNames = newState.payoffNames;\n            this.defaultCriterion1Weight = newState.defaultCriterion1Weight;\n            this.weightLowerBound = newState.weightLowerBound;\n            this.weightUpperBound = newState.weightUpperBound;\n            this.expressionScope = newState.expressionScope;\n            this.code = newState.code;\n            this.$codeError = newState.$codeError;\n\n            this.nodes.forEach(function (n) {\n                for (var i = 0; i < n.childEdges.length; i++) {\n                    var edge = edgeById[n.childEdges[i].$id];\n                    n.childEdges[i] = edge;\n                    edge.parentNode = n;\n                    edge.childNode = nodeById[edge.childNode.$id];\n                }\n            });\n\n            if (newState.revertConf) {\n                if (!redo && newState.revertConf.onUndo) {\n                    newState.revertConf.onUndo(newState.revertConf.data);\n                }\n                if (redo && newState.revertConf.onRedo) {\n                    newState.revertConf.onRedo(newState.revertConf.data);\n                }\n            }\n            this.revertConf = newState.revertConf;\n        }\n    }, {\n        key: \"_pushToStack\",\n        value: function _pushToStack(stack, obj) {\n            if (stack.length >= this.maxStackSize) {\n                stack.shift();\n            }\n            stack.push(obj);\n        }\n    }, {\n        key: \"_fireUndoRedoCallback\",\n        value: function _fireUndoRedoCallback() {\n            if (!this.callbacksDisabled && this.undoRedoStateChangedCallback) {\n                this.undoRedoStateChangedCallback();\n            }\n        }\n    }, {\n        key: \"_fireNodeAddedCallback\",\n        value: function _fireNodeAddedCallback(node) {\n            if (!this.callbacksDisabled && this.nodeAddedCallback) {\n                this.nodeAddedCallback(node);\n            }\n        }\n    }, {\n        key: \"_fireNodeRemovedCallback\",\n        value: function _fireNodeRemovedCallback(node) {\n            if (!this.callbacksDisabled && this.nodeRemovedCallback) {\n                this.nodeRemovedCallback(node);\n            }\n        }\n    }, {\n        key: \"_fireTextAddedCallback\",\n        value: function _fireTextAddedCallback(text) {\n            if (!this.callbacksDisabled && this.textAddedCallback) {\n                this.textAddedCallback(text);\n            }\n        }\n    }, {\n        key: \"_fireTextRemovedCallback\",\n        value: function _fireTextRemovedCallback(text) {\n            if (!this.callbacksDisabled && this.textRemovedCallback) {\n                this.textRemovedCallback(text);\n            }\n        }\n    }]);\n\n    return DataModel;\n}();\n\n},{\"./domain\":3,\"./validation-result\":13,\"sd-utils\":\"sd-utils\"}],2:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Edge = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _objectWithComputedValues = require('./object-with-computed-values');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Edge = exports.Edge = function (_ObjectWithComputedVa) {\n    _inherits(Edge, _ObjectWithComputedVa);\n\n    function Edge(parentNode, childNode, name, payoff, probability) {\n        _classCallCheck(this, Edge);\n\n        var _this = _possibleConstructorReturn(this, (Edge.__proto__ || Object.getPrototypeOf(Edge)).call(this));\n\n        _this.name = '';\n        _this.probability = undefined;\n        _this.payoff = [0, 0];\n        _this.$DISPLAY_VALUE_NAMES = ['probability', 'payoff', 'optimal'];\n\n        _this.parentNode = parentNode;\n        _this.childNode = childNode;\n\n        if (name !== undefined) {\n            _this.name = name;\n        }\n        if (probability !== undefined) {\n            _this.probability = probability;\n        }\n        if (payoff !== undefined) {\n            _this.payoff = payoff;\n        }\n\n        return _this;\n    }\n\n    _createClass(Edge, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'setProbability',\n        value: function setProbability(probability) {\n            this.probability = probability;\n            return this;\n        }\n    }, {\n        key: 'setPayoff',\n        value: function setPayoff(payoff) {\n            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            this.payoff[index] = payoff;\n            return this;\n        }\n    }, {\n        key: 'computedBaseProbability',\n        value: function computedBaseProbability(val) {\n            return this.computedValue(null, 'probability', val);\n        }\n    }, {\n        key: 'computedBasePayoff',\n        value: function computedBasePayoff(val) {\n            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            return this.computedValue(null, 'payoff[' + index + ']', val);\n        }\n    }, {\n        key: 'displayProbability',\n        value: function displayProbability(val) {\n            return this.displayValue('probability', val);\n        }\n    }, {\n        key: 'displayPayoff',\n        value: function displayPayoff(val) {\n            var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            return this.displayValue('payoff[' + index + ']', val);\n        }\n    }]);\n\n    return Edge;\n}(_objectWithComputedValues.ObjectWithComputedValues);\n\n},{\"./object-with-computed-values\":8}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _node = require('./node/node');\n\nObject.keys(_node).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _node[key];\n    }\n  });\n});\n\nvar _decisionNode = require('./node/decision-node');\n\nObject.keys(_decisionNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _decisionNode[key];\n    }\n  });\n});\n\nvar _chanceNode = require('./node/chance-node');\n\nObject.keys(_chanceNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _chanceNode[key];\n    }\n  });\n});\n\nvar _terminalNode = require('./node/terminal-node');\n\nObject.keys(_terminalNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _terminalNode[key];\n    }\n  });\n});\n\nvar _edge = require('./edge');\n\nObject.keys(_edge).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _edge[key];\n    }\n  });\n});\n\nvar _point = require('./point');\n\nObject.keys(_point).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _point[key];\n    }\n  });\n});\n\nvar _text = require('./text');\n\nObject.keys(_text).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _text[key];\n    }\n  });\n});\n\n},{\"./edge\":2,\"./node/chance-node\":4,\"./node/decision-node\":5,\"./node/node\":6,\"./node/terminal-node\":7,\"./point\":10,\"./text\":11}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChanceNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ChanceNode = exports.ChanceNode = function (_Node) {\n    _inherits(ChanceNode, _Node);\n\n    function ChanceNode(location) {\n        _classCallCheck(this, ChanceNode);\n\n        return _possibleConstructorReturn(this, (ChanceNode.__proto__ || Object.getPrototypeOf(ChanceNode)).call(this, ChanceNode.$TYPE, location));\n    }\n\n    return ChanceNode;\n}(_node.Node);\n\nChanceNode.$TYPE = 'chance';\n\n},{\"./node\":6}],5:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DecisionNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DecisionNode = exports.DecisionNode = function (_Node) {\n    _inherits(DecisionNode, _Node);\n\n    function DecisionNode(location) {\n        _classCallCheck(this, DecisionNode);\n\n        return _possibleConstructorReturn(this, (DecisionNode.__proto__ || Object.getPrototypeOf(DecisionNode)).call(this, DecisionNode.$TYPE, location));\n    }\n\n    return DecisionNode;\n}(_node.Node);\n\nDecisionNode.$TYPE = 'decision';\n\n},{\"./node\":6}],6:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Node = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _point = require('../point');\n\nvar _objectWithComputedValues = require('../object-with-computed-values');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Node = exports.Node = function (_ObjectWithComputedVa) {\n    _inherits(Node, _ObjectWithComputedVa);\n\n    // is code changed without reevaluation?\n    //Point\n\n    function Node(type, location) {\n        _classCallCheck(this, Node);\n\n        var _this = _possibleConstructorReturn(this, (Node.__proto__ || Object.getPrototypeOf(Node)).call(this));\n\n        _this.childEdges = [];\n        _this.name = '';\n        _this.code = '';\n        _this.$codeDirty = false;\n        _this.$codeError = null;\n        _this.expressionScope = null;\n        _this.folded = false;\n        _this.$DISPLAY_VALUE_NAMES = ['childrenPayoff', 'aggregatedPayoff', 'probabilityToEnter', 'optimal'];\n\n        _this.location = location;\n        if (!location) {\n            _this.location = new _point.Point(0, 0);\n        }\n        _this.type = type;\n        return _this;\n    } // is node folded along with its subtree\n\n    //code evaluation errors\n\n    _createClass(Node, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'moveTo',\n        value: function moveTo(x, y, withChildren) {\n            //move to new location\n            if (withChildren) {\n                var dx = x - this.location.x;\n                var dy = y - this.location.y;\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: 'move',\n        value: function move(dx, dy, withChildren) {\n            //move by vector\n            if (withChildren) {\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Node;\n}(_objectWithComputedValues.ObjectWithComputedValues);\n\n},{\"../object-with-computed-values\":8,\"../point\":10}],7:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TerminalNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TerminalNode = exports.TerminalNode = function (_Node) {\n    _inherits(TerminalNode, _Node);\n\n    function TerminalNode(location) {\n        _classCallCheck(this, TerminalNode);\n\n        return _possibleConstructorReturn(this, (TerminalNode.__proto__ || Object.getPrototypeOf(TerminalNode)).call(this, TerminalNode.$TYPE, location));\n    }\n\n    return TerminalNode;\n}(_node.Node);\n\nTerminalNode.$TYPE = 'terminal';\n\n},{\"./node\":6}],8:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectWithComputedValues = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _objectWithIdAndEditableFields = require('./object-with-id-and-editable-fields');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ObjectWithComputedValues = exports.ObjectWithComputedValues = function (_ObjectWithIdAndEdita) {\n    _inherits(ObjectWithComputedValues, _ObjectWithIdAndEdita);\n\n    function ObjectWithComputedValues() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, ObjectWithComputedValues);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ObjectWithComputedValues.__proto__ || Object.getPrototypeOf(ObjectWithComputedValues)).call.apply(_ref, [this].concat(args))), _this), _this.computed = {}, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(ObjectWithComputedValues, [{\n        key: 'computedValue',\n        //computed values\n\n        /*get or set computed value*/\n        value: function computedValue(ruleName, fieldPath, value) {\n            var path = 'computed.';\n            if (ruleName) {\n                path += ruleName + '.';\n            }\n            path += fieldPath;\n            if (value === undefined) {\n                return _sdUtils.Utils.get(this, path, null);\n            }\n            _sdUtils.Utils.set(this, path, value);\n            return value;\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(ruleName) {\n            var _this2 = this;\n\n            if (ruleName == undefined) {\n                this.computed = {};\n                return;\n            }\n            if (_sdUtils.Utils.isArray(ruleName)) {\n                ruleName.forEach(function (n) {\n                    _this2.computed[n] = {};\n                });\n                return;\n            }\n            this.computed[ruleName] = {};\n        }\n    }, {\n        key: 'clearDisplayValues',\n        value: function clearDisplayValues() {\n            this.computed['$displayValues'] = {};\n        }\n    }, {\n        key: 'displayValue',\n        value: function displayValue(fieldPath, value) {\n            return this.computedValue(null, '$displayValues.' + fieldPath, value);\n        }\n    }, {\n        key: 'loadComputedValues',\n        value: function loadComputedValues(computed) {\n            this.computed = _sdUtils.Utils.cloneDeep(computed);\n        }\n    }]);\n\n    return ObjectWithComputedValues;\n}(_objectWithIdAndEditableFields.ObjectWithIdAndEditableFields);\n\n},{\"./object-with-id-and-editable-fields\":9,\"sd-utils\":\"sd-utils\"}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectWithIdAndEditableFields = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectWithIdAndEditableFields = exports.ObjectWithIdAndEditableFields = function () {\n    function ObjectWithIdAndEditableFields() {\n        _classCallCheck(this, ObjectWithIdAndEditableFields);\n\n        this.$id = _sdUtils.Utils.guid();\n        this.$fieldStatus = {};\n    } //internal id\n\n\n    _createClass(ObjectWithIdAndEditableFields, [{\n        key: 'getFieldStatus',\n        value: function getFieldStatus(fieldPath) {\n            if (!_sdUtils.Utils.get(this.$fieldStatus, fieldPath, null)) {\n                _sdUtils.Utils.set(this.$fieldStatus, fieldPath, {\n                    valid: {\n                        syntax: true,\n                        value: true\n                    }\n                });\n            }\n            return _sdUtils.Utils.get(this.$fieldStatus, fieldPath);\n        }\n    }, {\n        key: 'setSyntaxValidity',\n        value: function setSyntaxValidity(fieldPath, valid) {\n            var fieldStatus = this.getFieldStatus(fieldPath);\n            fieldStatus.valid.syntax = valid;\n        }\n    }, {\n        key: 'setValueValidity',\n        value: function setValueValidity(fieldPath, valid) {\n            var fieldStatus = this.getFieldStatus(fieldPath);\n            fieldStatus.valid.value = valid;\n        }\n    }, {\n        key: 'isFieldValid',\n        value: function isFieldValid(fieldPath) {\n            var syntax = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var fieldStatus = this.getFieldStatus(fieldPath);\n            if (syntax && value) {\n                return fieldStatus.valid.syntax && fieldStatus.valid.value;\n            }\n            if (syntax) {\n                return fieldStatus.valid.syntax;\n            }\n            return fieldStatus.valid.value;\n        }\n    }]);\n\n    return ObjectWithIdAndEditableFields;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Point = exports.Point = function () {\n    function Point(x, y) {\n        _classCallCheck(this, Point);\n\n        if (x instanceof Point) {\n            y = x.y;\n            x = x.x;\n        } else if (Array.isArray(x)) {\n            y = x[1];\n            x = x[0];\n        }\n        this.x = x;\n        this.y = y;\n    }\n\n    _createClass(Point, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            if (Array.isArray(x)) {\n                y = x[1];\n                x = x[0];\n            }\n            this.x = x;\n            this.y = y;\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            if (Array.isArray(dx)) {\n                dy = dx[1];\n                dx = dx[0];\n            }\n            this.x += dx;\n            this.y += dy;\n            return this;\n        }\n    }]);\n\n    return Point;\n}();\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Text = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _point = require(\"./point\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectWithIdAndEditableFields = require(\"./object-with-id-and-editable-fields\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Text = exports.Text = function (_ObjectWithIdAndEdita) {\n    _inherits(Text, _ObjectWithIdAndEdita);\n\n    //Point\n\n    function Text(location, value) {\n        _classCallCheck(this, Text);\n\n        var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this));\n\n        _this.value = '';\n\n        _this.location = location;\n        if (!location) {\n            _this.location = new _point.Point(0, 0);\n        }\n\n        if (value) {\n            _this.value = value;\n        }\n        return _this;\n    }\n\n    _createClass(Text, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            //move to new location\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Text;\n}(_objectWithIdAndEditableFields.ObjectWithIdAndEditableFields);\n\n},{\"./object-with-id-and-editable-fields\":9,\"./point\":10,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.domain = undefined;\n\nvar _dataModel = require('./data-model');\n\nObject.keys(_dataModel).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _dataModel[key];\n    }\n  });\n});\n\nvar _validationResult = require('./validation-result');\n\nObject.keys(_validationResult).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _validationResult[key];\n    }\n  });\n});\n\nvar _domain = require('./domain');\n\nvar domain = _interopRequireWildcard(_domain);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.domain = domain;\n\n},{\"./data-model\":1,\"./domain\":3,\"./validation-result\":13}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ValidationResult = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ValidationResult = exports.ValidationResult = function () {\n    function ValidationResult() {\n        _classCallCheck(this, ValidationResult);\n\n        this.errors = {};\n        this.warnings = {};\n        this.objectIdToError = {};\n    }\n\n    _createClass(ValidationResult, [{\n        key: \"addError\",\n        value: function addError(error, obj) {\n            if (_sdUtils.Utils.isString(error)) {\n                error = { name: error };\n            }\n            var name = error.name;\n            var errorsByName = this.errors[name];\n            if (!errorsByName) {\n                errorsByName = [];\n                this.errors[name] = errorsByName;\n            }\n            var objE = this.objectIdToError[obj.$id];\n            if (!objE) {\n                objE = [];\n                this.objectIdToError[obj.$id] = objE;\n            }\n            errorsByName.push(obj);\n            objE.push(error);\n        }\n    }, {\n        key: \"addWarning\",\n        value: function addWarning(name, obj) {\n            var e = this.warnings[name];\n            if (!e) {\n                e = [];\n                this.warnings[name] = e;\n            }\n            e.push(obj);\n        }\n    }, {\n        key: \"isValid\",\n        value: function isValid() {\n            return Object.getOwnPropertyNames(this.errors).length === 0;\n        }\n    }], [{\n        key: \"createFromDTO\",\n        value: function createFromDTO(dto) {\n            var v = new ValidationResult();\n            v.errors = dto.errors;\n            v.warnings = dto.warnings;\n            v.objectIdToError = dto.objectIdToError;\n            return v;\n        }\n    }]);\n\n    return ValidationResult;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],\"sd-model\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":12}]},{},[])\n\n","import {Utils, log} from \"sd-utils\";\nimport * as domain from \"./domain\";\nimport {ValidationResult} from \"./validation-result\";\n\n/*\n * Data model manager\n * */\nexport class DataModel {\n\n    nodes = [];\n    edges = [];\n\n    texts = []; //floating texts\n    payoffNames = [];\n    defaultCriterion1Weight = 1;\n    weightLowerBound = 0;\n    weightUpperBound = Infinity;\n\n\n    expressionScope = {}; //global expression scope\n    code = \"\";//global expression code\n    $codeError = null; //code evaluation errors\n    $codeDirty = false; // is code changed without reevaluation?\n    $version=1;\n\n    validationResults = [];\n\n    // undo / redo\n    maxStackSize = 20;\n    undoStack = [];\n    redoStack = [];\n    undoRedoStateChangedCallback = null;\n    nodeAddedCallback = null;\n    nodeRemovedCallback = null;\n\n    textAddedCallback = null;\n    textRemovedCallback = null;\n\n    callbacksDisabled = false;\n\n    constructor(data) {\n        if(data){\n            this.load(data);\n        }\n    }\n\n    getJsonReplacer(filterLocation=false, filterComputed=false, replacer, filterPrivate =true){\n        return function (k, v) {\n\n            if ((filterPrivate && Utils.startsWith(k, '$')) || k == 'parentNode') {\n                return undefined;\n            }\n            if (filterLocation && k == 'location') {\n                return undefined;\n            }\n            if (filterComputed && k == 'computed') {\n                return undefined;\n            }\n\n            if (replacer){\n                return replacer(k, v);\n            }\n\n            return v;\n        }\n    }\n\n    serialize(stringify=true, filterLocation=false, filterComputed=false, replacer, filterPrivate =true){\n        var data =  {\n            code: this.code,\n            expressionScope: this.expressionScope,\n            trees: this.getRoots(),\n            texts: this.texts,\n            payoffNames: this.payoffNames.slice(),\n            defaultCriterion1Weight: this.defaultCriterion1Weight,\n            weightLowerBound: this.weightLowerBound,\n            weightUpperBound: this.weightUpperBound\n        };\n\n        if(!stringify){\n            return data;\n        }\n\n        return Utils.stringify(data, this.getJsonReplacer(filterLocation, filterComputed, replacer, filterPrivate), []);\n    }\n\n\n    /*Loads serialized data*/\n    load(data) {\n        //roots, texts, code, expressionScope\n        var callbacksDisabled = this.callbacksDisabled;\n        this.callbacksDisabled = true;\n\n        this.clear();\n\n\n        data.trees.forEach(nodeData=> {\n            var node = this.createNodeFromData(nodeData);\n        });\n\n        if (data.texts) {\n            data.texts.forEach(textData=> {\n                var location = new domain.Point(textData.location.x, textData.location.y);\n                var text = new domain.Text(location, textData.value);\n                this.texts.push(text);\n            })\n        }\n\n        this.clearExpressionScope();\n        this.code = data.code || '';\n\n        if (data.expressionScope) {\n            Utils.extend(this.expressionScope, data.expressionScope);\n        }\n\n        if (data.payoffNames !== undefined && data.payoffNames !== null) {\n            this.payoffNames = data.payoffNames;\n        }\n\n        if (data.defaultCriterion1Weight !== undefined && data.defaultCriterion1Weight !== null) {\n            this.defaultCriterion1Weight = data.defaultCriterion1Weight;\n        }\n\n        if (data.weightLowerBound !== undefined && data.weightLowerBound !== null) {\n            this.weightLowerBound = data.weightLowerBound;\n        }\n\n        if (data.weightUpperBound !== undefined && data.weightUpperBound !== null) {\n            this.weightUpperBound = data.weightUpperBound;\n        }\n\n\n        this.callbacksDisabled = callbacksDisabled;\n    }\n\n    getDTO(filterLocation=false, filterComputed=false, filterPrivate =false){\n        var dto = {\n            serializedData: this.serialize(true, filterLocation, filterComputed, null, filterPrivate),\n            $codeError: this.$codeError,\n            $codeDirty: this.$codeDirty,\n            validationResults: this.validationResults.slice()\n\n        };\n        return dto\n    }\n\n    loadFromDTO(dto, dataReviver){\n        this.load(JSON.parse(dto.serializedData, dataReviver));\n        this.$codeError = dto.$codeError;\n        this.$codeDirty = dto.$codeDirty;\n        this.validationResults.length=0;\n        dto.validationResults.forEach(v=>{\n            this.validationResults.push(ValidationResult.createFromDTO(v))\n        })\n    }\n\n    /*This method updates only computation results/validation*/\n    updateFrom(dataModel){\n        if(this.$version>dataModel.$version){\n            log.warn(\"DataModel.updateFrom: version of current model greater than update\")\n            return;\n        }\n        var byId = {}\n        dataModel.nodes.forEach(n=>{\n            byId[n.$id] = n;\n        });\n        this.nodes.forEach((n,i)=>{\n            if(byId[n.$id]){\n                n.loadComputedValues(byId[n.$id].computed);\n            }\n        });\n        dataModel.edges.forEach(e=>{\n            byId[e.$id] = e;\n        });\n        this.edges.forEach((e,i)=>{\n            if(byId[e.$id]){\n                e.loadComputedValues(byId[e.$id].computed);\n            }\n        });\n        this.expressionScope = dataModel.expressionScope;\n        this.$codeError = dataModel.$codeError;\n        this.$codeDirty = dataModel.$codeDirty;\n        this.validationResults  = dataModel.validationResults;\n    }\n\n    getGlobalVariableNames(filterFunction = true){\n        var res = [];\n        Utils.forOwn(this.expressionScope, (value, key)=>{\n            if(filterFunction && Utils.isFunction(value)){\n                return;\n            }\n            res.push(key);\n        });\n        return res;\n    }\n\n    /*create node from serialized data*/\n    createNodeFromData(data, parent) {\n        var node, location;\n\n        if(data.location){\n            location = new domain.Point(data.location.x, data.location.y);\n        }else{\n            location = new domain.Point(0,0);\n        }\n\n        if (domain.DecisionNode.$TYPE == data.type) {\n            node = new domain.DecisionNode(location);\n        } else if (domain.ChanceNode.$TYPE == data.type) {\n            node = new domain.ChanceNode(location);\n        } else if (domain.TerminalNode.$TYPE == data.type) {\n            node = new domain.TerminalNode(location);\n        }\n        if(data.$id){\n            node.$id = data.$id;\n        }\n        if(data.$fieldStatus){\n            node.$fieldStatus = data.$fieldStatus;\n        }\n        node.name = data.name;\n\n        if(data.code){\n            node.code = data.code;\n        }\n        if (data.expressionScope) {\n            node.expressionScope = data.expressionScope\n        }\n        if(data.computed){\n            node.loadComputedValues(data.computed);\n        }\n\n        node.folded = !!data.folded;\n\n        var edgeOrNode = this.addNode(node, parent);\n        data.childEdges.forEach(ed=> {\n            var edge = this.createNodeFromData(ed.childNode, node);\n            if(Utils.isArray(ed.payoff)){\n                edge.payoff = ed.payoff;\n            }else{\n                edge.payoff = [ed.payoff, 0];\n            }\n\n            edge.probability = ed.probability;\n            edge.name = ed.name;\n            if(ed.computed){\n                edge.loadComputedValues(ed.computed);\n            }\n            if(ed.$id){\n                edge.$id = ed.$id;\n            }\n            if(ed.$fieldStatus){\n                edge.$fieldStatus = ed.$fieldStatus;\n            }\n        });\n\n        return edgeOrNode;\n    }\n\n    /*returns node or edge from parent to this node*/\n    addNode(node, parent) {\n        var self = this;\n        self.nodes.push(node);\n        if (parent) {\n            var edge = self._addChild(parent, node);\n            this._fireNodeAddedCallback(node);\n            return edge;\n        }\n\n        this._fireNodeAddedCallback(node);\n        return node;\n    }\n\n    /*injects given node into given edge*/\n    injectNode(node, edge) {\n        var parent = edge.parentNode;\n        var child = edge.childNode;\n        this.nodes.push(node);\n        node.$parent = parent;\n        edge.childNode = node;\n        this._addChild(node, child);\n        this._fireNodeAddedCallback(node);\n    }\n\n    _addChild(parent, child) {\n        var self = this;\n        var edge = new domain.Edge(parent, child);\n        self._setEdgeInitialProbability(edge);\n        self.edges.push(edge);\n\n        parent.childEdges.push(edge);\n        child.$parent = parent;\n        return edge;\n    }\n\n    _setEdgeInitialProbability(edge) {\n        if (edge.parentNode instanceof domain.ChanceNode) {\n            edge.probability = '#';\n        } else {\n            edge.probability = undefined;\n        }\n\n    }\n\n    /*removes given node and its subtree*/\n    removeNode(node, $l = 0) {\n\n        var self = this;\n        node.childEdges.forEach(e=>self.removeNode(e.childNode, $l + 1));\n\n        self._removeNode(node);\n        var parent = node.$parent;\n        if (parent) {\n            var parentEdge = Utils.find(parent.childEdges, (e, i)=> e.childNode === node);\n            if ($l == 0) {\n                self.removeEdge(parentEdge);\n            } else {\n                self._removeEdge(parentEdge);\n            }\n        }\n        this._fireNodeRemovedCallback(node);\n    }\n\n    /*removes given nodes and their subtrees*/\n    removeNodes(nodes) {\n\n        var roots = this.findSubtreeRoots(nodes);\n        roots.forEach(n=>this.removeNode(n, 0), this);\n    }\n\n    convertNode(node, typeToConvertTo){\n        var newNode;\n        if(!node.childEdges.length && node.$parent){\n            newNode = this.createNodeByType(typeToConvertTo, node.location);\n        }else{\n            if(node instanceof domain.DecisionNode && typeToConvertTo==domain.ChanceNode.$TYPE){\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            }else if(typeToConvertTo==domain.DecisionNode.$TYPE){\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            }\n        }\n\n        if(newNode){\n            newNode.name=node.name;\n            this.replaceNode(newNode, node);\n            newNode.childEdges.forEach(e=>this._setEdgeInitialProbability(e));\n            this._fireNodeAddedCallback(newNode);\n        }\n\n    }\n\n    createNodeByType(type, location){\n        if(type==domain.DecisionNode.$TYPE){\n            return new domain.DecisionNode(location)\n        }else if(type==domain.ChanceNode.$TYPE){\n            return new domain.ChanceNode(location)\n        }else if(type==domain.TerminalNode.$TYPE){\n            return new domain.TerminalNode(location)\n        }\n    }\n\n    replaceNode(newNode, oldNode){\n        var parent = oldNode.$parent;\n        newNode.$parent = parent;\n\n        if(parent){\n            var parentEdge = Utils.find(newNode.$parent.childEdges, e=>e.childNode===oldNode);\n            parentEdge.childNode = newNode;\n        }\n\n        newNode.childEdges = oldNode.childEdges;\n        newNode.childEdges.forEach(e=>e.parentNode=newNode);\n\n        var index = this.nodes.indexOf(oldNode);\n        if(~index){\n            this.nodes[index]=newNode;\n        }\n    }\n\n    getRoots() {\n        return this.nodes.filter(n=>!n.$parent);\n    }\n\n    findSubtreeRoots(nodes) {\n        return nodes.filter(n=>!n.$parent || nodes.indexOf(n.$parent) === -1);\n    }\n\n    /*creates detached clone of given node*/\n    cloneSubtree(nodeToCopy, cloneComputedValues) {\n        var self = this;\n        var clone = this.cloneNode(nodeToCopy);\n\n        nodeToCopy.childEdges.forEach(e=> {\n            var childClone = self.cloneSubtree(e.childNode, cloneComputedValues);\n            childClone.$parent = clone;\n            var edge = Utils.clone(e);\n            edge.$id = Utils.guid();\n            edge.parentNode = clone;\n            edge.childNode = childClone;\n            edge.payoff = Utils.cloneDeep(e.payoff);\n            edge.computed = {};\n            if (cloneComputedValues) {\n                edge.computed = Utils.cloneDeep(e.computed);\n                childClone.computed = Utils.cloneDeep(e.childNode.computed)\n            }\n            clone.childEdges.push(edge);\n        });\n        if (cloneComputedValues) {\n            clone.computed = Utils.cloneDeep(nodeToCopy.computed)\n        }\n        return clone;\n    }\n\n    /*attaches detached subtree to given parent*/\n    attachSubtree(nodeToAttach, parent) {\n        var self = this;\n        var nodeOrEdge = self.addNode(nodeToAttach, parent);\n\n        nodeToAttach.expressionScope = null;\n\n        var childEdges = self.getAllDescendantEdges(nodeToAttach);\n        childEdges.forEach(e=> {\n            self.edges.push(e);\n            self.nodes.push(e.childNode);\n            e.childNode.expressionScope = null;\n        });\n\n        return nodeOrEdge;\n    }\n\n    cloneNodes(nodes) {\n        var roots = []\n        //TODO\n    }\n\n    /*shallow clone without parent and children*/\n    cloneNode(node) {\n        var clone = Utils.clone(node)\n        clone.$id = Utils.guid();\n        clone.location = Utils.clone(node.location);\n        clone.computed = Utils.clone(node.computed);\n        clone.$parent = null;\n        clone.childEdges = [];\n        return clone;\n    }\n\n    findNodeById(id) {\n        return Utils.find(this.nodes, n=>n.$id == id);\n    }\n\n    findEdgeById(id) {\n        return Utils.find(this.edges, e=>e.$id == id);\n    }\n\n    findById(id) {\n        var node = this.findNodeById(id);\n        if (node) {\n            return node;\n        }\n        return this.findEdgeById(id);\n    }\n\n    _removeNode(node) {// simply removes node from node list\n        var index = this.nodes.indexOf(node);\n        if (index > -1) {\n            this.nodes.splice(index, 1);\n        }\n    }\n\n    removeEdge(edge) {\n        var index = edge.parentNode.childEdges.indexOf(edge);\n        if (index > -1) {\n            edge.parentNode.childEdges.splice(index, 1);\n        }\n        this._removeEdge(edge);\n    }\n\n    _removeEdge(edge) { //removes edge from edge list without removing connected nodes\n        var index = this.edges.indexOf(edge);\n        if (index > -1) {\n            this.edges.splice(index, 1);\n        }\n    }\n\n    _removeNodes(nodesToRemove) {\n        this.nodes = this.nodes.filter(n=>nodesToRemove.indexOf(n) === -1);\n    }\n\n    _removeEdges(edgesToRemove) {\n        this.edges = this.edges.filter(e=>edgesToRemove.indexOf(e) === -1);\n    }\n\n    getAllDescendantEdges(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=> {\n            result.push(e);\n            if (e.childNode) {\n                result.push(...self.getAllDescendantEdges(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllDescendantNodes(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=> {\n            if (e.childNode) {\n                result.push(e.childNode);\n                result.push(...self.getAllDescendantNodes(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllNodesInSubtree(node) {\n        var descendants = this.getAllDescendantNodes(node);\n        descendants.unshift(node);\n        return descendants;\n    }\n\n    isUndoAvailable() {\n        return !!this.undoStack.length\n    }\n\n    isRedoAvailable() {\n        return !!this.redoStack.length\n    }\n\n    createStateSnapshot(revertConf){\n        return {\n            revertConf: revertConf,\n            nodes: Utils.cloneDeep(this.nodes),\n            edges: Utils.cloneDeep(this.edges),\n            texts: Utils.cloneDeep(this.texts),\n            payoffNames: Utils.cloneDeep(this.payoffNames),\n            defaultCriterion1Weight: Utils.cloneDeep(this.defaultCriterion1Weight),\n            weightLowerBound: Utils.cloneDeep(this.weightLowerBound),\n            weightUpperBound: Utils.cloneDeep(this.weightUpperBound),\n            expressionScope: Utils.cloneDeep(this.expressionScope),\n            code: this.code,\n            $codeError: this.$codeError\n        }\n    }\n\n\n    saveStateFromSnapshot(state){\n        this.redoStack.length = 0;\n\n        this._pushToStack(this.undoStack, state);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    saveState(revertConf) {\n        this.saveStateFromSnapshot(this.createStateSnapshot(revertConf));\n        return this;\n    }\n\n    undo() {\n        var self = this;\n        var newState = this.undoStack.pop();\n        if (!newState) {\n            return;\n        }\n\n        this._pushToStack(this.redoStack, {\n            revertConf: newState.revertConf,\n            nodes: self.nodes,\n            edges: self.edges,\n            texts: self.texts,\n            payoffNames: self.payoffNames,\n            defaultCriterion1Weight: self.defaultCriterion1Weight,\n            weightLowerBound: self.weightLowerBound,\n            weightUpperBound: self.weightUpperBound,\n            expressionScope: self.expressionScope,\n            code: self.code,\n            $codeError: self.$codeError\n\n        });\n\n        this._setNewState(newState);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    redo() {\n        var self = this;\n        var newState = this.redoStack.pop();\n        if (!newState) {\n            return;\n        }\n\n        this._pushToStack(this.undoStack, {\n            revertConf: newState.revertConf,\n            nodes: self.nodes,\n            edges: self.edges,\n            texts: self.texts,\n            payoffNames: self.payoffNames,\n            defaultCriterion1Weight: self.defaultCriterion1Weight,\n            weightLowerBound: self.weightLowerBound,\n            weightUpperBound: self.weightUpperBound,\n            expressionScope: self.expressionScope,\n            code: self.code,\n            $codeError: self.$codeError\n        });\n\n        this._setNewState(newState, true);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    clear() {\n        this.nodes.length = 0;\n        this.edges.length = 0;\n        this.undoStack.length = 0;\n        this.redoStack.length = 0;\n        this.texts.length = 0;\n        this.clearExpressionScope();\n        this.code = '';\n        this.$codeError = null;\n        this.$codeDirty = false;\n\n        this.payoffNames = [];\n        this.defaultCriterion1Weight = 1;\n        this.weightLowerBound = 0;\n        this.weightUpperBound = Infinity;\n    }\n\n    addText(text) {\n        this.texts.push(text);\n\n        this._fireTextAddedCallback(text);\n    }\n\n    removeTexts(texts) {\n        texts.forEach(t=>this.removeText(t));\n    }\n\n    removeText(text) {\n        var index = this.texts.indexOf(text);\n        if (index > -1) {\n            this.texts.splice(index, 1);\n            this._fireTextRemovedCallback(text);\n        }\n    }\n\n    clearExpressionScope() {\n        Utils.forOwn(this.expressionScope, (value, key)=> {\n            delete this.expressionScope[key];\n        });\n    }\n\n    reversePayoffs(){\n        this.payoffNames.reverse();\n        this.edges.forEach(e=>e.payoff.reverse())\n    }\n\n    _setNewState(newState, redo) {\n        var nodeById = Utils.getObjectByIdMap(newState.nodes);\n        var edgeById = Utils.getObjectByIdMap(newState.edges);\n        this.nodes = newState.nodes;\n        this.edges = newState.edges;\n        this.texts = newState.texts;\n        this.payoffNames = newState.payoffNames;\n        this.defaultCriterion1Weight = newState.defaultCriterion1Weight;\n        this.weightLowerBound = newState.weightLowerBound;\n        this.weightUpperBound = newState.weightUpperBound;\n        this.expressionScope = newState.expressionScope;\n        this.code = newState.code;\n        this.$codeError  = newState.$codeError\n\n        this.nodes.forEach(n=> {\n            for (var i = 0; i < n.childEdges.length; i++) {\n                var edge = edgeById[n.childEdges[i].$id];\n                n.childEdges[i] = edge;\n                edge.parentNode = n;\n                edge.childNode = nodeById[edge.childNode.$id];\n            }\n\n        });\n\n        if (newState.revertConf) {\n            if (!redo && newState.revertConf.onUndo) {\n                newState.revertConf.onUndo(newState.revertConf.data);\n            }\n            if (redo && newState.revertConf.onRedo) {\n                newState.revertConf.onRedo(newState.revertConf.data);\n            }\n\n\n        }\n        this.revertConf = newState.revertConf;\n    }\n\n\n    _pushToStack(stack, obj) {\n        if (stack.length >= this.maxStackSize) {\n            stack.shift();\n        }\n        stack.push(obj);\n    }\n\n    _fireUndoRedoCallback() {\n        if (!this.callbacksDisabled && this.undoRedoStateChangedCallback) {\n            this.undoRedoStateChangedCallback();\n        }\n    }\n\n    _fireNodeAddedCallback(node) {\n        if (!this.callbacksDisabled && this.nodeAddedCallback) {\n            this.nodeAddedCallback(node);\n        }\n    }\n\n    _fireNodeRemovedCallback(node) {\n        if (!this.callbacksDisabled && this.nodeRemovedCallback) {\n            this.nodeRemovedCallback(node);\n        }\n    }\n\n    _fireTextAddedCallback(text) {\n        if (!this.callbacksDisabled && this.textAddedCallback) {\n            this.textAddedCallback(text);\n        }\n    }\n\n    _fireTextRemovedCallback(text) {\n        if (!this.callbacksDisabled && this.textRemovedCallback) {\n            this.textRemovedCallback(text);\n        }\n    }\n}\n","import {ObjectWithComputedValues} from \"./object-with-computed-values\";\n\nexport class Edge extends ObjectWithComputedValues {\n    parentNode;\n    childNode;\n\n    name = '';\n    probability = undefined;\n    payoff = [0, 0];\n\n    $DISPLAY_VALUE_NAMES = ['probability', 'payoff', 'optimal'];\n\n    constructor(parentNode, childNode, name, payoff, probability,) {\n        super();\n        this.parentNode = parentNode;\n        this.childNode = childNode;\n\n        if (name !== undefined) {\n            this.name = name;\n        }\n        if (probability !== undefined) {\n            this.probability = probability;\n        }\n        if (payoff !== undefined) {\n            this.payoff = payoff\n        }\n\n    }\n\n    setName(name) {\n        this.name = name;\n        return this;\n    }\n\n    setProbability(probability) {\n        this.probability = probability;\n        return this;\n    }\n\n    setPayoff(payoff, index = 0) {\n        this.payoff[index] = payoff;\n        return this;\n    }\n\n    computedBaseProbability(val) {\n        return this.computedValue(null, 'probability', val);\n    }\n\n    computedBasePayoff(val, index = 0) {\n        return this.computedValue(null, 'payoff[' + index + ']', val);\n    }\n\n    displayProbability(val) {\n        return this.displayValue('probability', val);\n    }\n\n    displayPayoff(val, index = 0) {\n        return this.displayValue('payoff[' + index + ']', val);\n    }\n}\n","export * from './node/node'\nexport * from './node/decision-node'\nexport * from './node/chance-node'\nexport * from './node/terminal-node'\nexport * from './edge'\nexport * from './point'\nexport * from './text'\n","import {Node} from './node'\n\nexport class ChanceNode extends Node{\n\n    static $TYPE = 'chance';\n\n    constructor(location){\n        super(ChanceNode.$TYPE, location);\n    }\n}\n","import {Node} from './node'\n\nexport class DecisionNode extends Node{\n\n    static $TYPE = 'decision';\n\n    constructor(location){\n        super(DecisionNode.$TYPE, location);\n    }\n}\n","import {Point} from '../point'\nimport {ObjectWithComputedValues} from '../object-with-computed-values'\n\nexport class Node extends ObjectWithComputedValues{\n\n    type;\n    childEdges=[];\n    name='';\n\n    location; //Point\n\n    code='';\n    $codeDirty = false; // is code changed without reevaluation?\n    $codeError = null; //code evaluation errors\n\n    expressionScope=null;\n\n    folded = false; // is node folded along with its subtree\n\n    $DISPLAY_VALUE_NAMES = ['childrenPayoff', 'aggregatedPayoff', 'probabilityToEnter', 'optimal']\n\n    constructor(type, location){\n        super();\n        this.location=location;\n        if(!location){\n            this.location = new Point(0,0);\n        }\n        this.type=type;\n    }\n\n    setName(name){\n        this.name = name;\n        return this;\n    }\n\n    moveTo(x,y, withChildren){ //move to new location\n        if(withChildren){\n            var dx = x-this.location.x;\n            var dy = y-this.location.y;\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\n        }\n\n        this.location.moveTo(x,y);\n        return this;\n    }\n\n    move(dx, dy, withChildren){ //move by vector\n        if(withChildren){\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\n        }\n        this.location.move(dx, dy);\n        return this;\n    }\n}\n","import {Node} from './node'\n\nexport class TerminalNode extends Node{\n\n    static $TYPE = 'terminal';\n\n    constructor(location){\n        super(TerminalNode.$TYPE, location);\n    }\n}\n","import {Utils} from 'sd-utils'\n\nimport {ObjectWithIdAndEditableFields} from \"./object-with-id-and-editable-fields\";\n\nexport class ObjectWithComputedValues extends ObjectWithIdAndEditableFields{\n\n    computed={}; //computed values\n\n    /*get or set computed value*/\n    computedValue(ruleName, fieldPath, value){\n        var path = 'computed.';\n        if(ruleName){\n            path+=ruleName+'.';\n        }\n        path+=fieldPath;\n        if(value===undefined){\n            return  Utils.get(this, path, null);\n        }\n        Utils.set(this, path, value);\n        return value;\n    }\n\n    clearComputedValues(ruleName){\n        if(ruleName==undefined){\n            this.computed={};\n            return;\n        }\n        if(Utils.isArray(ruleName)){\n            ruleName.forEach(n=>{\n                this.computed[n]={};\n            });\n            return;\n        }\n        this.computed[ruleName]={};\n    }\n\n    clearDisplayValues(){\n        this.computed['$displayValues']={};\n    }\n\n    displayValue(fieldPath, value){\n        return this.computedValue(null, '$displayValues.'+fieldPath, value);\n    }\n\n    loadComputedValues(computed){\n        this.computed = Utils.cloneDeep(computed);\n    }\n}\n","import {Utils} from 'sd-utils'\n\nexport class ObjectWithIdAndEditableFields {\n\n    $id = Utils.guid(); //internal id\n    $fieldStatus={};\n\n    getFieldStatus(fieldPath){\n        if(!Utils.get(this.$fieldStatus, fieldPath, null)){\n            Utils.set(this.$fieldStatus, fieldPath, {\n                valid: {\n                    syntax: true,\n                    value: true\n                }\n            });\n        }\n        return Utils.get(this.$fieldStatus, fieldPath);\n    }\n\n    setSyntaxValidity(fieldPath, valid){\n        var fieldStatus = this.getFieldStatus(fieldPath);\n        fieldStatus.valid.syntax = valid;\n    }\n\n    setValueValidity(fieldPath, valid){\n        var fieldStatus = this.getFieldStatus(fieldPath);\n        fieldStatus.valid.value = valid;\n    }\n\n    isFieldValid(fieldPath, syntax=true, value=true){\n        var fieldStatus = this.getFieldStatus(fieldPath);\n        if(syntax && value) {\n            return fieldStatus.valid.syntax && fieldStatus.valid.value;\n        }\n        if(syntax) {\n            return fieldStatus.valid.syntax\n        }\n        return fieldStatus.valid.value;\n    }\n\n\n}\n","export class Point {\n    x;\n    y;\n    constructor(x,y){\n        if(x instanceof Point){\n            y=x.y;\n            x=x.x\n        }else if(Array.isArray(x)){\n            y=x[1];\n            x=x[0];\n        }\n        this.x=x;\n        this.y=y;\n    }\n\n    moveTo(x,y){\n        if(Array.isArray(x)){\n            y=x[1];\n            x=x[0];\n        }\n        this.x=x;\n        this.y=y;\n        return this;\n    }\n\n    move(dx,dy){ //move by vector\n        if(Array.isArray(dx)){\n            dy=dx[1];\n            dx=dx[0];\n        }\n        this.x+=dx;\n        this.y+=dy;\n        return this;\n    }\n\n}\n","import {Point} from \"./point\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectWithIdAndEditableFields} from \"./object-with-id-and-editable-fields\";\n\nexport class Text extends ObjectWithIdAndEditableFields{\n\n    value='';\n    location; //Point\n\n    constructor(location, value){\n        super();\n        this.location=location;\n        if(!location){\n            this.location = new Point(0,0);\n        }\n\n        if(value) {\n            this.value = value;\n        }\n    }\n\n    moveTo(x,y){ //move to new location\n        this.location.moveTo(x,y);\n        return this;\n    }\n\n    move(dx, dy){ //move by vector\n        this.location.move(dx, dy);\n        return this;\n    }\n}\n","import * as domain from './domain'\nexport {domain}\nexport * from './data-model'\nexport * from './validation-result'\n","import {Utils} from \"sd-utils\";\n\nexport class ValidationResult{\n\n\n    errors = {};\n    warnings = {};\n    objectIdToError={};\n\n    addError(error, obj){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var name = error.name;\n        var errorsByName = this.errors[name];\n        if(!errorsByName){\n            errorsByName=[];\n            this.errors[name]=errorsByName;\n        }\n        var objE = this.objectIdToError[obj.$id];\n        if(!objE){\n            objE=[];\n            this.objectIdToError[obj.$id]= objE;\n        }\n        errorsByName.push(obj);\n        objE.push(error);\n    }\n\n    addWarning(name, obj){\n        var e = this.warnings[name];\n        if(!e){\n            e=[];\n            this.warnings[name]=e;\n        }\n        e.push(obj)\n    }\n\n    isValid(){\n        return Object.getOwnPropertyNames(this.errors).length === 0\n    }\n\n    static createFromDTO(dto){\n        var v = new ValidationResult();\n        v.errors = dto.errors;\n        v.warnings = dto.warnings;\n        v.objectIdToError = dto.objectIdToError;\n        return v;\n    }\n}\n","export * from './src/index'\n"]}