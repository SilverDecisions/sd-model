{"version":3,"sources":["node_modules/browser-pack/_prelude.js","sd-model.js","src/data-model.js","src/domain/edge.js","src/domain/index.js","src/domain/node/chance-node.js","src/domain/node/decision-node.js","src/domain/node/node.js","src/domain/node/terminal-node.js","src/domain/object-with-computed-values.js","src/domain/object-with-id-and-editable-fields.js","src/domain/point.js","src/domain/text.js","src/index.js","src/validation-result.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","defineProperty","value","DataModel","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_sdUtils","_domain","domain","_validationResult","data","this","nodes","edges","texts","expressionScope","$codeError","$codeDirty","$version","validationResults","maxStackSize","undoStack","redoStack","undoRedoStateChangedCallback","nodeAddedCallback","nodeRemovedCallback","textAddedCallback","textRemovedCallback","callbacksDisabled","load","filterLocation","arguments","filterComputed","replacer","filterPrivate","k","v","Utils","startsWith","stringify","trees","getRoots","getJsonReplacer","_this","clear","forEach","nodeData","createNodeFromData","textData","location","Point","x","y","text","Text","push","clearExpressionScope","extend","dto","serializedData","serialize","slice","dataReviver","_this2","JSON","parse","ValidationResult","createFromDTO","dataModel","log","warn","byId","$id","loadComputedValues","computed","parent","node","_this3","DecisionNode","$TYPE","type","ChanceNode","TerminalNode","$fieldStatus","name","edgeOrNode","addNode","childEdges","ed","edge","childNode","payoff","probability","self","_addChild","_fireNodeAddedCallback","parentNode","child","$parent","Edge","_setEdgeInitialProbability","$l","removeNode","_removeNode","parentEdge","find","removeEdge","_removeEdge","_fireNodeRemovedCallback","_this4","roots","findSubtreeRoots","typeToConvertTo","newNode","_this5","createNodeByType","replaceNode","oldNode","index","indexOf","filter","nodeToCopy","cloneComputedValues","clone","cloneNode","childClone","cloneSubtree","cloneDeep","nodeToAttach","nodeOrEdge","getAllDescendantEdges","guid","id","findNodeById","findEdgeById","splice","nodesToRemove","edgesToRemove","result","apply","getAllDescendantNodes","descendants","unshift","revertConf","state","_pushToStack","_fireUndoRedoCallback","saveStateFromSnapshot","createStateSnapshot","newState","pop","_setNewState","_fireTextAddedCallback","_this6","removeText","_fireTextRemovedCallback","_this7","forOwn","redo","nodeById","getObjectByIdMap","edgeById","onUndo","onRedo","stack","shift","./domain","./validation-result","sd-utils","2","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Symbol","iterator","_objectWithComputedValues","_ObjectWithComputedVa","getPrototypeOf","$DISPLAY_VALUE_NAMES","val","computedValue","displayValue","ObjectWithComputedValues","./object-with-computed-values","3","_node","keys","get","_decisionNode","_chanceNode","_terminalNode","_edge","_point","_text","./edge","./node/chance-node","./node/decision-node","./node/node","./node/terminal-node","./point","./text","4","_Node","Node","./node","5","6","withChildren","dx","dy","move","moveTo","../object-with-computed-values","../point","7","8","_objectWithIdAndEditableFields","_ObjectWithIdAndEdita","_ref","_temp","_ret","_len","args","_key","concat","ruleName","fieldName","path","set","ObjectWithIdAndEditableFields","./object-with-id-and-editable-fields","9","valid","syntax","fieldStatus","getFieldStatus","10","11","12","_dataModel","./data-model","13","errors","warnings","objectIdToError","error","isString","errorsByName","objE","getOwnPropertyNames","sd-model","_index","./src/index"],"mappings":"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","file":"sd-model.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DataModel = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _domain = require('./domain');\n\nvar domain = _interopRequireWildcard(_domain);\n\nvar _validationResult = require('./validation-result');\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n * Data model manager\n * */\nvar DataModel = exports.DataModel = function () {\n    //code evaluation errors\n    //global expression scope\n    function DataModel(data) {\n        _classCallCheck(this, DataModel);\n\n        this.nodes = [];\n        this.edges = [];\n        this.texts = [];\n        this.expressionScope = {};\n        this.code = \"\";\n        this.$codeError = null;\n        this.$codeDirty = false;\n        this.$version = 1;\n        this.validationResults = [];\n        this.maxStackSize = 20;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.undoRedoStateChangedCallback = null;\n        this.nodeAddedCallback = null;\n        this.nodeRemovedCallback = null;\n        this.textAddedCallback = null;\n        this.textRemovedCallback = null;\n        this.callbacksDisabled = false;\n\n        if (data) {\n            this.load(data);\n        }\n    }\n\n    // undo / redo\n    // is code changed without reevaluation?\n    //global expression code\n    //floating texts\n\n    _createClass(DataModel, [{\n        key: 'getJsonReplacer',\n        value: function getJsonReplacer() {\n            var filterLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var filterComputed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var replacer = arguments[2];\n            var filterPrivate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return function (k, v) {\n\n                if (filterPrivate && _sdUtils.Utils.startsWith(k, '$') || k == 'parentNode') {\n                    return undefined;\n                }\n                if (filterLocation && k == 'location') {\n                    return undefined;\n                }\n                if (filterComputed && k == 'computed') {\n                    return undefined;\n                }\n\n                if (replacer) {\n                    return replacer(k, v);\n                }\n\n                return v;\n            };\n        }\n    }, {\n        key: 'serialize',\n        value: function serialize() {\n            var stringify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            var filterLocation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var filterComputed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var replacer = arguments[3];\n            var filterPrivate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n            var data = {\n                code: this.code,\n                expressionScope: this.expressionScope,\n                trees: this.getRoots(),\n                texts: this.texts\n            };\n\n            if (!stringify) {\n                return data;\n            }\n\n            return _sdUtils.Utils.stringify(data, this.getJsonReplacer(filterLocation, filterComputed, replacer, filterPrivate), []);\n        }\n\n        /*Loads serialized data*/\n\n    }, {\n        key: 'load',\n        value: function load(data) {\n            var _this = this;\n\n            //roots, texts, code, expressionScope\n            var callbacksDisabled = this.callbacksDisabled;\n            this.callbacksDisabled = true;\n\n            this.clear();\n\n            data.trees.forEach(function (nodeData) {\n                var node = _this.createNodeFromData(nodeData);\n            });\n\n            if (data.texts) {\n                data.texts.forEach(function (textData) {\n                    var location = new domain.Point(textData.location.x, textData.location.y);\n                    var text = new domain.Text(location, textData.value);\n                    _this.texts.push(text);\n                });\n            }\n\n            this.clearExpressionScope();\n            this.code = data.code || '';\n\n            if (data.expressionScope) {\n                _sdUtils.Utils.extend(this.expressionScope, data.expressionScope);\n            }\n            this.callbacksDisabled = callbacksDisabled;\n        }\n    }, {\n        key: 'getDTO',\n        value: function getDTO() {\n            var filterLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var filterComputed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var filterPrivate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var dto = {\n                serializedData: this.serialize(true, filterLocation, filterComputed, null, filterPrivate),\n                $codeError: this.$codeError,\n                $codeDirty: this.$codeDirty,\n                validationResults: this.validationResults.slice()\n\n            };\n            return dto;\n        }\n    }, {\n        key: 'loadFromDTO',\n        value: function loadFromDTO(dto, dataReviver) {\n            var _this2 = this;\n\n            this.load(JSON.parse(dto.serializedData, dataReviver));\n            this.$codeError = dto.$codeError;\n            this.$codeDirty = dto.$codeDirty;\n            this.validationResults.length = 0;\n            dto.validationResults.forEach(function (v) {\n                _this2.validationResults.push(_validationResult.ValidationResult.createFromDTO(v));\n            });\n        }\n\n        /*This method updates only computation results/validation*/\n\n    }, {\n        key: 'updateFrom',\n        value: function updateFrom(dataModel) {\n            if (this.$version > dataModel.$version) {\n                _sdUtils.log.warn(\"DataModel.updateFrom: version of current model greater than update\");\n                return;\n            }\n            var byId = {};\n            dataModel.nodes.forEach(function (n) {\n                byId[n.$id] = n;\n            });\n            this.nodes.forEach(function (n, i) {\n                if (byId[n.$id]) {\n                    n.loadComputedValues(byId[n.$id].computed);\n                }\n            });\n            dataModel.edges.forEach(function (e) {\n                byId[e.$id] = e;\n            });\n            this.edges.forEach(function (e, i) {\n                if (byId[e.$id]) {\n                    e.loadComputedValues(byId[e.$id].computed);\n                }\n            });\n            this.expressionScope = dataModel.expressionScope;\n            this.$codeError = dataModel.$codeError;\n            this.$codeDirty = dataModel.$codeDirty;\n            this.validationResults = dataModel.validationResults;\n        }\n\n        /*create node from serialized data*/\n\n    }, {\n        key: 'createNodeFromData',\n        value: function createNodeFromData(data, parent) {\n            var _this3 = this;\n\n            var node, location;\n\n            if (data.location) {\n                location = new domain.Point(data.location.x, data.location.y);\n            } else {\n                location = new domain.Point(0, 0);\n            }\n\n            if (domain.DecisionNode.$TYPE == data.type) {\n                node = new domain.DecisionNode(location);\n            } else if (domain.ChanceNode.$TYPE == data.type) {\n                node = new domain.ChanceNode(location);\n            } else if (domain.TerminalNode.$TYPE == data.type) {\n                node = new domain.TerminalNode(location);\n            }\n            if (data.$id) {\n                node.$id = data.$id;\n            }\n            if (data.$fieldStatus) {\n                node.$fieldStatus = data.$fieldStatus;\n            }\n            node.name = data.name;\n\n            if (data.code) {\n                node.code = data.code;\n            }\n            if (data.expressionScope) {\n                node.expressionScope = data.expressionScope;\n            }\n            if (data.computed) {\n                node.loadComputedValues(data.computed);\n            }\n\n            var edgeOrNode = this.addNode(node, parent);\n            data.childEdges.forEach(function (ed) {\n                var edge = _this3.createNodeFromData(ed.childNode, node);\n                edge.payoff = ed.payoff;\n                edge.probability = ed.probability;\n                edge.name = ed.name;\n                if (ed.computed) {\n                    edge.loadComputedValues(ed.computed);\n                }\n                if (ed.$id) {\n                    edge.$id = ed.$id;\n                }\n                if (ed.$fieldStatus) {\n                    edge.$fieldStatus = ed.$fieldStatus;\n                }\n            });\n\n            return edgeOrNode;\n        }\n\n        /*returns node or edge from parent to this node*/\n\n    }, {\n        key: 'addNode',\n        value: function addNode(node, parent) {\n            var self = this;\n            self.nodes.push(node);\n            if (parent) {\n                var edge = self._addChild(parent, node);\n                this._fireNodeAddedCallback(node);\n                return edge;\n            }\n\n            this._fireNodeAddedCallback(node);\n            return node;\n        }\n\n        /*injects given node into given edge*/\n\n    }, {\n        key: 'injectNode',\n        value: function injectNode(node, edge) {\n            var parent = edge.parentNode;\n            var child = edge.childNode;\n            this.nodes.push(node);\n            node.$parent = parent;\n            edge.childNode = node;\n            this._addChild(node, child);\n            this._fireNodeAddedCallback(node);\n        }\n    }, {\n        key: '_addChild',\n        value: function _addChild(parent, child) {\n            var self = this;\n            var edge = new domain.Edge(parent, child);\n            self._setEdgeInitialProbability(edge);\n            self.edges.push(edge);\n\n            parent.childEdges.push(edge);\n            child.$parent = parent;\n            return edge;\n        }\n    }, {\n        key: '_setEdgeInitialProbability',\n        value: function _setEdgeInitialProbability(edge) {\n            if (edge.parentNode instanceof domain.ChanceNode) {\n                edge.probability = '#';\n            } else {\n                edge.probability = undefined;\n            }\n        }\n\n        /*removes given node and its subtree*/\n\n    }, {\n        key: 'removeNode',\n        value: function removeNode(node) {\n            var $l = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            var self = this;\n            node.childEdges.forEach(function (e) {\n                return self.removeNode(e.childNode, $l + 1);\n            });\n\n            self._removeNode(node);\n            var parent = node.$parent;\n            if (parent) {\n                var parentEdge = _sdUtils.Utils.find(parent.childEdges, function (e, i) {\n                    return e.childNode === node;\n                });\n                if ($l == 0) {\n                    self.removeEdge(parentEdge);\n                } else {\n                    self._removeEdge(parentEdge);\n                }\n            }\n            this._fireNodeRemovedCallback(node);\n        }\n\n        /*removes given nodes and their subtrees*/\n\n    }, {\n        key: 'removeNodes',\n        value: function removeNodes(nodes) {\n            var _this4 = this;\n\n            var roots = this.findSubtreeRoots(nodes);\n            roots.forEach(function (n) {\n                return _this4.removeNode(n, 0);\n            }, this);\n        }\n    }, {\n        key: 'convertNode',\n        value: function convertNode(node, typeToConvertTo) {\n            var _this5 = this;\n\n            var newNode;\n            if (!node.childEdges.length && node.$parent) {\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            } else {\n                if (node instanceof domain.DecisionNode && typeToConvertTo == domain.ChanceNode.$TYPE) {\n                    newNode = this.createNodeByType(typeToConvertTo, node.location);\n                } else if (typeToConvertTo == domain.DecisionNode.$TYPE) {\n                    newNode = this.createNodeByType(typeToConvertTo, node.location);\n                }\n            }\n\n            if (newNode) {\n                newNode.name = node.name;\n                this.replaceNode(newNode, node);\n                newNode.childEdges.forEach(function (e) {\n                    return _this5._setEdgeInitialProbability(e);\n                });\n                this._fireNodeAddedCallback(newNode);\n            }\n        }\n    }, {\n        key: 'createNodeByType',\n        value: function createNodeByType(type, location) {\n            if (type == domain.DecisionNode.$TYPE) {\n                return new domain.DecisionNode(location);\n            } else if (type == domain.ChanceNode.$TYPE) {\n                return new domain.ChanceNode(location);\n            } else if (type == domain.TerminalNode.$TYPE) {\n                return new domain.TerminalNode(location);\n            }\n        }\n    }, {\n        key: 'replaceNode',\n        value: function replaceNode(newNode, oldNode) {\n            var parent = oldNode.$parent;\n            newNode.$parent = parent;\n\n            if (parent) {\n                var parentEdge = _sdUtils.Utils.find(newNode.$parent.childEdges, function (e) {\n                    return e.childNode === oldNode;\n                });\n                parentEdge.childNode = newNode;\n            }\n\n            newNode.childEdges = oldNode.childEdges;\n            newNode.childEdges.forEach(function (e) {\n                return e.parentNode = newNode;\n            });\n\n            var index = this.nodes.indexOf(oldNode);\n            if (~index) {\n                this.nodes[index] = newNode;\n            }\n        }\n    }, {\n        key: 'getRoots',\n        value: function getRoots() {\n            return this.nodes.filter(function (n) {\n                return !n.$parent;\n            });\n        }\n    }, {\n        key: 'findSubtreeRoots',\n        value: function findSubtreeRoots(nodes) {\n            return nodes.filter(function (n) {\n                return !n.$parent || nodes.indexOf(n.$parent) === -1;\n            });\n        }\n\n        /*creates detached clone of given node*/\n\n    }, {\n        key: 'cloneSubtree',\n        value: function cloneSubtree(nodeToCopy, cloneComputedValues) {\n            var self = this;\n            var clone = this.cloneNode(nodeToCopy);\n\n            nodeToCopy.childEdges.forEach(function (e) {\n                var childClone = self.cloneSubtree(e.childNode, cloneComputedValues);\n                childClone.$parent = clone;\n                var edge = new domain.Edge(clone, childClone, e.name, e.payoff, e.probability);\n                if (cloneComputedValues) {\n                    edge.computed = _sdUtils.Utils.cloneDeep(e.computed);\n                    childClone.computed = _sdUtils.Utils.cloneDeep(e.childNode.computed);\n                }\n                clone.childEdges.push(edge);\n            });\n            if (cloneComputedValues) {\n                clone.computed = _sdUtils.Utils.cloneDeep(nodeToCopy.computed);\n            }\n            return clone;\n        }\n\n        /*attaches detached subtree to given parent*/\n\n    }, {\n        key: 'attachSubtree',\n        value: function attachSubtree(nodeToAttach, parent) {\n            var self = this;\n            var nodeOrEdge = self.addNode(nodeToAttach, parent);\n\n            var childEdges = self.getAllDescendantEdges(nodeToAttach);\n            childEdges.forEach(function (e) {\n                self.edges.push(e);\n                self.nodes.push(e.childNode);\n            });\n\n            return nodeOrEdge;\n        }\n    }, {\n        key: 'cloneNodes',\n        value: function cloneNodes(nodes) {\n            var roots = [];\n            //TODO\n        }\n\n        /*shallow clone without parent and children*/\n\n    }, {\n        key: 'cloneNode',\n        value: function cloneNode(node) {\n            var clone = _sdUtils.Utils.clone(node);\n            clone.$id = _sdUtils.Utils.guid();\n            clone.location = _sdUtils.Utils.clone(node.location);\n            clone.computed = _sdUtils.Utils.clone(node.computed);\n            clone.$parent = null;\n            clone.childEdges = [];\n            return clone;\n        }\n    }, {\n        key: 'findNodeById',\n        value: function findNodeById(id) {\n            return _sdUtils.Utils.find(this.nodes, function (n) {\n                return n.$id == id;\n            });\n        }\n    }, {\n        key: 'findEdgeById',\n        value: function findEdgeById(id) {\n            return _sdUtils.Utils.find(this.edges, function (e) {\n                return e.$id == id;\n            });\n        }\n    }, {\n        key: 'findById',\n        value: function findById(id) {\n            var node = this.findNodeById(id);\n            if (node) {\n                return node;\n            }\n            return this.findEdgeById(id);\n        }\n    }, {\n        key: '_removeNode',\n        value: function _removeNode(node) {\n            // simply removes node from node list\n            var index = this.nodes.indexOf(node);\n            if (index > -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    }, {\n        key: 'removeEdge',\n        value: function removeEdge(edge) {\n            var index = edge.parentNode.childEdges.indexOf(edge);\n            if (index > -1) {\n                edge.parentNode.childEdges.splice(index, 1);\n            }\n            this._removeEdge(edge);\n        }\n    }, {\n        key: '_removeEdge',\n        value: function _removeEdge(edge) {\n            //removes edge from edge list without removing connected nodes\n            var index = this.edges.indexOf(edge);\n            if (index > -1) {\n                this.edges.splice(index, 1);\n            }\n        }\n    }, {\n        key: '_removeNodes',\n        value: function _removeNodes(nodesToRemove) {\n            this.nodes = this.nodes.filter(function (n) {\n                return nodesToRemove.indexOf(n) === -1;\n            });\n        }\n    }, {\n        key: '_removeEdges',\n        value: function _removeEdges(edgesToRemove) {\n            this.edges = this.edges.filter(function (e) {\n                return edgesToRemove.indexOf(e) === -1;\n            });\n        }\n    }, {\n        key: 'getAllDescendantEdges',\n        value: function getAllDescendantEdges(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                result.push(e);\n                if (e.childNode) {\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantEdges(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'getAllDescendantNodes',\n        value: function getAllDescendantNodes(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                if (e.childNode) {\n                    result.push(e.childNode);\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantNodes(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'getAllNodesInSubtree',\n        value: function getAllNodesInSubtree(node) {\n            var descendants = this.getAllDescendantNodes(node);\n            descendants.unshift(node);\n            return descendants;\n        }\n    }, {\n        key: 'isUndoAvailable',\n        value: function isUndoAvailable() {\n            return !!this.undoStack.length;\n        }\n    }, {\n        key: 'isRedoAvailable',\n        value: function isRedoAvailable() {\n            return !!this.redoStack.length;\n        }\n    }, {\n        key: 'createStateSnapshot',\n        value: function createStateSnapshot(revertConf) {\n            return {\n                revertConf: revertConf,\n                nodes: _sdUtils.Utils.cloneDeep(this.nodes),\n                edges: _sdUtils.Utils.cloneDeep(this.edges),\n                texts: _sdUtils.Utils.cloneDeep(this.texts),\n                expressionScope: _sdUtils.Utils.cloneDeep(this.expressionScope),\n                code: this.code,\n                $codeError: this.$codeError\n            };\n        }\n    }, {\n        key: 'saveStateFromSnapshot',\n        value: function saveStateFromSnapshot(state) {\n            this.redoStack.length = 0;\n\n            this._pushToStack(this.undoStack, state);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'saveState',\n        value: function saveState(revertConf) {\n            this.saveStateFromSnapshot(this.createStateSnapshot(revertConf));\n            return this;\n        }\n    }, {\n        key: 'undo',\n        value: function undo() {\n            var self = this;\n            var newState = this.undoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.redoStack, {\n                revertConf: newState.revertConf,\n                nodes: self.nodes,\n                edges: self.edges,\n                texts: self.texts,\n                expressionScope: self.expressionScope,\n                code: self.code,\n                $codeError: self.$codeError\n\n            });\n\n            this._setNewState(newState);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'redo',\n        value: function redo() {\n            var self = this;\n            var newState = this.redoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.undoStack, {\n                revertConf: newState.revertConf,\n                nodes: self.nodes,\n                edges: self.edges,\n                texts: self.texts,\n                expressionScope: self.expressionScope,\n                code: self.code,\n                $codeError: self.$codeError\n            });\n\n            this._setNewState(newState, true);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.nodes.length = 0;\n            this.edges.length = 0;\n            this.undoStack.length = 0;\n            this.redoStack.length = 0;\n            this.texts.length = 0;\n            this.clearExpressionScope();\n            this.code = '';\n            this.$codeError = null;\n            this.$codeDirty = false;\n        }\n    }, {\n        key: 'addText',\n        value: function addText(text) {\n            this.texts.push(text);\n\n            this._fireTextAddedCallback(text);\n        }\n    }, {\n        key: 'removeTexts',\n        value: function removeTexts(texts) {\n            var _this6 = this;\n\n            texts.forEach(function (t) {\n                return _this6.removeText(t);\n            });\n        }\n    }, {\n        key: 'removeText',\n        value: function removeText(text) {\n            var index = this.texts.indexOf(text);\n            if (index > -1) {\n                this.texts.splice(index, 1);\n                this._fireTextRemovedCallback(text);\n            }\n        }\n    }, {\n        key: 'clearExpressionScope',\n        value: function clearExpressionScope() {\n            var _this7 = this;\n\n            _sdUtils.Utils.forOwn(this.expressionScope, function (value, key) {\n                delete _this7.expressionScope[key];\n            });\n        }\n    }, {\n        key: '_setNewState',\n        value: function _setNewState(newState, redo) {\n            var nodeById = _sdUtils.Utils.getObjectByIdMap(newState.nodes);\n            var edgeById = _sdUtils.Utils.getObjectByIdMap(newState.edges);\n            this.nodes = newState.nodes;\n            this.edges = newState.edges;\n            this.texts = newState.texts;\n            this.expressionScope = newState.expressionScope;\n            this.code = newState.code;\n            this.$codeError = newState.$codeError;\n\n            this.nodes.forEach(function (n) {\n                for (var i = 0; i < n.childEdges.length; i++) {\n                    var edge = edgeById[n.childEdges[i].$id];\n                    n.childEdges[i] = edge;\n                    edge.parentNode = n;\n                    edge.childNode = nodeById[edge.childNode.$id];\n                }\n            });\n\n            if (newState.revertConf) {\n                if (!redo && newState.revertConf.onUndo) {\n                    newState.revertConf.onUndo(newState.revertConf.data);\n                }\n                if (redo && newState.revertConf.onRedo) {\n                    newState.revertConf.onRedo(newState.revertConf.data);\n                }\n            }\n            this.revertConf = newState.revertConf;\n        }\n    }, {\n        key: '_pushToStack',\n        value: function _pushToStack(stack, obj) {\n            if (stack.length >= this.maxStackSize) {\n                stack.shift();\n            }\n            stack.push(obj);\n        }\n    }, {\n        key: '_fireUndoRedoCallback',\n        value: function _fireUndoRedoCallback() {\n            if (!this.callbacksDisabled && this.undoRedoStateChangedCallback) {\n                this.undoRedoStateChangedCallback();\n            }\n        }\n    }, {\n        key: '_fireNodeAddedCallback',\n        value: function _fireNodeAddedCallback(node) {\n            if (!this.callbacksDisabled && this.nodeAddedCallback) {\n                this.nodeAddedCallback(node);\n            }\n        }\n    }, {\n        key: '_fireNodeRemovedCallback',\n        value: function _fireNodeRemovedCallback(node) {\n            if (!this.callbacksDisabled && this.nodeRemovedCallback) {\n                this.nodeRemovedCallback(node);\n            }\n        }\n    }, {\n        key: '_fireTextAddedCallback',\n        value: function _fireTextAddedCallback(text) {\n            if (!this.callbacksDisabled && this.textAddedCallback) {\n                this.textAddedCallback(text);\n            }\n        }\n    }, {\n        key: '_fireTextRemovedCallback',\n        value: function _fireTextRemovedCallback(text) {\n            if (!this.callbacksDisabled && this.textRemovedCallback) {\n                this.textRemovedCallback(text);\n            }\n        }\n    }]);\n\n    return DataModel;\n}();\n\n},{\"./domain\":3,\"./validation-result\":13,\"sd-utils\":\"sd-utils\"}],2:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Edge = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _objectWithComputedValues = require('./object-with-computed-values');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Edge = exports.Edge = function (_ObjectWithComputedVa) {\n    _inherits(Edge, _ObjectWithComputedVa);\n\n    function Edge(parentNode, childNode, name, payoff, probability) {\n        _classCallCheck(this, Edge);\n\n        var _this = _possibleConstructorReturn(this, (Edge.__proto__ || Object.getPrototypeOf(Edge)).call(this));\n\n        _this.name = '';\n        _this.probability = undefined;\n        _this.payoff = 0;\n        _this.$DISPLAY_VALUE_NAMES = ['probability', 'payoff', 'optimal'];\n\n        _this.parentNode = parentNode;\n        _this.childNode = childNode;\n\n        if (name !== undefined) {\n            _this.name = name;\n        }\n        if (probability !== undefined) {\n            _this.probability = probability;\n        }\n        if (payoff !== undefined) {\n            _this.payoff = payoff;\n        }\n\n        return _this;\n    }\n\n    _createClass(Edge, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'setProbability',\n        value: function setProbability(probability) {\n            this.probability = probability;\n            return this;\n        }\n    }, {\n        key: 'setPayoff',\n        value: function setPayoff(payoff) {\n            this.payoff = payoff;\n            return this;\n        }\n    }, {\n        key: 'computedBaseProbability',\n        value: function computedBaseProbability(val) {\n            return this.computedValue(null, 'probability', val);\n        }\n    }, {\n        key: 'computedBasePayoff',\n        value: function computedBasePayoff(val) {\n            return this.computedValue(null, 'payoff', val);\n        }\n    }, {\n        key: 'displayProbability',\n        value: function displayProbability(val) {\n            return this.displayValue('probability', val);\n        }\n    }, {\n        key: 'displayPayoff',\n        value: function displayPayoff(val) {\n            return this.displayValue('payoff', val);\n        }\n    }]);\n\n    return Edge;\n}(_objectWithComputedValues.ObjectWithComputedValues);\n\n},{\"./object-with-computed-values\":8}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _node = require('./node/node');\n\nObject.keys(_node).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _node[key];\n    }\n  });\n});\n\nvar _decisionNode = require('./node/decision-node');\n\nObject.keys(_decisionNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _decisionNode[key];\n    }\n  });\n});\n\nvar _chanceNode = require('./node/chance-node');\n\nObject.keys(_chanceNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _chanceNode[key];\n    }\n  });\n});\n\nvar _terminalNode = require('./node/terminal-node');\n\nObject.keys(_terminalNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _terminalNode[key];\n    }\n  });\n});\n\nvar _edge = require('./edge');\n\nObject.keys(_edge).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _edge[key];\n    }\n  });\n});\n\nvar _point = require('./point');\n\nObject.keys(_point).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _point[key];\n    }\n  });\n});\n\nvar _text = require('./text');\n\nObject.keys(_text).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _text[key];\n    }\n  });\n});\n\n},{\"./edge\":2,\"./node/chance-node\":4,\"./node/decision-node\":5,\"./node/node\":6,\"./node/terminal-node\":7,\"./point\":10,\"./text\":11}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChanceNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ChanceNode = exports.ChanceNode = function (_Node) {\n    _inherits(ChanceNode, _Node);\n\n    function ChanceNode(location) {\n        _classCallCheck(this, ChanceNode);\n\n        return _possibleConstructorReturn(this, (ChanceNode.__proto__ || Object.getPrototypeOf(ChanceNode)).call(this, ChanceNode.$TYPE, location));\n    }\n\n    return ChanceNode;\n}(_node.Node);\n\nChanceNode.$TYPE = 'chance';\n\n},{\"./node\":6}],5:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DecisionNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DecisionNode = exports.DecisionNode = function (_Node) {\n    _inherits(DecisionNode, _Node);\n\n    function DecisionNode(location) {\n        _classCallCheck(this, DecisionNode);\n\n        return _possibleConstructorReturn(this, (DecisionNode.__proto__ || Object.getPrototypeOf(DecisionNode)).call(this, DecisionNode.$TYPE, location));\n    }\n\n    return DecisionNode;\n}(_node.Node);\n\nDecisionNode.$TYPE = 'decision';\n\n},{\"./node\":6}],6:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Node = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _point = require('../point');\n\nvar _objectWithComputedValues = require('../object-with-computed-values');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Node = exports.Node = function (_ObjectWithComputedVa) {\n    _inherits(Node, _ObjectWithComputedVa);\n\n    //code evaluation errors\n\n    function Node(type, location) {\n        _classCallCheck(this, Node);\n\n        var _this = _possibleConstructorReturn(this, (Node.__proto__ || Object.getPrototypeOf(Node)).call(this));\n\n        _this.childEdges = [];\n        _this.name = '';\n        _this.code = '';\n        _this.$codeDirty = false;\n        _this.$codeError = null;\n        _this.expressionScope = null;\n        _this.$DISPLAY_VALUE_NAMES = ['childrenPayoff', 'aggregatedPayoff', 'probabilityToEnter', 'optimal'];\n\n        _this.location = location;\n        if (!location) {\n            _this.location = new _point.Point(0, 0);\n        }\n        _this.type = type;\n        return _this;\n    } // is code changed without reevaluation?\n    //Point\n\n    _createClass(Node, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'moveTo',\n        value: function moveTo(x, y, withChildren) {\n            //move to new location\n            if (withChildren) {\n                var dx = x - this.location.x;\n                var dy = y - this.location.y;\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: 'move',\n        value: function move(dx, dy, withChildren) {\n            //move by vector\n            if (withChildren) {\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Node;\n}(_objectWithComputedValues.ObjectWithComputedValues);\n\n},{\"../object-with-computed-values\":8,\"../point\":10}],7:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TerminalNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TerminalNode = exports.TerminalNode = function (_Node) {\n    _inherits(TerminalNode, _Node);\n\n    function TerminalNode(location) {\n        _classCallCheck(this, TerminalNode);\n\n        return _possibleConstructorReturn(this, (TerminalNode.__proto__ || Object.getPrototypeOf(TerminalNode)).call(this, TerminalNode.$TYPE, location));\n    }\n\n    return TerminalNode;\n}(_node.Node);\n\nTerminalNode.$TYPE = 'terminal';\n\n},{\"./node\":6}],8:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectWithComputedValues = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _objectWithIdAndEditableFields = require('./object-with-id-and-editable-fields');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ObjectWithComputedValues = exports.ObjectWithComputedValues = function (_ObjectWithIdAndEdita) {\n    _inherits(ObjectWithComputedValues, _ObjectWithIdAndEdita);\n\n    function ObjectWithComputedValues() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, ObjectWithComputedValues);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ObjectWithComputedValues.__proto__ || Object.getPrototypeOf(ObjectWithComputedValues)).call.apply(_ref, [this].concat(args))), _this), _this.computed = {}, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(ObjectWithComputedValues, [{\n        key: 'computedValue',\n        //computed values\n\n        /*get or set computed value*/\n        value: function computedValue(ruleName, fieldName, value) {\n            var path = 'computed.';\n            if (ruleName) {\n                path += ruleName + '.';\n            }\n            path += fieldName;\n            if (value === undefined) {\n                return _sdUtils.Utils.get(this, path, null);\n            }\n            _sdUtils.Utils.set(this, path, value);\n            return value;\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(ruleName) {\n            var _this2 = this;\n\n            if (ruleName == undefined) {\n                this.computed = {};\n                return;\n            }\n            if (_sdUtils.Utils.isArray(ruleName)) {\n                ruleName.forEach(function (n) {\n                    _this2.computed[n] = {};\n                });\n                return;\n            }\n            this.computed[ruleName] = {};\n        }\n    }, {\n        key: 'clearDisplayValues',\n        value: function clearDisplayValues() {\n            this.computed['$displayValues'] = {};\n        }\n    }, {\n        key: 'displayValue',\n        value: function displayValue(fieldName, value) {\n            return this.computedValue(null, '$displayValues.' + fieldName, value);\n        }\n    }, {\n        key: 'loadComputedValues',\n        value: function loadComputedValues(computed) {\n            this.computed = computed;\n        }\n    }]);\n\n    return ObjectWithComputedValues;\n}(_objectWithIdAndEditableFields.ObjectWithIdAndEditableFields);\n\n},{\"./object-with-id-and-editable-fields\":9,\"sd-utils\":\"sd-utils\"}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectWithIdAndEditableFields = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectWithIdAndEditableFields = exports.ObjectWithIdAndEditableFields = function () {\n    function ObjectWithIdAndEditableFields() {\n        _classCallCheck(this, ObjectWithIdAndEditableFields);\n\n        this.$id = _sdUtils.Utils.guid();\n        this.$fieldStatus = {};\n    } //internal id\n\n\n    _createClass(ObjectWithIdAndEditableFields, [{\n        key: 'getFieldStatus',\n        value: function getFieldStatus(fieldName) {\n            if (!this.$fieldStatus[fieldName]) {\n                this.$fieldStatus[fieldName] = {\n                    valid: {\n                        syntax: true,\n                        value: true\n                    }\n                };\n            }\n            return this.$fieldStatus[fieldName];\n        }\n    }, {\n        key: 'setSyntaxValidity',\n        value: function setSyntaxValidity(fieldName, valid) {\n            var fieldStatus = this.getFieldStatus(fieldName);\n            fieldStatus.valid.syntax = valid;\n        }\n    }, {\n        key: 'setValueValidity',\n        value: function setValueValidity(fieldName, valid) {\n            var fieldStatus = this.getFieldStatus(fieldName);\n            fieldStatus.valid.value = valid;\n        }\n    }, {\n        key: 'isFieldValid',\n        value: function isFieldValid(fieldName) {\n            var syntax = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var fieldStatus = this.getFieldStatus(fieldName);\n            if (syntax && value) {\n                return fieldStatus.valid.syntax && fieldStatus.valid.value;\n            }\n            if (syntax) {\n                return fieldStatus.valid.syntax;\n            }\n            return fieldStatus.valid.value;\n        }\n    }]);\n\n    return ObjectWithIdAndEditableFields;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Point = exports.Point = function () {\n    function Point(x, y) {\n        _classCallCheck(this, Point);\n\n        if (x instanceof Point) {\n            y = x.y;\n            x = x.x;\n        } else if (Array.isArray(x)) {\n            y = x[1];\n            x = x[0];\n        }\n        this.x = x;\n        this.y = y;\n    }\n\n    _createClass(Point, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            if (Array.isArray(x)) {\n                y = x[1];\n                x = x[0];\n            }\n            this.x = x;\n            this.y = y;\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            if (Array.isArray(dx)) {\n                dy = dx[1];\n                dx = dx[0];\n            }\n            this.x += dx;\n            this.y += dy;\n            return this;\n        }\n    }]);\n\n    return Point;\n}();\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Text = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _point = require(\"./point\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectWithIdAndEditableFields = require(\"./object-with-id-and-editable-fields\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Text = exports.Text = function (_ObjectWithIdAndEdita) {\n    _inherits(Text, _ObjectWithIdAndEdita);\n\n    //Point\n\n    function Text(location, value) {\n        _classCallCheck(this, Text);\n\n        var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this));\n\n        _this.value = '';\n\n        _this.location = location;\n        if (!location) {\n            _this.location = new _point.Point(0, 0);\n        }\n\n        if (value) {\n            _this.value = value;\n        }\n        return _this;\n    }\n\n    _createClass(Text, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            //move to new location\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Text;\n}(_objectWithIdAndEditableFields.ObjectWithIdAndEditableFields);\n\n},{\"./object-with-id-and-editable-fields\":9,\"./point\":10,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.domain = undefined;\n\nvar _dataModel = require('./data-model');\n\nObject.keys(_dataModel).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _dataModel[key];\n    }\n  });\n});\n\nvar _validationResult = require('./validation-result');\n\nObject.keys(_validationResult).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _validationResult[key];\n    }\n  });\n});\n\nvar _domain = require('./domain');\n\nvar domain = _interopRequireWildcard(_domain);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.domain = domain;\n\n},{\"./data-model\":1,\"./domain\":3,\"./validation-result\":13}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ValidationResult = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ValidationResult = exports.ValidationResult = function () {\n    function ValidationResult() {\n        _classCallCheck(this, ValidationResult);\n\n        this.errors = {};\n        this.warnings = {};\n        this.objectIdToError = {};\n    }\n\n    _createClass(ValidationResult, [{\n        key: \"addError\",\n        value: function addError(error, obj) {\n            if (_sdUtils.Utils.isString(error)) {\n                error = { name: error };\n            }\n            var name = error.name;\n            var errorsByName = this.errors[name];\n            if (!errorsByName) {\n                errorsByName = [];\n                this.errors[name] = errorsByName;\n            }\n            var objE = this.objectIdToError[obj.$id];\n            if (!objE) {\n                objE = [];\n                this.objectIdToError[obj.$id] = objE;\n            }\n            errorsByName.push(obj);\n            objE.push(error);\n        }\n    }, {\n        key: \"addWarning\",\n        value: function addWarning(name, obj) {\n            var e = this.warnings[name];\n            if (!e) {\n                e = [];\n                this.warnings[name] = e;\n            }\n            e.push(obj);\n        }\n    }, {\n        key: \"isValid\",\n        value: function isValid() {\n            return Object.getOwnPropertyNames(this.errors).length === 0;\n        }\n    }], [{\n        key: \"createFromDTO\",\n        value: function createFromDTO(dto) {\n            var v = new ValidationResult();\n            v.errors = dto.errors;\n            v.warnings = dto.warnings;\n            v.objectIdToError = dto.objectIdToError;\n            return v;\n        }\n    }]);\n\n    return ValidationResult;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],\"sd-model\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":12}]},{},[])\n\n","import {Utils} from 'sd-utils'\nimport {log} from \"sd-utils\";\nimport * as domain from './domain'\nimport {ValidationResult} from './validation-result'\n\n/*\n * Data model manager\n * */\nexport class DataModel {\n\n    nodes = [];\n    edges = [];\n\n    texts = []; //floating texts\n\n    expressionScope = {}; //global expression scope\n    code = \"\";//global expression code\n    $codeError = null; //code evaluation errors\n    $codeDirty = false; // is code changed without reevaluation?\n    $version=1;\n\n    validationResults = [];\n\n    // undo / redo\n    maxStackSize = 20;\n    undoStack = [];\n    redoStack = [];\n    undoRedoStateChangedCallback = null;\n    nodeAddedCallback = null;\n    nodeRemovedCallback = null;\n\n    textAddedCallback = null;\n    textRemovedCallback = null;\n\n    callbacksDisabled = false;\n\n    constructor(data) {\n        if(data){\n            this.load(data);\n        }\n    }\n\n    getJsonReplacer(filterLocation=false, filterComputed=false, replacer, filterPrivate =true){\n        return function (k, v) {\n\n            if ((filterPrivate && Utils.startsWith(k, '$')) || k == 'parentNode') {\n                return undefined;\n            }\n            if (filterLocation && k == 'location') {\n                return undefined;\n            }\n            if (filterComputed && k == 'computed') {\n                return undefined;\n            }\n\n            if (replacer){\n                return replacer(k, v);\n            }\n\n            return v;\n        }\n    }\n\n    serialize(stringify=true, filterLocation=false, filterComputed=false, replacer, filterPrivate =true){\n        var data =  {\n            code: this.code,\n            expressionScope: this.expressionScope,\n            trees: this.getRoots(),\n            texts: this.texts\n        };\n\n        if(!stringify){\n            return data;\n        }\n\n        return Utils.stringify(data, this.getJsonReplacer(filterLocation, filterComputed, replacer, filterPrivate), []);\n    }\n\n\n    /*Loads serialized data*/\n    load(data) {\n        //roots, texts, code, expressionScope\n        var callbacksDisabled = this.callbacksDisabled;\n        this.callbacksDisabled = true;\n\n        this.clear();\n\n\n        data.trees.forEach(nodeData=> {\n            var node = this.createNodeFromData(nodeData);\n        });\n\n        if (data.texts) {\n            data.texts.forEach(textData=> {\n                var location = new domain.Point(textData.location.x, textData.location.y);\n                var text = new domain.Text(location, textData.value);\n                this.texts.push(text);\n            })\n        }\n\n        this.clearExpressionScope();\n        this.code = data.code || '';\n\n        if (data.expressionScope) {\n            Utils.extend(this.expressionScope, data.expressionScope);\n        }\n        this.callbacksDisabled = callbacksDisabled;\n    }\n\n    getDTO(filterLocation=false, filterComputed=false, filterPrivate =false){\n        var dto = {\n            serializedData: this.serialize(true, filterLocation, filterComputed, null, filterPrivate),\n            $codeError: this.$codeError,\n            $codeDirty: this.$codeDirty,\n            validationResults: this.validationResults.slice()\n\n        };\n        return dto\n    }\n\n    loadFromDTO(dto, dataReviver){\n        this.load(JSON.parse(dto.serializedData, dataReviver));\n        this.$codeError = dto.$codeError;\n        this.$codeDirty = dto.$codeDirty;\n        this.validationResults.length=0;\n        dto.validationResults.forEach(v=>{\n            this.validationResults.push(ValidationResult.createFromDTO(v))\n        })\n    }\n\n    /*This method updates only computation results/validation*/\n    updateFrom(dataModel){\n        if(this.$version>dataModel.$version){\n            log.warn(\"DataModel.updateFrom: version of current model greater than update\")\n            return;\n        }\n        var byId = {}\n        dataModel.nodes.forEach(n=>{\n            byId[n.$id] = n;\n        });\n        this.nodes.forEach((n,i)=>{\n            if(byId[n.$id]){\n                n.loadComputedValues(byId[n.$id].computed);\n            }\n        });\n        dataModel.edges.forEach(e=>{\n            byId[e.$id] = e;\n        });\n        this.edges.forEach((e,i)=>{\n            if(byId[e.$id]){\n                e.loadComputedValues(byId[e.$id].computed);\n            }\n        });\n        this.expressionScope = dataModel.expressionScope;\n        this.$codeError = dataModel.$codeError;\n        this.$codeDirty = dataModel.$codeDirty;\n        this.validationResults  = dataModel.validationResults;\n    }\n\n    /*create node from serialized data*/\n    createNodeFromData(data, parent) {\n        var node, location;\n\n        if(data.location){\n            location = new domain.Point(data.location.x, data.location.y);\n        }else{\n            location = new domain.Point(0,0);\n        }\n\n        if (domain.DecisionNode.$TYPE == data.type) {\n            node = new domain.DecisionNode(location);\n        } else if (domain.ChanceNode.$TYPE == data.type) {\n            node = new domain.ChanceNode(location);\n        } else if (domain.TerminalNode.$TYPE == data.type) {\n            node = new domain.TerminalNode(location);\n        }\n        if(data.$id){\n            node.$id = data.$id;\n        }\n        if(data.$fieldStatus){\n            node.$fieldStatus = data.$fieldStatus;\n        }\n        node.name = data.name;\n\n        if(data.code){\n            node.code = data.code;\n        }\n        if (data.expressionScope) {\n            node.expressionScope = data.expressionScope\n        }\n        if(data.computed){\n            node.loadComputedValues(data.computed);\n        }\n\n        var edgeOrNode = this.addNode(node, parent);\n        data.childEdges.forEach(ed=> {\n            var edge = this.createNodeFromData(ed.childNode, node);\n            edge.payoff = ed.payoff;\n            edge.probability = ed.probability;\n            edge.name = ed.name;\n            if(ed.computed){\n                edge.loadComputedValues(ed.computed);\n            }\n            if(ed.$id){\n                edge.$id = ed.$id;\n            }\n            if(ed.$fieldStatus){\n                edge.$fieldStatus = ed.$fieldStatus;\n            }\n        });\n\n        return edgeOrNode;\n    }\n\n    /*returns node or edge from parent to this node*/\n    addNode(node, parent) {\n        var self = this;\n        self.nodes.push(node);\n        if (parent) {\n            var edge = self._addChild(parent, node);\n            this._fireNodeAddedCallback(node);\n            return edge;\n        }\n\n        this._fireNodeAddedCallback(node);\n        return node;\n    }\n\n    /*injects given node into given edge*/\n    injectNode(node, edge) {\n        var parent = edge.parentNode;\n        var child = edge.childNode;\n        this.nodes.push(node);\n        node.$parent = parent;\n        edge.childNode = node;\n        this._addChild(node, child);\n        this._fireNodeAddedCallback(node);\n    }\n\n    _addChild(parent, child) {\n        var self = this;\n        var edge = new domain.Edge(parent, child);\n        self._setEdgeInitialProbability(edge);\n        self.edges.push(edge);\n\n        parent.childEdges.push(edge);\n        child.$parent = parent;\n        return edge;\n    }\n\n    _setEdgeInitialProbability(edge) {\n        if (edge.parentNode instanceof domain.ChanceNode) {\n            edge.probability = '#';\n        } else {\n            edge.probability = undefined;\n        }\n\n    }\n\n    /*removes given node and its subtree*/\n    removeNode(node, $l = 0) {\n\n        var self = this;\n        node.childEdges.forEach(e=>self.removeNode(e.childNode, $l + 1));\n\n        self._removeNode(node);\n        var parent = node.$parent;\n        if (parent) {\n            var parentEdge = Utils.find(parent.childEdges, (e, i)=> e.childNode === node);\n            if ($l == 0) {\n                self.removeEdge(parentEdge);\n            } else {\n                self._removeEdge(parentEdge);\n            }\n        }\n        this._fireNodeRemovedCallback(node);\n    }\n\n    /*removes given nodes and their subtrees*/\n    removeNodes(nodes) {\n\n        var roots = this.findSubtreeRoots(nodes);\n        roots.forEach(n=>this.removeNode(n, 0), this);\n    }\n\n    convertNode(node, typeToConvertTo){\n        var newNode;\n        if(!node.childEdges.length && node.$parent){\n            newNode = this.createNodeByType(typeToConvertTo, node.location);\n        }else{\n            if(node instanceof domain.DecisionNode && typeToConvertTo==domain.ChanceNode.$TYPE){\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            }else if(typeToConvertTo==domain.DecisionNode.$TYPE){\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            }\n        }\n\n        if(newNode){\n            newNode.name=node.name;\n            this.replaceNode(newNode, node);\n            newNode.childEdges.forEach(e=>this._setEdgeInitialProbability(e));\n            this._fireNodeAddedCallback(newNode);\n        }\n\n    }\n\n    createNodeByType(type, location){\n        if(type==domain.DecisionNode.$TYPE){\n            return new domain.DecisionNode(location)\n        }else if(type==domain.ChanceNode.$TYPE){\n            return new domain.ChanceNode(location)\n        }else if(type==domain.TerminalNode.$TYPE){\n            return new domain.TerminalNode(location)\n        }\n    }\n\n    replaceNode(newNode, oldNode){\n        var parent = oldNode.$parent;\n        newNode.$parent = parent;\n\n        if(parent){\n            var parentEdge = Utils.find(newNode.$parent.childEdges, e=>e.childNode===oldNode);\n            parentEdge.childNode = newNode;\n        }\n\n        newNode.childEdges = oldNode.childEdges;\n        newNode.childEdges.forEach(e=>e.parentNode=newNode);\n\n        var index = this.nodes.indexOf(oldNode);\n        if(~index){\n            this.nodes[index]=newNode;\n        }\n    }\n\n    getRoots() {\n        return this.nodes.filter(n=>!n.$parent);\n    }\n\n    findSubtreeRoots(nodes) {\n        return nodes.filter(n=>!n.$parent || nodes.indexOf(n.$parent) === -1);\n    }\n\n    /*creates detached clone of given node*/\n    cloneSubtree(nodeToCopy, cloneComputedValues) {\n        var self = this;\n        var clone = this.cloneNode(nodeToCopy);\n\n        nodeToCopy.childEdges.forEach(e=> {\n            var childClone = self.cloneSubtree(e.childNode, cloneComputedValues);\n            childClone.$parent = clone;\n            var edge = new domain.Edge(clone, childClone, e.name, e.payoff, e.probability);\n            if (cloneComputedValues) {\n                edge.computed = Utils.cloneDeep(e.computed)\n                childClone.computed = Utils.cloneDeep(e.childNode.computed)\n            }\n            clone.childEdges.push(edge);\n        });\n        if (cloneComputedValues) {\n            clone.computed = Utils.cloneDeep(nodeToCopy.computed)\n        }\n        return clone;\n    }\n\n    /*attaches detached subtree to given parent*/\n    attachSubtree(nodeToAttach, parent) {\n        var self = this;\n        var nodeOrEdge = self.addNode(nodeToAttach, parent);\n\n        var childEdges = self.getAllDescendantEdges(nodeToAttach);\n        childEdges.forEach(e=> {\n            self.edges.push(e);\n            self.nodes.push(e.childNode);\n        });\n\n        return nodeOrEdge;\n    }\n\n    cloneNodes(nodes) {\n        var roots = []\n        //TODO\n    }\n\n    /*shallow clone without parent and children*/\n    cloneNode(node) {\n        var clone = Utils.clone(node)\n        clone.$id = Utils.guid();\n        clone.location = Utils.clone(node.location);\n        clone.computed = Utils.clone(node.computed);\n        clone.$parent = null;\n        clone.childEdges = [];\n        return clone;\n    }\n\n    findNodeById(id) {\n        return Utils.find(this.nodes, n=>n.$id == id);\n    }\n\n    findEdgeById(id) {\n        return Utils.find(this.edges, e=>e.$id == id);\n    }\n\n    findById(id) {\n        var node = this.findNodeById(id);\n        if (node) {\n            return node;\n        }\n        return this.findEdgeById(id);\n    }\n\n    _removeNode(node) {// simply removes node from node list\n        var index = this.nodes.indexOf(node);\n        if (index > -1) {\n            this.nodes.splice(index, 1);\n        }\n    }\n\n    removeEdge(edge) {\n        var index = edge.parentNode.childEdges.indexOf(edge);\n        if (index > -1) {\n            edge.parentNode.childEdges.splice(index, 1);\n        }\n        this._removeEdge(edge);\n    }\n\n    _removeEdge(edge) { //removes edge from edge list without removing connected nodes\n        var index = this.edges.indexOf(edge);\n        if (index > -1) {\n            this.edges.splice(index, 1);\n        }\n    }\n\n    _removeNodes(nodesToRemove) {\n        this.nodes = this.nodes.filter(n=>nodesToRemove.indexOf(n) === -1);\n    }\n\n    _removeEdges(edgesToRemove) {\n        this.edges = this.edges.filter(e=>edgesToRemove.indexOf(e) === -1);\n    }\n\n    getAllDescendantEdges(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=> {\n            result.push(e);\n            if (e.childNode) {\n                result.push(...self.getAllDescendantEdges(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllDescendantNodes(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=> {\n            if (e.childNode) {\n                result.push(e.childNode);\n                result.push(...self.getAllDescendantNodes(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllNodesInSubtree(node) {\n        var descendants = this.getAllDescendantNodes(node);\n        descendants.unshift(node);\n        return descendants;\n    }\n\n    isUndoAvailable() {\n        return !!this.undoStack.length\n    }\n\n    isRedoAvailable() {\n        return !!this.redoStack.length\n    }\n\n    createStateSnapshot(revertConf){\n        return {\n            revertConf: revertConf,\n            nodes: Utils.cloneDeep(this.nodes),\n            edges: Utils.cloneDeep(this.edges),\n            texts: Utils.cloneDeep(this.texts),\n            expressionScope: Utils.cloneDeep(this.expressionScope),\n            code: this.code,\n            $codeError: this.$codeError\n        }\n    }\n\n\n    saveStateFromSnapshot(state){\n        this.redoStack.length = 0;\n\n        this._pushToStack(this.undoStack, state);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    saveState(revertConf) {\n        this.saveStateFromSnapshot(this.createStateSnapshot(revertConf));\n        return this;\n    }\n\n    undo() {\n        var self = this;\n        var newState = this.undoStack.pop();\n        if (!newState) {\n            return;\n        }\n\n        this._pushToStack(this.redoStack, {\n            revertConf: newState.revertConf,\n            nodes: self.nodes,\n            edges: self.edges,\n            texts: self.texts,\n            expressionScope: self.expressionScope,\n            code: self.code,\n            $codeError: self.$codeError\n\n        });\n\n        this._setNewState(newState);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    redo() {\n        var self = this;\n        var newState = this.redoStack.pop();\n        if (!newState) {\n            return;\n        }\n\n        this._pushToStack(this.undoStack, {\n            revertConf: newState.revertConf,\n            nodes: self.nodes,\n            edges: self.edges,\n            texts: self.texts,\n            expressionScope: self.expressionScope,\n            code: self.code,\n            $codeError: self.$codeError\n        });\n\n        this._setNewState(newState, true);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    clear() {\n        this.nodes.length = 0;\n        this.edges.length = 0;\n        this.undoStack.length = 0;\n        this.redoStack.length = 0;\n        this.texts.length = 0;\n        this.clearExpressionScope();\n        this.code = '';\n        this.$codeError = null;\n        this.$codeDirty = false;\n    }\n\n    addText(text) {\n        this.texts.push(text);\n\n        this._fireTextAddedCallback(text);\n    }\n\n    removeTexts(texts) {\n        texts.forEach(t=>this.removeText(t));\n    }\n\n    removeText(text) {\n        var index = this.texts.indexOf(text);\n        if (index > -1) {\n            this.texts.splice(index, 1);\n            this._fireTextRemovedCallback(text);\n        }\n    }\n\n    clearExpressionScope() {\n        Utils.forOwn(this.expressionScope, (value, key)=> {\n            delete this.expressionScope[key];\n        });\n    }\n\n    _setNewState(newState, redo) {\n        var nodeById = Utils.getObjectByIdMap(newState.nodes);\n        var edgeById = Utils.getObjectByIdMap(newState.edges);\n        this.nodes = newState.nodes;\n        this.edges = newState.edges;\n        this.texts = newState.texts;\n        this.expressionScope = newState.expressionScope;\n        this.code = newState.code;\n        this.$codeError  = newState.$codeError\n\n        this.nodes.forEach(n=> {\n            for (var i = 0; i < n.childEdges.length; i++) {\n                var edge = edgeById[n.childEdges[i].$id];\n                n.childEdges[i] = edge;\n                edge.parentNode = n;\n                edge.childNode = nodeById[edge.childNode.$id];\n            }\n\n        });\n\n        if (newState.revertConf) {\n            if (!redo && newState.revertConf.onUndo) {\n                newState.revertConf.onUndo(newState.revertConf.data);\n            }\n            if (redo && newState.revertConf.onRedo) {\n                newState.revertConf.onRedo(newState.revertConf.data);\n            }\n\n\n        }\n        this.revertConf = newState.revertConf;\n    }\n\n\n    _pushToStack(stack, obj) {\n        if (stack.length >= this.maxStackSize) {\n            stack.shift();\n        }\n        stack.push(obj);\n    }\n\n    _fireUndoRedoCallback() {\n        if (!this.callbacksDisabled && this.undoRedoStateChangedCallback) {\n            this.undoRedoStateChangedCallback();\n        }\n    }\n\n    _fireNodeAddedCallback(node) {\n        if (!this.callbacksDisabled && this.nodeAddedCallback) {\n            this.nodeAddedCallback(node);\n        }\n    }\n\n    _fireNodeRemovedCallback(node) {\n        if (!this.callbacksDisabled && this.nodeRemovedCallback) {\n            this.nodeRemovedCallback(node);\n        }\n    }\n\n    _fireTextAddedCallback(text) {\n        if (!this.callbacksDisabled && this.textAddedCallback) {\n            this.textAddedCallback(text);\n        }\n    }\n\n    _fireTextRemovedCallback(text) {\n        if (!this.callbacksDisabled && this.textRemovedCallback) {\n            this.textRemovedCallback(text);\n        }\n    }\n}\n","import {ObjectWithComputedValues} from './object-with-computed-values'\n\nexport class Edge extends ObjectWithComputedValues{\n    parentNode;\n    childNode;\n\n    name='';\n    probability=undefined;\n    payoff=0;\n\n    $DISPLAY_VALUE_NAMES = ['probability', 'payoff', 'optimal'];\n\n    constructor(parentNode, childNode, name,payoff, probability, ){\n        super();\n        this.parentNode = parentNode;\n        this.childNode = childNode;\n\n        if(name!==undefined){\n            this.name = name;\n        }\n        if(probability!==undefined){\n            this.probability=probability;\n        }\n        if(payoff!==undefined){\n            this.payoff=payoff\n        }\n\n    }\n\n    setName(name){\n        this.name = name;\n        return this;\n    }\n\n    setProbability(probability){\n        this.probability = probability;\n        return this;\n    }\n\n    setPayoff(payoff){\n        this.payoff = payoff;\n        return this;\n    }\n\n    computedBaseProbability(val){\n        return this.computedValue(null, 'probability', val);\n    }\n\n    computedBasePayoff(val){\n        return this.computedValue(null, 'payoff', val);\n    }\n\n    displayProbability(val){\n        return this.displayValue('probability', val);\n    }\n\n    displayPayoff(val){\n        return this.displayValue('payoff', val);\n    }\n}\n","export * from './node/node'\nexport * from './node/decision-node'\nexport * from './node/chance-node'\nexport * from './node/terminal-node'\nexport * from './edge'\nexport * from './point'\nexport * from './text'\n","import {Node} from './node'\n\nexport class ChanceNode extends Node{\n\n    static $TYPE = 'chance';\n\n    constructor(location){\n        super(ChanceNode.$TYPE, location);\n    }\n}\n","import {Node} from './node'\n\nexport class DecisionNode extends Node{\n\n    static $TYPE = 'decision';\n\n    constructor(location){\n        super(DecisionNode.$TYPE, location);\n    }\n}\n","import {Point} from '../point'\nimport {ObjectWithComputedValues} from '../object-with-computed-values'\n\nexport class Node extends ObjectWithComputedValues{\n\n    type;\n    childEdges=[];\n    name='';\n\n    location; //Point\n\n    code='';\n    $codeDirty = false; // is code changed without reevaluation?\n    $codeError = null; //code evaluation errors\n\n    expressionScope=null;\n\n    $DISPLAY_VALUE_NAMES = ['childrenPayoff', 'aggregatedPayoff', 'probabilityToEnter', 'optimal']\n\n    constructor(type, location){\n        super();\n        this.location=location;\n        if(!location){\n            this.location = new Point(0,0);\n        }\n        this.type=type;\n    }\n\n    setName(name){\n        this.name = name;\n        return this;\n    }\n\n    moveTo(x,y, withChildren){ //move to new location\n        if(withChildren){\n            var dx = x-this.location.x;\n            var dy = y-this.location.y;\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\n        }\n\n        this.location.moveTo(x,y);\n        return this;\n    }\n\n    move(dx, dy, withChildren){ //move by vector\n        if(withChildren){\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\n        }\n        this.location.move(dx, dy);\n        return this;\n    }\n}\n","import {Node} from './node'\n\nexport class TerminalNode extends Node{\n\n    static $TYPE = 'terminal';\n\n    constructor(location){\n        super(TerminalNode.$TYPE, location);\n    }\n}\n","import {Utils} from 'sd-utils'\n\nimport {ObjectWithIdAndEditableFields} from \"./object-with-id-and-editable-fields\";\n\nexport class ObjectWithComputedValues extends ObjectWithIdAndEditableFields{\n\n    computed={}; //computed values\n\n    /*get or set computed value*/\n    computedValue(ruleName, fieldName, value){\n        var path = 'computed.';\n        if(ruleName){\n            path+=ruleName+'.';\n        }\n        path+=fieldName;\n        if(value===undefined){\n            return  Utils.get(this, path, null);\n        }\n        Utils.set(this, path, value);\n        return value;\n    }\n\n    clearComputedValues(ruleName){\n        if(ruleName==undefined){\n            this.computed={};\n            return;\n        }\n        if(Utils.isArray(ruleName)){\n            ruleName.forEach(n=>{\n                this.computed[n]={};\n            });\n            return;\n        }\n        this.computed[ruleName]={};\n    }\n\n    clearDisplayValues(){\n        this.computed['$displayValues']={};\n    }\n\n    displayValue(fieldName, value){\n        return this.computedValue(null, '$displayValues.'+fieldName, value);\n    }\n\n    loadComputedValues(computed){\n        this.computed = computed;\n    }\n}\n","import {Utils} from 'sd-utils'\n\nexport class ObjectWithIdAndEditableFields {\n\n    $id = Utils.guid(); //internal id\n    $fieldStatus={};\n\n    getFieldStatus(fieldName){\n        if(!this.$fieldStatus[fieldName]){\n            this.$fieldStatus[fieldName] = {\n                valid: {\n                    syntax: true,\n                    value: true\n                }\n            }\n        }\n        return this.$fieldStatus[fieldName];\n    }\n\n    setSyntaxValidity(fieldName, valid){\n        var fieldStatus = this.getFieldStatus(fieldName);\n        fieldStatus.valid.syntax = valid;\n    }\n\n    setValueValidity(fieldName, valid){\n        var fieldStatus = this.getFieldStatus(fieldName);\n        fieldStatus.valid.value = valid;\n    }\n\n    isFieldValid(fieldName, syntax=true, value=true){\n        var fieldStatus = this.getFieldStatus(fieldName);\n        if(syntax && value) {\n            return fieldStatus.valid.syntax && fieldStatus.valid.value;\n        }\n        if(syntax) {\n            return fieldStatus.valid.syntax\n        }\n        return fieldStatus.valid.value;\n    }\n\n\n}\n","export class Point {\n    x;\n    y;\n    constructor(x,y){\n        if(x instanceof Point){\n            y=x.y;\n            x=x.x\n        }else if(Array.isArray(x)){\n            y=x[1];\n            x=x[0];\n        }\n        this.x=x;\n        this.y=y;\n    }\n\n    moveTo(x,y){\n        if(Array.isArray(x)){\n            y=x[1];\n            x=x[0];\n        }\n        this.x=x;\n        this.y=y;\n        return this;\n    }\n\n    move(dx,dy){ //move by vector\n        if(Array.isArray(dx)){\n            dy=dx[1];\n            dx=dx[0];\n        }\n        this.x+=dx;\n        this.y+=dy;\n        return this;\n    }\n\n}\n","import {Point} from \"./point\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectWithIdAndEditableFields} from \"./object-with-id-and-editable-fields\";\n\nexport class Text extends ObjectWithIdAndEditableFields{\n\n    value='';\n    location; //Point\n\n    constructor(location, value){\n        super();\n        this.location=location;\n        if(!location){\n            this.location = new Point(0,0);\n        }\n\n        if(value) {\n            this.value = value;\n        }\n    }\n\n    moveTo(x,y){ //move to new location\n        this.location.moveTo(x,y);\n        return this;\n    }\n\n    move(dx, dy){ //move by vector\n        this.location.move(dx, dy);\n        return this;\n    }\n}\n","import * as domain from './domain'\nexport {domain}\nexport * from './data-model'\nexport * from './validation-result'\n","import {Utils} from \"sd-utils\";\n\nexport class ValidationResult{\n\n\n    errors = {};\n    warnings = {};\n    objectIdToError={};\n\n    addError(error, obj){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var name = error.name;\n        var errorsByName = this.errors[name];\n        if(!errorsByName){\n            errorsByName=[];\n            this.errors[name]=errorsByName;\n        }\n        var objE = this.objectIdToError[obj.$id];\n        if(!objE){\n            objE=[];\n            this.objectIdToError[obj.$id]= objE;\n        }\n        errorsByName.push(obj);\n        objE.push(error);\n    }\n\n    addWarning(name, obj){\n        var e = this.warnings[name];\n        if(!e){\n            e=[];\n            this.warnings[name]=e;\n        }\n        e.push(obj)\n    }\n\n    isValid(){\n        return Object.getOwnPropertyNames(this.errors).length === 0\n    }\n\n    static createFromDTO(dto){\n        var v = new ValidationResult();\n        v.errors = dto.errors;\n        v.warnings = dto.warnings;\n        v.objectIdToError = dto.objectIdToError;\n        return v;\n    }\n}\n","export * from './src/index'\n"]}