{"version":3,"sources":["node_modules/browser-pack/_prelude.js","sd-model.js","src/data-model.js","src/domain/edge.js","src/domain/index.js","src/domain/node/chance-node.js","src/domain/node/decision-node.js","src/domain/node/node.js","src/domain/node/terminal-node.js","src/domain/object-with-computed-values.js","src/domain/object-with-id-and-editable-fields.js","src/domain/point.js","src/domain/text.js","src/index.js","src/validation-result.js","index.js"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","1","module","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","defineProperty","value","DataModel","undefined","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_sdUtils","_domain","domain","_validationResult","data","this","nodes","edges","texts","expressionScope","$codeError","$codeDirty","$version","validationResults","maxStackSize","undoStack","redoStack","undoRedoStateChangedCallback","nodeAddedCallback","nodeRemovedCallback","textAddedCallback","textRemovedCallback","callbacksDisabled","load","filterLocation","arguments","filterComputed","replacer","filterPrivate","k","v","Utils","startsWith","stringify","trees","getRoots","getJsonReplacer","_this","clear","forEach","nodeData","createNodeFromData","textData","location","Point","x","y","text","Text","push","clearExpressionScope","extend","dto","serializedData","serialize","slice","dataReviver","_this2","JSON","parse","ValidationResult","createFromDTO","dataModel","log","warn","byId","$id","loadComputedValues","computed","filterFunction","res","forOwn","isFunction","parent","node","_this3","DecisionNode","$TYPE","type","ChanceNode","TerminalNode","$fieldStatus","name","edgeOrNode","addNode","childEdges","ed","edge","childNode","payoff","probability","self","_addChild","_fireNodeAddedCallback","parentNode","child","$parent","Edge","_setEdgeInitialProbability","$l","removeNode","_removeNode","parentEdge","find","removeEdge","_removeEdge","_fireNodeRemovedCallback","_this4","roots","findSubtreeRoots","typeToConvertTo","newNode","_this5","createNodeByType","replaceNode","oldNode","index","indexOf","filter","nodeToCopy","cloneComputedValues","clone","cloneNode","childClone","cloneSubtree","cloneDeep","nodeToAttach","nodeOrEdge","getAllDescendantEdges","guid","id","findNodeById","findEdgeById","splice","nodesToRemove","edgesToRemove","result","apply","getAllDescendantNodes","descendants","unshift","revertConf","state","_pushToStack","_fireUndoRedoCallback","saveStateFromSnapshot","createStateSnapshot","newState","pop","_setNewState","_fireTextAddedCallback","_this6","removeText","_fireTextRemovedCallback","_this7","redo","nodeById","getObjectByIdMap","edgeById","onUndo","onRedo","stack","shift","./domain","./validation-result","sd-utils","2","_possibleConstructorReturn","ReferenceError","_typeof","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Symbol","iterator","_objectWithComputedValues","_ObjectWithComputedVa","getPrototypeOf","$DISPLAY_VALUE_NAMES","val","computedValue","displayValue","ObjectWithComputedValues","./object-with-computed-values","3","_node","keys","get","_decisionNode","_chanceNode","_terminalNode","_edge","_point","_text","./edge","./node/chance-node","./node/decision-node","./node/node","./node/terminal-node","./point","./text","4","_Node","Node","./node","5","6","withChildren","dx","dy","move","moveTo","../object-with-computed-values","../point","7","8","_objectWithIdAndEditableFields","_ObjectWithIdAndEdita","_ref","_temp","_ret","_len","args","_key","concat","ruleName","fieldName","path","set","ObjectWithIdAndEditableFields","./object-with-id-and-editable-fields","9","valid","syntax","fieldStatus","getFieldStatus","10","11","12","_dataModel","./data-model","13","errors","warnings","objectIdToError","error","isString","errorsByName","objE","getOwnPropertyNames","sd-model","_index","./src/index"],"mappings":"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","file":"sd-model.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","require=(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DataModel = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _domain = require('./domain');\n\nvar domain = _interopRequireWildcard(_domain);\n\nvar _validationResult = require('./validation-result');\n\nfunction _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n        return obj;\n    } else {\n        var newObj = {};if (obj != null) {\n            for (var key in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n            }\n        }newObj.default = obj;return newObj;\n    }\n}\n\nfunction _toConsumableArray(arr) {\n    if (Array.isArray(arr)) {\n        for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n            arr2[i] = arr[i];\n        }return arr2;\n    } else {\n        return Array.from(arr);\n    }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\n/*\n * Data model manager\n * */\nvar DataModel = exports.DataModel = function () {\n    //code evaluation errors\n    //global expression scope\n    function DataModel(data) {\n        _classCallCheck(this, DataModel);\n\n        this.nodes = [];\n        this.edges = [];\n        this.texts = [];\n        this.expressionScope = {};\n        this.code = \"\";\n        this.$codeError = null;\n        this.$codeDirty = false;\n        this.$version = 1;\n        this.validationResults = [];\n        this.maxStackSize = 20;\n        this.undoStack = [];\n        this.redoStack = [];\n        this.undoRedoStateChangedCallback = null;\n        this.nodeAddedCallback = null;\n        this.nodeRemovedCallback = null;\n        this.textAddedCallback = null;\n        this.textRemovedCallback = null;\n        this.callbacksDisabled = false;\n\n        if (data) {\n            this.load(data);\n        }\n    }\n\n    // undo / redo\n    // is code changed without reevaluation?\n    //global expression code\n    //floating texts\n\n    _createClass(DataModel, [{\n        key: 'getJsonReplacer',\n        value: function getJsonReplacer() {\n            var filterLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var filterComputed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var replacer = arguments[2];\n            var filterPrivate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n            return function (k, v) {\n\n                if (filterPrivate && _sdUtils.Utils.startsWith(k, '$') || k == 'parentNode') {\n                    return undefined;\n                }\n                if (filterLocation && k == 'location') {\n                    return undefined;\n                }\n                if (filterComputed && k == 'computed') {\n                    return undefined;\n                }\n\n                if (replacer) {\n                    return replacer(k, v);\n                }\n\n                return v;\n            };\n        }\n    }, {\n        key: 'serialize',\n        value: function serialize() {\n            var stringify = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n            var filterLocation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var filterComputed = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            var replacer = arguments[3];\n            var filterPrivate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n            var data = {\n                code: this.code,\n                expressionScope: this.expressionScope,\n                trees: this.getRoots(),\n                texts: this.texts\n            };\n\n            if (!stringify) {\n                return data;\n            }\n\n            return _sdUtils.Utils.stringify(data, this.getJsonReplacer(filterLocation, filterComputed, replacer, filterPrivate), []);\n        }\n\n        /*Loads serialized data*/\n\n    }, {\n        key: 'load',\n        value: function load(data) {\n            var _this = this;\n\n            //roots, texts, code, expressionScope\n            var callbacksDisabled = this.callbacksDisabled;\n            this.callbacksDisabled = true;\n\n            this.clear();\n\n            data.trees.forEach(function (nodeData) {\n                var node = _this.createNodeFromData(nodeData);\n            });\n\n            if (data.texts) {\n                data.texts.forEach(function (textData) {\n                    var location = new domain.Point(textData.location.x, textData.location.y);\n                    var text = new domain.Text(location, textData.value);\n                    _this.texts.push(text);\n                });\n            }\n\n            this.clearExpressionScope();\n            this.code = data.code || '';\n\n            if (data.expressionScope) {\n                _sdUtils.Utils.extend(this.expressionScope, data.expressionScope);\n            }\n            this.callbacksDisabled = callbacksDisabled;\n        }\n    }, {\n        key: 'getDTO',\n        value: function getDTO() {\n            var filterLocation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var filterComputed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var filterPrivate = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n            var dto = {\n                serializedData: this.serialize(true, filterLocation, filterComputed, null, filterPrivate),\n                $codeError: this.$codeError,\n                $codeDirty: this.$codeDirty,\n                validationResults: this.validationResults.slice()\n\n            };\n            return dto;\n        }\n    }, {\n        key: 'loadFromDTO',\n        value: function loadFromDTO(dto, dataReviver) {\n            var _this2 = this;\n\n            this.load(JSON.parse(dto.serializedData, dataReviver));\n            this.$codeError = dto.$codeError;\n            this.$codeDirty = dto.$codeDirty;\n            this.validationResults.length = 0;\n            dto.validationResults.forEach(function (v) {\n                _this2.validationResults.push(_validationResult.ValidationResult.createFromDTO(v));\n            });\n        }\n\n        /*This method updates only computation results/validation*/\n\n    }, {\n        key: 'updateFrom',\n        value: function updateFrom(dataModel) {\n            if (this.$version > dataModel.$version) {\n                _sdUtils.log.warn(\"DataModel.updateFrom: version of current model greater than update\");\n                return;\n            }\n            var byId = {};\n            dataModel.nodes.forEach(function (n) {\n                byId[n.$id] = n;\n            });\n            this.nodes.forEach(function (n, i) {\n                if (byId[n.$id]) {\n                    n.loadComputedValues(byId[n.$id].computed);\n                }\n            });\n            dataModel.edges.forEach(function (e) {\n                byId[e.$id] = e;\n            });\n            this.edges.forEach(function (e, i) {\n                if (byId[e.$id]) {\n                    e.loadComputedValues(byId[e.$id].computed);\n                }\n            });\n            this.expressionScope = dataModel.expressionScope;\n            this.$codeError = dataModel.$codeError;\n            this.$codeDirty = dataModel.$codeDirty;\n            this.validationResults = dataModel.validationResults;\n        }\n    }, {\n        key: 'getGlobalVariableNames',\n        value: function getGlobalVariableNames() {\n            var filterFunction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n            var res = [];\n            _sdUtils.Utils.forOwn(this.expressionScope, function (value, key) {\n                if (filterFunction && _sdUtils.Utils.isFunction(value)) {\n                    return;\n                }\n                res.push(key);\n            });\n            return res;\n        }\n\n        /*create node from serialized data*/\n\n    }, {\n        key: 'createNodeFromData',\n        value: function createNodeFromData(data, parent) {\n            var _this3 = this;\n\n            var node, location;\n\n            if (data.location) {\n                location = new domain.Point(data.location.x, data.location.y);\n            } else {\n                location = new domain.Point(0, 0);\n            }\n\n            if (domain.DecisionNode.$TYPE == data.type) {\n                node = new domain.DecisionNode(location);\n            } else if (domain.ChanceNode.$TYPE == data.type) {\n                node = new domain.ChanceNode(location);\n            } else if (domain.TerminalNode.$TYPE == data.type) {\n                node = new domain.TerminalNode(location);\n            }\n            if (data.$id) {\n                node.$id = data.$id;\n            }\n            if (data.$fieldStatus) {\n                node.$fieldStatus = data.$fieldStatus;\n            }\n            node.name = data.name;\n\n            if (data.code) {\n                node.code = data.code;\n            }\n            if (data.expressionScope) {\n                node.expressionScope = data.expressionScope;\n            }\n            if (data.computed) {\n                node.loadComputedValues(data.computed);\n            }\n\n            var edgeOrNode = this.addNode(node, parent);\n            data.childEdges.forEach(function (ed) {\n                var edge = _this3.createNodeFromData(ed.childNode, node);\n                edge.payoff = ed.payoff;\n                edge.probability = ed.probability;\n                edge.name = ed.name;\n                if (ed.computed) {\n                    edge.loadComputedValues(ed.computed);\n                }\n                if (ed.$id) {\n                    edge.$id = ed.$id;\n                }\n                if (ed.$fieldStatus) {\n                    edge.$fieldStatus = ed.$fieldStatus;\n                }\n            });\n\n            return edgeOrNode;\n        }\n\n        /*returns node or edge from parent to this node*/\n\n    }, {\n        key: 'addNode',\n        value: function addNode(node, parent) {\n            var self = this;\n            self.nodes.push(node);\n            if (parent) {\n                var edge = self._addChild(parent, node);\n                this._fireNodeAddedCallback(node);\n                return edge;\n            }\n\n            this._fireNodeAddedCallback(node);\n            return node;\n        }\n\n        /*injects given node into given edge*/\n\n    }, {\n        key: 'injectNode',\n        value: function injectNode(node, edge) {\n            var parent = edge.parentNode;\n            var child = edge.childNode;\n            this.nodes.push(node);\n            node.$parent = parent;\n            edge.childNode = node;\n            this._addChild(node, child);\n            this._fireNodeAddedCallback(node);\n        }\n    }, {\n        key: '_addChild',\n        value: function _addChild(parent, child) {\n            var self = this;\n            var edge = new domain.Edge(parent, child);\n            self._setEdgeInitialProbability(edge);\n            self.edges.push(edge);\n\n            parent.childEdges.push(edge);\n            child.$parent = parent;\n            return edge;\n        }\n    }, {\n        key: '_setEdgeInitialProbability',\n        value: function _setEdgeInitialProbability(edge) {\n            if (edge.parentNode instanceof domain.ChanceNode) {\n                edge.probability = '#';\n            } else {\n                edge.probability = undefined;\n            }\n        }\n\n        /*removes given node and its subtree*/\n\n    }, {\n        key: 'removeNode',\n        value: function removeNode(node) {\n            var $l = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n            var self = this;\n            node.childEdges.forEach(function (e) {\n                return self.removeNode(e.childNode, $l + 1);\n            });\n\n            self._removeNode(node);\n            var parent = node.$parent;\n            if (parent) {\n                var parentEdge = _sdUtils.Utils.find(parent.childEdges, function (e, i) {\n                    return e.childNode === node;\n                });\n                if ($l == 0) {\n                    self.removeEdge(parentEdge);\n                } else {\n                    self._removeEdge(parentEdge);\n                }\n            }\n            this._fireNodeRemovedCallback(node);\n        }\n\n        /*removes given nodes and their subtrees*/\n\n    }, {\n        key: 'removeNodes',\n        value: function removeNodes(nodes) {\n            var _this4 = this;\n\n            var roots = this.findSubtreeRoots(nodes);\n            roots.forEach(function (n) {\n                return _this4.removeNode(n, 0);\n            }, this);\n        }\n    }, {\n        key: 'convertNode',\n        value: function convertNode(node, typeToConvertTo) {\n            var _this5 = this;\n\n            var newNode;\n            if (!node.childEdges.length && node.$parent) {\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            } else {\n                if (node instanceof domain.DecisionNode && typeToConvertTo == domain.ChanceNode.$TYPE) {\n                    newNode = this.createNodeByType(typeToConvertTo, node.location);\n                } else if (typeToConvertTo == domain.DecisionNode.$TYPE) {\n                    newNode = this.createNodeByType(typeToConvertTo, node.location);\n                }\n            }\n\n            if (newNode) {\n                newNode.name = node.name;\n                this.replaceNode(newNode, node);\n                newNode.childEdges.forEach(function (e) {\n                    return _this5._setEdgeInitialProbability(e);\n                });\n                this._fireNodeAddedCallback(newNode);\n            }\n        }\n    }, {\n        key: 'createNodeByType',\n        value: function createNodeByType(type, location) {\n            if (type == domain.DecisionNode.$TYPE) {\n                return new domain.DecisionNode(location);\n            } else if (type == domain.ChanceNode.$TYPE) {\n                return new domain.ChanceNode(location);\n            } else if (type == domain.TerminalNode.$TYPE) {\n                return new domain.TerminalNode(location);\n            }\n        }\n    }, {\n        key: 'replaceNode',\n        value: function replaceNode(newNode, oldNode) {\n            var parent = oldNode.$parent;\n            newNode.$parent = parent;\n\n            if (parent) {\n                var parentEdge = _sdUtils.Utils.find(newNode.$parent.childEdges, function (e) {\n                    return e.childNode === oldNode;\n                });\n                parentEdge.childNode = newNode;\n            }\n\n            newNode.childEdges = oldNode.childEdges;\n            newNode.childEdges.forEach(function (e) {\n                return e.parentNode = newNode;\n            });\n\n            var index = this.nodes.indexOf(oldNode);\n            if (~index) {\n                this.nodes[index] = newNode;\n            }\n        }\n    }, {\n        key: 'getRoots',\n        value: function getRoots() {\n            return this.nodes.filter(function (n) {\n                return !n.$parent;\n            });\n        }\n    }, {\n        key: 'findSubtreeRoots',\n        value: function findSubtreeRoots(nodes) {\n            return nodes.filter(function (n) {\n                return !n.$parent || nodes.indexOf(n.$parent) === -1;\n            });\n        }\n\n        /*creates detached clone of given node*/\n\n    }, {\n        key: 'cloneSubtree',\n        value: function cloneSubtree(nodeToCopy, cloneComputedValues) {\n            var self = this;\n            var clone = this.cloneNode(nodeToCopy);\n\n            nodeToCopy.childEdges.forEach(function (e) {\n                var childClone = self.cloneSubtree(e.childNode, cloneComputedValues);\n                childClone.$parent = clone;\n                var edge = new domain.Edge(clone, childClone, e.name, e.payoff, e.probability);\n                if (cloneComputedValues) {\n                    edge.computed = _sdUtils.Utils.cloneDeep(e.computed);\n                    childClone.computed = _sdUtils.Utils.cloneDeep(e.childNode.computed);\n                }\n                clone.childEdges.push(edge);\n            });\n            if (cloneComputedValues) {\n                clone.computed = _sdUtils.Utils.cloneDeep(nodeToCopy.computed);\n            }\n            return clone;\n        }\n\n        /*attaches detached subtree to given parent*/\n\n    }, {\n        key: 'attachSubtree',\n        value: function attachSubtree(nodeToAttach, parent) {\n            var self = this;\n            var nodeOrEdge = self.addNode(nodeToAttach, parent);\n\n            var childEdges = self.getAllDescendantEdges(nodeToAttach);\n            childEdges.forEach(function (e) {\n                self.edges.push(e);\n                self.nodes.push(e.childNode);\n            });\n\n            return nodeOrEdge;\n        }\n    }, {\n        key: 'cloneNodes',\n        value: function cloneNodes(nodes) {\n            var roots = [];\n            //TODO\n        }\n\n        /*shallow clone without parent and children*/\n\n    }, {\n        key: 'cloneNode',\n        value: function cloneNode(node) {\n            var clone = _sdUtils.Utils.clone(node);\n            clone.$id = _sdUtils.Utils.guid();\n            clone.location = _sdUtils.Utils.clone(node.location);\n            clone.computed = _sdUtils.Utils.clone(node.computed);\n            clone.$parent = null;\n            clone.childEdges = [];\n            return clone;\n        }\n    }, {\n        key: 'findNodeById',\n        value: function findNodeById(id) {\n            return _sdUtils.Utils.find(this.nodes, function (n) {\n                return n.$id == id;\n            });\n        }\n    }, {\n        key: 'findEdgeById',\n        value: function findEdgeById(id) {\n            return _sdUtils.Utils.find(this.edges, function (e) {\n                return e.$id == id;\n            });\n        }\n    }, {\n        key: 'findById',\n        value: function findById(id) {\n            var node = this.findNodeById(id);\n            if (node) {\n                return node;\n            }\n            return this.findEdgeById(id);\n        }\n    }, {\n        key: '_removeNode',\n        value: function _removeNode(node) {\n            // simply removes node from node list\n            var index = this.nodes.indexOf(node);\n            if (index > -1) {\n                this.nodes.splice(index, 1);\n            }\n        }\n    }, {\n        key: 'removeEdge',\n        value: function removeEdge(edge) {\n            var index = edge.parentNode.childEdges.indexOf(edge);\n            if (index > -1) {\n                edge.parentNode.childEdges.splice(index, 1);\n            }\n            this._removeEdge(edge);\n        }\n    }, {\n        key: '_removeEdge',\n        value: function _removeEdge(edge) {\n            //removes edge from edge list without removing connected nodes\n            var index = this.edges.indexOf(edge);\n            if (index > -1) {\n                this.edges.splice(index, 1);\n            }\n        }\n    }, {\n        key: '_removeNodes',\n        value: function _removeNodes(nodesToRemove) {\n            this.nodes = this.nodes.filter(function (n) {\n                return nodesToRemove.indexOf(n) === -1;\n            });\n        }\n    }, {\n        key: '_removeEdges',\n        value: function _removeEdges(edgesToRemove) {\n            this.edges = this.edges.filter(function (e) {\n                return edgesToRemove.indexOf(e) === -1;\n            });\n        }\n    }, {\n        key: 'getAllDescendantEdges',\n        value: function getAllDescendantEdges(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                result.push(e);\n                if (e.childNode) {\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantEdges(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'getAllDescendantNodes',\n        value: function getAllDescendantNodes(node) {\n            var self = this;\n            var result = [];\n\n            node.childEdges.forEach(function (e) {\n                if (e.childNode) {\n                    result.push(e.childNode);\n                    result.push.apply(result, _toConsumableArray(self.getAllDescendantNodes(e.childNode)));\n                }\n            });\n\n            return result;\n        }\n    }, {\n        key: 'getAllNodesInSubtree',\n        value: function getAllNodesInSubtree(node) {\n            var descendants = this.getAllDescendantNodes(node);\n            descendants.unshift(node);\n            return descendants;\n        }\n    }, {\n        key: 'isUndoAvailable',\n        value: function isUndoAvailable() {\n            return !!this.undoStack.length;\n        }\n    }, {\n        key: 'isRedoAvailable',\n        value: function isRedoAvailable() {\n            return !!this.redoStack.length;\n        }\n    }, {\n        key: 'createStateSnapshot',\n        value: function createStateSnapshot(revertConf) {\n            return {\n                revertConf: revertConf,\n                nodes: _sdUtils.Utils.cloneDeep(this.nodes),\n                edges: _sdUtils.Utils.cloneDeep(this.edges),\n                texts: _sdUtils.Utils.cloneDeep(this.texts),\n                expressionScope: _sdUtils.Utils.cloneDeep(this.expressionScope),\n                code: this.code,\n                $codeError: this.$codeError\n            };\n        }\n    }, {\n        key: 'saveStateFromSnapshot',\n        value: function saveStateFromSnapshot(state) {\n            this.redoStack.length = 0;\n\n            this._pushToStack(this.undoStack, state);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'saveState',\n        value: function saveState(revertConf) {\n            this.saveStateFromSnapshot(this.createStateSnapshot(revertConf));\n            return this;\n        }\n    }, {\n        key: 'undo',\n        value: function undo() {\n            var self = this;\n            var newState = this.undoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.redoStack, {\n                revertConf: newState.revertConf,\n                nodes: self.nodes,\n                edges: self.edges,\n                texts: self.texts,\n                expressionScope: self.expressionScope,\n                code: self.code,\n                $codeError: self.$codeError\n\n            });\n\n            this._setNewState(newState);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'redo',\n        value: function redo() {\n            var self = this;\n            var newState = this.redoStack.pop();\n            if (!newState) {\n                return;\n            }\n\n            this._pushToStack(this.undoStack, {\n                revertConf: newState.revertConf,\n                nodes: self.nodes,\n                edges: self.edges,\n                texts: self.texts,\n                expressionScope: self.expressionScope,\n                code: self.code,\n                $codeError: self.$codeError\n            });\n\n            this._setNewState(newState, true);\n\n            this._fireUndoRedoCallback();\n\n            return this;\n        }\n    }, {\n        key: 'clear',\n        value: function clear() {\n            this.nodes.length = 0;\n            this.edges.length = 0;\n            this.undoStack.length = 0;\n            this.redoStack.length = 0;\n            this.texts.length = 0;\n            this.clearExpressionScope();\n            this.code = '';\n            this.$codeError = null;\n            this.$codeDirty = false;\n        }\n    }, {\n        key: 'addText',\n        value: function addText(text) {\n            this.texts.push(text);\n\n            this._fireTextAddedCallback(text);\n        }\n    }, {\n        key: 'removeTexts',\n        value: function removeTexts(texts) {\n            var _this6 = this;\n\n            texts.forEach(function (t) {\n                return _this6.removeText(t);\n            });\n        }\n    }, {\n        key: 'removeText',\n        value: function removeText(text) {\n            var index = this.texts.indexOf(text);\n            if (index > -1) {\n                this.texts.splice(index, 1);\n                this._fireTextRemovedCallback(text);\n            }\n        }\n    }, {\n        key: 'clearExpressionScope',\n        value: function clearExpressionScope() {\n            var _this7 = this;\n\n            _sdUtils.Utils.forOwn(this.expressionScope, function (value, key) {\n                delete _this7.expressionScope[key];\n            });\n        }\n    }, {\n        key: '_setNewState',\n        value: function _setNewState(newState, redo) {\n            var nodeById = _sdUtils.Utils.getObjectByIdMap(newState.nodes);\n            var edgeById = _sdUtils.Utils.getObjectByIdMap(newState.edges);\n            this.nodes = newState.nodes;\n            this.edges = newState.edges;\n            this.texts = newState.texts;\n            this.expressionScope = newState.expressionScope;\n            this.code = newState.code;\n            this.$codeError = newState.$codeError;\n\n            this.nodes.forEach(function (n) {\n                for (var i = 0; i < n.childEdges.length; i++) {\n                    var edge = edgeById[n.childEdges[i].$id];\n                    n.childEdges[i] = edge;\n                    edge.parentNode = n;\n                    edge.childNode = nodeById[edge.childNode.$id];\n                }\n            });\n\n            if (newState.revertConf) {\n                if (!redo && newState.revertConf.onUndo) {\n                    newState.revertConf.onUndo(newState.revertConf.data);\n                }\n                if (redo && newState.revertConf.onRedo) {\n                    newState.revertConf.onRedo(newState.revertConf.data);\n                }\n            }\n            this.revertConf = newState.revertConf;\n        }\n    }, {\n        key: '_pushToStack',\n        value: function _pushToStack(stack, obj) {\n            if (stack.length >= this.maxStackSize) {\n                stack.shift();\n            }\n            stack.push(obj);\n        }\n    }, {\n        key: '_fireUndoRedoCallback',\n        value: function _fireUndoRedoCallback() {\n            if (!this.callbacksDisabled && this.undoRedoStateChangedCallback) {\n                this.undoRedoStateChangedCallback();\n            }\n        }\n    }, {\n        key: '_fireNodeAddedCallback',\n        value: function _fireNodeAddedCallback(node) {\n            if (!this.callbacksDisabled && this.nodeAddedCallback) {\n                this.nodeAddedCallback(node);\n            }\n        }\n    }, {\n        key: '_fireNodeRemovedCallback',\n        value: function _fireNodeRemovedCallback(node) {\n            if (!this.callbacksDisabled && this.nodeRemovedCallback) {\n                this.nodeRemovedCallback(node);\n            }\n        }\n    }, {\n        key: '_fireTextAddedCallback',\n        value: function _fireTextAddedCallback(text) {\n            if (!this.callbacksDisabled && this.textAddedCallback) {\n                this.textAddedCallback(text);\n            }\n        }\n    }, {\n        key: '_fireTextRemovedCallback',\n        value: function _fireTextRemovedCallback(text) {\n            if (!this.callbacksDisabled && this.textRemovedCallback) {\n                this.textRemovedCallback(text);\n            }\n        }\n    }]);\n\n    return DataModel;\n}();\n\n},{\"./domain\":3,\"./validation-result\":13,\"sd-utils\":\"sd-utils\"}],2:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Edge = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _objectWithComputedValues = require('./object-with-computed-values');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Edge = exports.Edge = function (_ObjectWithComputedVa) {\n    _inherits(Edge, _ObjectWithComputedVa);\n\n    function Edge(parentNode, childNode, name, payoff, probability) {\n        _classCallCheck(this, Edge);\n\n        var _this = _possibleConstructorReturn(this, (Edge.__proto__ || Object.getPrototypeOf(Edge)).call(this));\n\n        _this.name = '';\n        _this.probability = undefined;\n        _this.payoff = 0;\n        _this.$DISPLAY_VALUE_NAMES = ['probability', 'payoff', 'optimal'];\n\n        _this.parentNode = parentNode;\n        _this.childNode = childNode;\n\n        if (name !== undefined) {\n            _this.name = name;\n        }\n        if (probability !== undefined) {\n            _this.probability = probability;\n        }\n        if (payoff !== undefined) {\n            _this.payoff = payoff;\n        }\n\n        return _this;\n    }\n\n    _createClass(Edge, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'setProbability',\n        value: function setProbability(probability) {\n            this.probability = probability;\n            return this;\n        }\n    }, {\n        key: 'setPayoff',\n        value: function setPayoff(payoff) {\n            this.payoff = payoff;\n            return this;\n        }\n    }, {\n        key: 'computedBaseProbability',\n        value: function computedBaseProbability(val) {\n            return this.computedValue(null, 'probability', val);\n        }\n    }, {\n        key: 'computedBasePayoff',\n        value: function computedBasePayoff(val) {\n            return this.computedValue(null, 'payoff', val);\n        }\n    }, {\n        key: 'displayProbability',\n        value: function displayProbability(val) {\n            return this.displayValue('probability', val);\n        }\n    }, {\n        key: 'displayPayoff',\n        value: function displayPayoff(val) {\n            return this.displayValue('payoff', val);\n        }\n    }]);\n\n    return Edge;\n}(_objectWithComputedValues.ObjectWithComputedValues);\n\n},{\"./object-with-computed-values\":8}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _node = require('./node/node');\n\nObject.keys(_node).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _node[key];\n    }\n  });\n});\n\nvar _decisionNode = require('./node/decision-node');\n\nObject.keys(_decisionNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _decisionNode[key];\n    }\n  });\n});\n\nvar _chanceNode = require('./node/chance-node');\n\nObject.keys(_chanceNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _chanceNode[key];\n    }\n  });\n});\n\nvar _terminalNode = require('./node/terminal-node');\n\nObject.keys(_terminalNode).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _terminalNode[key];\n    }\n  });\n});\n\nvar _edge = require('./edge');\n\nObject.keys(_edge).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _edge[key];\n    }\n  });\n});\n\nvar _point = require('./point');\n\nObject.keys(_point).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _point[key];\n    }\n  });\n});\n\nvar _text = require('./text');\n\nObject.keys(_text).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _text[key];\n    }\n  });\n});\n\n},{\"./edge\":2,\"./node/chance-node\":4,\"./node/decision-node\":5,\"./node/node\":6,\"./node/terminal-node\":7,\"./point\":10,\"./text\":11}],4:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ChanceNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ChanceNode = exports.ChanceNode = function (_Node) {\n    _inherits(ChanceNode, _Node);\n\n    function ChanceNode(location) {\n        _classCallCheck(this, ChanceNode);\n\n        return _possibleConstructorReturn(this, (ChanceNode.__proto__ || Object.getPrototypeOf(ChanceNode)).call(this, ChanceNode.$TYPE, location));\n    }\n\n    return ChanceNode;\n}(_node.Node);\n\nChanceNode.$TYPE = 'chance';\n\n},{\"./node\":6}],5:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.DecisionNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DecisionNode = exports.DecisionNode = function (_Node) {\n    _inherits(DecisionNode, _Node);\n\n    function DecisionNode(location) {\n        _classCallCheck(this, DecisionNode);\n\n        return _possibleConstructorReturn(this, (DecisionNode.__proto__ || Object.getPrototypeOf(DecisionNode)).call(this, DecisionNode.$TYPE, location));\n    }\n\n    return DecisionNode;\n}(_node.Node);\n\nDecisionNode.$TYPE = 'decision';\n\n},{\"./node\":6}],6:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Node = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _point = require('../point');\n\nvar _objectWithComputedValues = require('../object-with-computed-values');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Node = exports.Node = function (_ObjectWithComputedVa) {\n    _inherits(Node, _ObjectWithComputedVa);\n\n    //code evaluation errors\n\n    function Node(type, location) {\n        _classCallCheck(this, Node);\n\n        var _this = _possibleConstructorReturn(this, (Node.__proto__ || Object.getPrototypeOf(Node)).call(this));\n\n        _this.childEdges = [];\n        _this.name = '';\n        _this.code = '';\n        _this.$codeDirty = false;\n        _this.$codeError = null;\n        _this.expressionScope = null;\n        _this.$DISPLAY_VALUE_NAMES = ['childrenPayoff', 'aggregatedPayoff', 'probabilityToEnter', 'optimal'];\n\n        _this.location = location;\n        if (!location) {\n            _this.location = new _point.Point(0, 0);\n        }\n        _this.type = type;\n        return _this;\n    } // is code changed without reevaluation?\n    //Point\n\n    _createClass(Node, [{\n        key: 'setName',\n        value: function setName(name) {\n            this.name = name;\n            return this;\n        }\n    }, {\n        key: 'moveTo',\n        value: function moveTo(x, y, withChildren) {\n            //move to new location\n            if (withChildren) {\n                var dx = x - this.location.x;\n                var dy = y - this.location.y;\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: 'move',\n        value: function move(dx, dy, withChildren) {\n            //move by vector\n            if (withChildren) {\n                this.childEdges.forEach(function (e) {\n                    return e.childNode.move(dx, dy, true);\n                });\n            }\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Node;\n}(_objectWithComputedValues.ObjectWithComputedValues);\n\n},{\"../object-with-computed-values\":8,\"../point\":10}],7:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.TerminalNode = undefined;\n\nvar _node = require('./node');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === 'undefined' ? 'undefined' : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TerminalNode = exports.TerminalNode = function (_Node) {\n    _inherits(TerminalNode, _Node);\n\n    function TerminalNode(location) {\n        _classCallCheck(this, TerminalNode);\n\n        return _possibleConstructorReturn(this, (TerminalNode.__proto__ || Object.getPrototypeOf(TerminalNode)).call(this, TerminalNode.$TYPE, location));\n    }\n\n    return TerminalNode;\n}(_node.Node);\n\nTerminalNode.$TYPE = 'terminal';\n\n},{\"./node\":6}],8:[function(require,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectWithComputedValues = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nvar _objectWithIdAndEditableFields = require('./object-with-id-and-editable-fields');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ObjectWithComputedValues = exports.ObjectWithComputedValues = function (_ObjectWithIdAndEdita) {\n    _inherits(ObjectWithComputedValues, _ObjectWithIdAndEdita);\n\n    function ObjectWithComputedValues() {\n        var _ref;\n\n        var _temp, _this, _ret;\n\n        _classCallCheck(this, ObjectWithComputedValues);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ObjectWithComputedValues.__proto__ || Object.getPrototypeOf(ObjectWithComputedValues)).call.apply(_ref, [this].concat(args))), _this), _this.computed = {}, _temp), _possibleConstructorReturn(_this, _ret);\n    }\n\n    _createClass(ObjectWithComputedValues, [{\n        key: 'computedValue',\n        //computed values\n\n        /*get or set computed value*/\n        value: function computedValue(ruleName, fieldName, value) {\n            var path = 'computed.';\n            if (ruleName) {\n                path += ruleName + '.';\n            }\n            path += fieldName;\n            if (value === undefined) {\n                return _sdUtils.Utils.get(this, path, null);\n            }\n            _sdUtils.Utils.set(this, path, value);\n            return value;\n        }\n    }, {\n        key: 'clearComputedValues',\n        value: function clearComputedValues(ruleName) {\n            var _this2 = this;\n\n            if (ruleName == undefined) {\n                this.computed = {};\n                return;\n            }\n            if (_sdUtils.Utils.isArray(ruleName)) {\n                ruleName.forEach(function (n) {\n                    _this2.computed[n] = {};\n                });\n                return;\n            }\n            this.computed[ruleName] = {};\n        }\n    }, {\n        key: 'clearDisplayValues',\n        value: function clearDisplayValues() {\n            this.computed['$displayValues'] = {};\n        }\n    }, {\n        key: 'displayValue',\n        value: function displayValue(fieldName, value) {\n            return this.computedValue(null, '$displayValues.' + fieldName, value);\n        }\n    }, {\n        key: 'loadComputedValues',\n        value: function loadComputedValues(computed) {\n            this.computed = computed;\n        }\n    }]);\n\n    return ObjectWithComputedValues;\n}(_objectWithIdAndEditableFields.ObjectWithIdAndEditableFields);\n\n},{\"./object-with-id-and-editable-fields\":9,\"sd-utils\":\"sd-utils\"}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ObjectWithIdAndEditableFields = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require('sd-utils');\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ObjectWithIdAndEditableFields = exports.ObjectWithIdAndEditableFields = function () {\n    function ObjectWithIdAndEditableFields() {\n        _classCallCheck(this, ObjectWithIdAndEditableFields);\n\n        this.$id = _sdUtils.Utils.guid();\n        this.$fieldStatus = {};\n    } //internal id\n\n\n    _createClass(ObjectWithIdAndEditableFields, [{\n        key: 'getFieldStatus',\n        value: function getFieldStatus(fieldName) {\n            if (!this.$fieldStatus[fieldName]) {\n                this.$fieldStatus[fieldName] = {\n                    valid: {\n                        syntax: true,\n                        value: true\n                    }\n                };\n            }\n            return this.$fieldStatus[fieldName];\n        }\n    }, {\n        key: 'setSyntaxValidity',\n        value: function setSyntaxValidity(fieldName, valid) {\n            var fieldStatus = this.getFieldStatus(fieldName);\n            fieldStatus.valid.syntax = valid;\n        }\n    }, {\n        key: 'setValueValidity',\n        value: function setValueValidity(fieldName, valid) {\n            var fieldStatus = this.getFieldStatus(fieldName);\n            fieldStatus.valid.value = valid;\n        }\n    }, {\n        key: 'isFieldValid',\n        value: function isFieldValid(fieldName) {\n            var syntax = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n            var value = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            var fieldStatus = this.getFieldStatus(fieldName);\n            if (syntax && value) {\n                return fieldStatus.valid.syntax && fieldStatus.valid.value;\n            }\n            if (syntax) {\n                return fieldStatus.valid.syntax;\n            }\n            return fieldStatus.valid.value;\n        }\n    }]);\n\n    return ObjectWithIdAndEditableFields;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],10:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar Point = exports.Point = function () {\n    function Point(x, y) {\n        _classCallCheck(this, Point);\n\n        if (x instanceof Point) {\n            y = x.y;\n            x = x.x;\n        } else if (Array.isArray(x)) {\n            y = x[1];\n            x = x[0];\n        }\n        this.x = x;\n        this.y = y;\n    }\n\n    _createClass(Point, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            if (Array.isArray(x)) {\n                y = x[1];\n                x = x[0];\n            }\n            this.x = x;\n            this.y = y;\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            if (Array.isArray(dx)) {\n                dy = dx[1];\n                dx = dx[0];\n            }\n            this.x += dx;\n            this.y += dy;\n            return this;\n        }\n    }]);\n\n    return Point;\n}();\n\n},{}],11:[function(require,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.Text = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _point = require(\"./point\");\n\nvar _sdUtils = require(\"sd-utils\");\n\nvar _objectWithIdAndEditableFields = require(\"./object-with-id-and-editable-fields\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n    if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof(call)) === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof(superClass)));\n    }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Text = exports.Text = function (_ObjectWithIdAndEdita) {\n    _inherits(Text, _ObjectWithIdAndEdita);\n\n    //Point\n\n    function Text(location, value) {\n        _classCallCheck(this, Text);\n\n        var _this = _possibleConstructorReturn(this, (Text.__proto__ || Object.getPrototypeOf(Text)).call(this));\n\n        _this.value = '';\n\n        _this.location = location;\n        if (!location) {\n            _this.location = new _point.Point(0, 0);\n        }\n\n        if (value) {\n            _this.value = value;\n        }\n        return _this;\n    }\n\n    _createClass(Text, [{\n        key: \"moveTo\",\n        value: function moveTo(x, y) {\n            //move to new location\n            this.location.moveTo(x, y);\n            return this;\n        }\n    }, {\n        key: \"move\",\n        value: function move(dx, dy) {\n            //move by vector\n            this.location.move(dx, dy);\n            return this;\n        }\n    }]);\n\n    return Text;\n}(_objectWithIdAndEditableFields.ObjectWithIdAndEditableFields);\n\n},{\"./object-with-id-and-editable-fields\":9,\"./point\":10,\"sd-utils\":\"sd-utils\"}],12:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.domain = undefined;\n\nvar _dataModel = require('./data-model');\n\nObject.keys(_dataModel).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _dataModel[key];\n    }\n  });\n});\n\nvar _validationResult = require('./validation-result');\n\nObject.keys(_validationResult).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _validationResult[key];\n    }\n  });\n});\n\nvar _domain = require('./domain');\n\nvar domain = _interopRequireWildcard(_domain);\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }newObj.default = obj;return newObj;\n  }\n}\n\nexports.domain = domain;\n\n},{\"./data-model\":1,\"./domain\":3,\"./validation-result\":13}],13:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.ValidationResult = undefined;\n\nvar _createClass = function () {\n    function defineProperties(target, props) {\n        for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n        }\n    }return function (Constructor, protoProps, staticProps) {\n        if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n    };\n}();\n\nvar _sdUtils = require(\"sd-utils\");\n\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n\nvar ValidationResult = exports.ValidationResult = function () {\n    function ValidationResult() {\n        _classCallCheck(this, ValidationResult);\n\n        this.errors = {};\n        this.warnings = {};\n        this.objectIdToError = {};\n    }\n\n    _createClass(ValidationResult, [{\n        key: \"addError\",\n        value: function addError(error, obj) {\n            if (_sdUtils.Utils.isString(error)) {\n                error = { name: error };\n            }\n            var name = error.name;\n            var errorsByName = this.errors[name];\n            if (!errorsByName) {\n                errorsByName = [];\n                this.errors[name] = errorsByName;\n            }\n            var objE = this.objectIdToError[obj.$id];\n            if (!objE) {\n                objE = [];\n                this.objectIdToError[obj.$id] = objE;\n            }\n            errorsByName.push(obj);\n            objE.push(error);\n        }\n    }, {\n        key: \"addWarning\",\n        value: function addWarning(name, obj) {\n            var e = this.warnings[name];\n            if (!e) {\n                e = [];\n                this.warnings[name] = e;\n            }\n            e.push(obj);\n        }\n    }, {\n        key: \"isValid\",\n        value: function isValid() {\n            return Object.getOwnPropertyNames(this.errors).length === 0;\n        }\n    }], [{\n        key: \"createFromDTO\",\n        value: function createFromDTO(dto) {\n            var v = new ValidationResult();\n            v.errors = dto.errors;\n            v.warnings = dto.warnings;\n            v.objectIdToError = dto.objectIdToError;\n            return v;\n        }\n    }]);\n\n    return ValidationResult;\n}();\n\n},{\"sd-utils\":\"sd-utils\"}],\"sd-model\":[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _index = require('./src/index');\n\nObject.keys(_index).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _index[key];\n    }\n  });\n});\n\n},{\"./src/index\":12}]},{},[])\n\n","import {Utils} from 'sd-utils'\nimport {log} from \"sd-utils\";\nimport * as domain from './domain'\nimport {ValidationResult} from './validation-result'\n\n/*\n * Data model manager\n * */\nexport class DataModel {\n\n    nodes = [];\n    edges = [];\n\n    texts = []; //floating texts\n\n    expressionScope = {}; //global expression scope\n    code = \"\";//global expression code\n    $codeError = null; //code evaluation errors\n    $codeDirty = false; // is code changed without reevaluation?\n    $version=1;\n\n    validationResults = [];\n\n    // undo / redo\n    maxStackSize = 20;\n    undoStack = [];\n    redoStack = [];\n    undoRedoStateChangedCallback = null;\n    nodeAddedCallback = null;\n    nodeRemovedCallback = null;\n\n    textAddedCallback = null;\n    textRemovedCallback = null;\n\n    callbacksDisabled = false;\n\n    constructor(data) {\n        if(data){\n            this.load(data);\n        }\n    }\n\n    getJsonReplacer(filterLocation=false, filterComputed=false, replacer, filterPrivate =true){\n        return function (k, v) {\n\n            if ((filterPrivate && Utils.startsWith(k, '$')) || k == 'parentNode') {\n                return undefined;\n            }\n            if (filterLocation && k == 'location') {\n                return undefined;\n            }\n            if (filterComputed && k == 'computed') {\n                return undefined;\n            }\n\n            if (replacer){\n                return replacer(k, v);\n            }\n\n            return v;\n        }\n    }\n\n    serialize(stringify=true, filterLocation=false, filterComputed=false, replacer, filterPrivate =true){\n        var data =  {\n            code: this.code,\n            expressionScope: this.expressionScope,\n            trees: this.getRoots(),\n            texts: this.texts\n        };\n\n        if(!stringify){\n            return data;\n        }\n\n        return Utils.stringify(data, this.getJsonReplacer(filterLocation, filterComputed, replacer, filterPrivate), []);\n    }\n\n\n    /*Loads serialized data*/\n    load(data) {\n        //roots, texts, code, expressionScope\n        var callbacksDisabled = this.callbacksDisabled;\n        this.callbacksDisabled = true;\n\n        this.clear();\n\n\n        data.trees.forEach(nodeData=> {\n            var node = this.createNodeFromData(nodeData);\n        });\n\n        if (data.texts) {\n            data.texts.forEach(textData=> {\n                var location = new domain.Point(textData.location.x, textData.location.y);\n                var text = new domain.Text(location, textData.value);\n                this.texts.push(text);\n            })\n        }\n\n        this.clearExpressionScope();\n        this.code = data.code || '';\n\n        if (data.expressionScope) {\n            Utils.extend(this.expressionScope, data.expressionScope);\n        }\n        this.callbacksDisabled = callbacksDisabled;\n    }\n\n    getDTO(filterLocation=false, filterComputed=false, filterPrivate =false){\n        var dto = {\n            serializedData: this.serialize(true, filterLocation, filterComputed, null, filterPrivate),\n            $codeError: this.$codeError,\n            $codeDirty: this.$codeDirty,\n            validationResults: this.validationResults.slice()\n\n        };\n        return dto\n    }\n\n    loadFromDTO(dto, dataReviver){\n        this.load(JSON.parse(dto.serializedData, dataReviver));\n        this.$codeError = dto.$codeError;\n        this.$codeDirty = dto.$codeDirty;\n        this.validationResults.length=0;\n        dto.validationResults.forEach(v=>{\n            this.validationResults.push(ValidationResult.createFromDTO(v))\n        })\n    }\n\n    /*This method updates only computation results/validation*/\n    updateFrom(dataModel){\n        if(this.$version>dataModel.$version){\n            log.warn(\"DataModel.updateFrom: version of current model greater than update\")\n            return;\n        }\n        var byId = {}\n        dataModel.nodes.forEach(n=>{\n            byId[n.$id] = n;\n        });\n        this.nodes.forEach((n,i)=>{\n            if(byId[n.$id]){\n                n.loadComputedValues(byId[n.$id].computed);\n            }\n        });\n        dataModel.edges.forEach(e=>{\n            byId[e.$id] = e;\n        });\n        this.edges.forEach((e,i)=>{\n            if(byId[e.$id]){\n                e.loadComputedValues(byId[e.$id].computed);\n            }\n        });\n        this.expressionScope = dataModel.expressionScope;\n        this.$codeError = dataModel.$codeError;\n        this.$codeDirty = dataModel.$codeDirty;\n        this.validationResults  = dataModel.validationResults;\n    }\n\n    getGlobalVariableNames(filterFunction = true){\n        var res = [];\n        Utils.forOwn(this.expressionScope, (value, key)=>{\n            if(filterFunction && Utils.isFunction(value)){\n                return;\n            }\n            res.push(key);\n        });\n        return res;\n    }\n\n    /*create node from serialized data*/\n    createNodeFromData(data, parent) {\n        var node, location;\n\n        if(data.location){\n            location = new domain.Point(data.location.x, data.location.y);\n        }else{\n            location = new domain.Point(0,0);\n        }\n\n        if (domain.DecisionNode.$TYPE == data.type) {\n            node = new domain.DecisionNode(location);\n        } else if (domain.ChanceNode.$TYPE == data.type) {\n            node = new domain.ChanceNode(location);\n        } else if (domain.TerminalNode.$TYPE == data.type) {\n            node = new domain.TerminalNode(location);\n        }\n        if(data.$id){\n            node.$id = data.$id;\n        }\n        if(data.$fieldStatus){\n            node.$fieldStatus = data.$fieldStatus;\n        }\n        node.name = data.name;\n\n        if(data.code){\n            node.code = data.code;\n        }\n        if (data.expressionScope) {\n            node.expressionScope = data.expressionScope\n        }\n        if(data.computed){\n            node.loadComputedValues(data.computed);\n        }\n\n        var edgeOrNode = this.addNode(node, parent);\n        data.childEdges.forEach(ed=> {\n            var edge = this.createNodeFromData(ed.childNode, node);\n            edge.payoff = ed.payoff;\n            edge.probability = ed.probability;\n            edge.name = ed.name;\n            if(ed.computed){\n                edge.loadComputedValues(ed.computed);\n            }\n            if(ed.$id){\n                edge.$id = ed.$id;\n            }\n            if(ed.$fieldStatus){\n                edge.$fieldStatus = ed.$fieldStatus;\n            }\n        });\n\n        return edgeOrNode;\n    }\n\n    /*returns node or edge from parent to this node*/\n    addNode(node, parent) {\n        var self = this;\n        self.nodes.push(node);\n        if (parent) {\n            var edge = self._addChild(parent, node);\n            this._fireNodeAddedCallback(node);\n            return edge;\n        }\n\n        this._fireNodeAddedCallback(node);\n        return node;\n    }\n\n    /*injects given node into given edge*/\n    injectNode(node, edge) {\n        var parent = edge.parentNode;\n        var child = edge.childNode;\n        this.nodes.push(node);\n        node.$parent = parent;\n        edge.childNode = node;\n        this._addChild(node, child);\n        this._fireNodeAddedCallback(node);\n    }\n\n    _addChild(parent, child) {\n        var self = this;\n        var edge = new domain.Edge(parent, child);\n        self._setEdgeInitialProbability(edge);\n        self.edges.push(edge);\n\n        parent.childEdges.push(edge);\n        child.$parent = parent;\n        return edge;\n    }\n\n    _setEdgeInitialProbability(edge) {\n        if (edge.parentNode instanceof domain.ChanceNode) {\n            edge.probability = '#';\n        } else {\n            edge.probability = undefined;\n        }\n\n    }\n\n    /*removes given node and its subtree*/\n    removeNode(node, $l = 0) {\n\n        var self = this;\n        node.childEdges.forEach(e=>self.removeNode(e.childNode, $l + 1));\n\n        self._removeNode(node);\n        var parent = node.$parent;\n        if (parent) {\n            var parentEdge = Utils.find(parent.childEdges, (e, i)=> e.childNode === node);\n            if ($l == 0) {\n                self.removeEdge(parentEdge);\n            } else {\n                self._removeEdge(parentEdge);\n            }\n        }\n        this._fireNodeRemovedCallback(node);\n    }\n\n    /*removes given nodes and their subtrees*/\n    removeNodes(nodes) {\n\n        var roots = this.findSubtreeRoots(nodes);\n        roots.forEach(n=>this.removeNode(n, 0), this);\n    }\n\n    convertNode(node, typeToConvertTo){\n        var newNode;\n        if(!node.childEdges.length && node.$parent){\n            newNode = this.createNodeByType(typeToConvertTo, node.location);\n        }else{\n            if(node instanceof domain.DecisionNode && typeToConvertTo==domain.ChanceNode.$TYPE){\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            }else if(typeToConvertTo==domain.DecisionNode.$TYPE){\n                newNode = this.createNodeByType(typeToConvertTo, node.location);\n            }\n        }\n\n        if(newNode){\n            newNode.name=node.name;\n            this.replaceNode(newNode, node);\n            newNode.childEdges.forEach(e=>this._setEdgeInitialProbability(e));\n            this._fireNodeAddedCallback(newNode);\n        }\n\n    }\n\n    createNodeByType(type, location){\n        if(type==domain.DecisionNode.$TYPE){\n            return new domain.DecisionNode(location)\n        }else if(type==domain.ChanceNode.$TYPE){\n            return new domain.ChanceNode(location)\n        }else if(type==domain.TerminalNode.$TYPE){\n            return new domain.TerminalNode(location)\n        }\n    }\n\n    replaceNode(newNode, oldNode){\n        var parent = oldNode.$parent;\n        newNode.$parent = parent;\n\n        if(parent){\n            var parentEdge = Utils.find(newNode.$parent.childEdges, e=>e.childNode===oldNode);\n            parentEdge.childNode = newNode;\n        }\n\n        newNode.childEdges = oldNode.childEdges;\n        newNode.childEdges.forEach(e=>e.parentNode=newNode);\n\n        var index = this.nodes.indexOf(oldNode);\n        if(~index){\n            this.nodes[index]=newNode;\n        }\n    }\n\n    getRoots() {\n        return this.nodes.filter(n=>!n.$parent);\n    }\n\n    findSubtreeRoots(nodes) {\n        return nodes.filter(n=>!n.$parent || nodes.indexOf(n.$parent) === -1);\n    }\n\n    /*creates detached clone of given node*/\n    cloneSubtree(nodeToCopy, cloneComputedValues) {\n        var self = this;\n        var clone = this.cloneNode(nodeToCopy);\n\n        nodeToCopy.childEdges.forEach(e=> {\n            var childClone = self.cloneSubtree(e.childNode, cloneComputedValues);\n            childClone.$parent = clone;\n            var edge = new domain.Edge(clone, childClone, e.name, e.payoff, e.probability);\n            if (cloneComputedValues) {\n                edge.computed = Utils.cloneDeep(e.computed)\n                childClone.computed = Utils.cloneDeep(e.childNode.computed)\n            }\n            clone.childEdges.push(edge);\n        });\n        if (cloneComputedValues) {\n            clone.computed = Utils.cloneDeep(nodeToCopy.computed)\n        }\n        return clone;\n    }\n\n    /*attaches detached subtree to given parent*/\n    attachSubtree(nodeToAttach, parent) {\n        var self = this;\n        var nodeOrEdge = self.addNode(nodeToAttach, parent);\n\n        var childEdges = self.getAllDescendantEdges(nodeToAttach);\n        childEdges.forEach(e=> {\n            self.edges.push(e);\n            self.nodes.push(e.childNode);\n        });\n\n        return nodeOrEdge;\n    }\n\n    cloneNodes(nodes) {\n        var roots = []\n        //TODO\n    }\n\n    /*shallow clone without parent and children*/\n    cloneNode(node) {\n        var clone = Utils.clone(node)\n        clone.$id = Utils.guid();\n        clone.location = Utils.clone(node.location);\n        clone.computed = Utils.clone(node.computed);\n        clone.$parent = null;\n        clone.childEdges = [];\n        return clone;\n    }\n\n    findNodeById(id) {\n        return Utils.find(this.nodes, n=>n.$id == id);\n    }\n\n    findEdgeById(id) {\n        return Utils.find(this.edges, e=>e.$id == id);\n    }\n\n    findById(id) {\n        var node = this.findNodeById(id);\n        if (node) {\n            return node;\n        }\n        return this.findEdgeById(id);\n    }\n\n    _removeNode(node) {// simply removes node from node list\n        var index = this.nodes.indexOf(node);\n        if (index > -1) {\n            this.nodes.splice(index, 1);\n        }\n    }\n\n    removeEdge(edge) {\n        var index = edge.parentNode.childEdges.indexOf(edge);\n        if (index > -1) {\n            edge.parentNode.childEdges.splice(index, 1);\n        }\n        this._removeEdge(edge);\n    }\n\n    _removeEdge(edge) { //removes edge from edge list without removing connected nodes\n        var index = this.edges.indexOf(edge);\n        if (index > -1) {\n            this.edges.splice(index, 1);\n        }\n    }\n\n    _removeNodes(nodesToRemove) {\n        this.nodes = this.nodes.filter(n=>nodesToRemove.indexOf(n) === -1);\n    }\n\n    _removeEdges(edgesToRemove) {\n        this.edges = this.edges.filter(e=>edgesToRemove.indexOf(e) === -1);\n    }\n\n    getAllDescendantEdges(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=> {\n            result.push(e);\n            if (e.childNode) {\n                result.push(...self.getAllDescendantEdges(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllDescendantNodes(node) {\n        var self = this;\n        var result = [];\n\n        node.childEdges.forEach(e=> {\n            if (e.childNode) {\n                result.push(e.childNode);\n                result.push(...self.getAllDescendantNodes(e.childNode));\n            }\n        });\n\n        return result;\n    }\n\n    getAllNodesInSubtree(node) {\n        var descendants = this.getAllDescendantNodes(node);\n        descendants.unshift(node);\n        return descendants;\n    }\n\n    isUndoAvailable() {\n        return !!this.undoStack.length\n    }\n\n    isRedoAvailable() {\n        return !!this.redoStack.length\n    }\n\n    createStateSnapshot(revertConf){\n        return {\n            revertConf: revertConf,\n            nodes: Utils.cloneDeep(this.nodes),\n            edges: Utils.cloneDeep(this.edges),\n            texts: Utils.cloneDeep(this.texts),\n            expressionScope: Utils.cloneDeep(this.expressionScope),\n            code: this.code,\n            $codeError: this.$codeError\n        }\n    }\n\n\n    saveStateFromSnapshot(state){\n        this.redoStack.length = 0;\n\n        this._pushToStack(this.undoStack, state);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    saveState(revertConf) {\n        this.saveStateFromSnapshot(this.createStateSnapshot(revertConf));\n        return this;\n    }\n\n    undo() {\n        var self = this;\n        var newState = this.undoStack.pop();\n        if (!newState) {\n            return;\n        }\n\n        this._pushToStack(this.redoStack, {\n            revertConf: newState.revertConf,\n            nodes: self.nodes,\n            edges: self.edges,\n            texts: self.texts,\n            expressionScope: self.expressionScope,\n            code: self.code,\n            $codeError: self.$codeError\n\n        });\n\n        this._setNewState(newState);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    redo() {\n        var self = this;\n        var newState = this.redoStack.pop();\n        if (!newState) {\n            return;\n        }\n\n        this._pushToStack(this.undoStack, {\n            revertConf: newState.revertConf,\n            nodes: self.nodes,\n            edges: self.edges,\n            texts: self.texts,\n            expressionScope: self.expressionScope,\n            code: self.code,\n            $codeError: self.$codeError\n        });\n\n        this._setNewState(newState, true);\n\n        this._fireUndoRedoCallback();\n\n        return this;\n    }\n\n    clear() {\n        this.nodes.length = 0;\n        this.edges.length = 0;\n        this.undoStack.length = 0;\n        this.redoStack.length = 0;\n        this.texts.length = 0;\n        this.clearExpressionScope();\n        this.code = '';\n        this.$codeError = null;\n        this.$codeDirty = false;\n    }\n\n    addText(text) {\n        this.texts.push(text);\n\n        this._fireTextAddedCallback(text);\n    }\n\n    removeTexts(texts) {\n        texts.forEach(t=>this.removeText(t));\n    }\n\n    removeText(text) {\n        var index = this.texts.indexOf(text);\n        if (index > -1) {\n            this.texts.splice(index, 1);\n            this._fireTextRemovedCallback(text);\n        }\n    }\n\n    clearExpressionScope() {\n        Utils.forOwn(this.expressionScope, (value, key)=> {\n            delete this.expressionScope[key];\n        });\n    }\n\n    _setNewState(newState, redo) {\n        var nodeById = Utils.getObjectByIdMap(newState.nodes);\n        var edgeById = Utils.getObjectByIdMap(newState.edges);\n        this.nodes = newState.nodes;\n        this.edges = newState.edges;\n        this.texts = newState.texts;\n        this.expressionScope = newState.expressionScope;\n        this.code = newState.code;\n        this.$codeError  = newState.$codeError\n\n        this.nodes.forEach(n=> {\n            for (var i = 0; i < n.childEdges.length; i++) {\n                var edge = edgeById[n.childEdges[i].$id];\n                n.childEdges[i] = edge;\n                edge.parentNode = n;\n                edge.childNode = nodeById[edge.childNode.$id];\n            }\n\n        });\n\n        if (newState.revertConf) {\n            if (!redo && newState.revertConf.onUndo) {\n                newState.revertConf.onUndo(newState.revertConf.data);\n            }\n            if (redo && newState.revertConf.onRedo) {\n                newState.revertConf.onRedo(newState.revertConf.data);\n            }\n\n\n        }\n        this.revertConf = newState.revertConf;\n    }\n\n\n    _pushToStack(stack, obj) {\n        if (stack.length >= this.maxStackSize) {\n            stack.shift();\n        }\n        stack.push(obj);\n    }\n\n    _fireUndoRedoCallback() {\n        if (!this.callbacksDisabled && this.undoRedoStateChangedCallback) {\n            this.undoRedoStateChangedCallback();\n        }\n    }\n\n    _fireNodeAddedCallback(node) {\n        if (!this.callbacksDisabled && this.nodeAddedCallback) {\n            this.nodeAddedCallback(node);\n        }\n    }\n\n    _fireNodeRemovedCallback(node) {\n        if (!this.callbacksDisabled && this.nodeRemovedCallback) {\n            this.nodeRemovedCallback(node);\n        }\n    }\n\n    _fireTextAddedCallback(text) {\n        if (!this.callbacksDisabled && this.textAddedCallback) {\n            this.textAddedCallback(text);\n        }\n    }\n\n    _fireTextRemovedCallback(text) {\n        if (!this.callbacksDisabled && this.textRemovedCallback) {\n            this.textRemovedCallback(text);\n        }\n    }\n}\n","import {ObjectWithComputedValues} from './object-with-computed-values'\n\nexport class Edge extends ObjectWithComputedValues{\n    parentNode;\n    childNode;\n\n    name='';\n    probability=undefined;\n    payoff=0;\n\n    $DISPLAY_VALUE_NAMES = ['probability', 'payoff', 'optimal'];\n\n    constructor(parentNode, childNode, name,payoff, probability, ){\n        super();\n        this.parentNode = parentNode;\n        this.childNode = childNode;\n\n        if(name!==undefined){\n            this.name = name;\n        }\n        if(probability!==undefined){\n            this.probability=probability;\n        }\n        if(payoff!==undefined){\n            this.payoff=payoff\n        }\n\n    }\n\n    setName(name){\n        this.name = name;\n        return this;\n    }\n\n    setProbability(probability){\n        this.probability = probability;\n        return this;\n    }\n\n    setPayoff(payoff){\n        this.payoff = payoff;\n        return this;\n    }\n\n    computedBaseProbability(val){\n        return this.computedValue(null, 'probability', val);\n    }\n\n    computedBasePayoff(val){\n        return this.computedValue(null, 'payoff', val);\n    }\n\n    displayProbability(val){\n        return this.displayValue('probability', val);\n    }\n\n    displayPayoff(val){\n        return this.displayValue('payoff', val);\n    }\n}\n","export * from './node/node'\nexport * from './node/decision-node'\nexport * from './node/chance-node'\nexport * from './node/terminal-node'\nexport * from './edge'\nexport * from './point'\nexport * from './text'\n","import {Node} from './node'\n\nexport class ChanceNode extends Node{\n\n    static $TYPE = 'chance';\n\n    constructor(location){\n        super(ChanceNode.$TYPE, location);\n    }\n}\n","import {Node} from './node'\n\nexport class DecisionNode extends Node{\n\n    static $TYPE = 'decision';\n\n    constructor(location){\n        super(DecisionNode.$TYPE, location);\n    }\n}\n","import {Point} from '../point'\nimport {ObjectWithComputedValues} from '../object-with-computed-values'\n\nexport class Node extends ObjectWithComputedValues{\n\n    type;\n    childEdges=[];\n    name='';\n\n    location; //Point\n\n    code='';\n    $codeDirty = false; // is code changed without reevaluation?\n    $codeError = null; //code evaluation errors\n\n    expressionScope=null;\n\n    $DISPLAY_VALUE_NAMES = ['childrenPayoff', 'aggregatedPayoff', 'probabilityToEnter', 'optimal']\n\n    constructor(type, location){\n        super();\n        this.location=location;\n        if(!location){\n            this.location = new Point(0,0);\n        }\n        this.type=type;\n    }\n\n    setName(name){\n        this.name = name;\n        return this;\n    }\n\n    moveTo(x,y, withChildren){ //move to new location\n        if(withChildren){\n            var dx = x-this.location.x;\n            var dy = y-this.location.y;\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\n        }\n\n        this.location.moveTo(x,y);\n        return this;\n    }\n\n    move(dx, dy, withChildren){ //move by vector\n        if(withChildren){\n            this.childEdges.forEach(e=>e.childNode.move(dx, dy, true))\n        }\n        this.location.move(dx, dy);\n        return this;\n    }\n}\n","import {Node} from './node'\n\nexport class TerminalNode extends Node{\n\n    static $TYPE = 'terminal';\n\n    constructor(location){\n        super(TerminalNode.$TYPE, location);\n    }\n}\n","import {Utils} from 'sd-utils'\n\nimport {ObjectWithIdAndEditableFields} from \"./object-with-id-and-editable-fields\";\n\nexport class ObjectWithComputedValues extends ObjectWithIdAndEditableFields{\n\n    computed={}; //computed values\n\n    /*get or set computed value*/\n    computedValue(ruleName, fieldName, value){\n        var path = 'computed.';\n        if(ruleName){\n            path+=ruleName+'.';\n        }\n        path+=fieldName;\n        if(value===undefined){\n            return  Utils.get(this, path, null);\n        }\n        Utils.set(this, path, value);\n        return value;\n    }\n\n    clearComputedValues(ruleName){\n        if(ruleName==undefined){\n            this.computed={};\n            return;\n        }\n        if(Utils.isArray(ruleName)){\n            ruleName.forEach(n=>{\n                this.computed[n]={};\n            });\n            return;\n        }\n        this.computed[ruleName]={};\n    }\n\n    clearDisplayValues(){\n        this.computed['$displayValues']={};\n    }\n\n    displayValue(fieldName, value){\n        return this.computedValue(null, '$displayValues.'+fieldName, value);\n    }\n\n    loadComputedValues(computed){\n        this.computed = computed;\n    }\n}\n","import {Utils} from 'sd-utils'\n\nexport class ObjectWithIdAndEditableFields {\n\n    $id = Utils.guid(); //internal id\n    $fieldStatus={};\n\n    getFieldStatus(fieldName){\n        if(!this.$fieldStatus[fieldName]){\n            this.$fieldStatus[fieldName] = {\n                valid: {\n                    syntax: true,\n                    value: true\n                }\n            }\n        }\n        return this.$fieldStatus[fieldName];\n    }\n\n    setSyntaxValidity(fieldName, valid){\n        var fieldStatus = this.getFieldStatus(fieldName);\n        fieldStatus.valid.syntax = valid;\n    }\n\n    setValueValidity(fieldName, valid){\n        var fieldStatus = this.getFieldStatus(fieldName);\n        fieldStatus.valid.value = valid;\n    }\n\n    isFieldValid(fieldName, syntax=true, value=true){\n        var fieldStatus = this.getFieldStatus(fieldName);\n        if(syntax && value) {\n            return fieldStatus.valid.syntax && fieldStatus.valid.value;\n        }\n        if(syntax) {\n            return fieldStatus.valid.syntax\n        }\n        return fieldStatus.valid.value;\n    }\n\n\n}\n","export class Point {\n    x;\n    y;\n    constructor(x,y){\n        if(x instanceof Point){\n            y=x.y;\n            x=x.x\n        }else if(Array.isArray(x)){\n            y=x[1];\n            x=x[0];\n        }\n        this.x=x;\n        this.y=y;\n    }\n\n    moveTo(x,y){\n        if(Array.isArray(x)){\n            y=x[1];\n            x=x[0];\n        }\n        this.x=x;\n        this.y=y;\n        return this;\n    }\n\n    move(dx,dy){ //move by vector\n        if(Array.isArray(dx)){\n            dy=dx[1];\n            dx=dx[0];\n        }\n        this.x+=dx;\n        this.y+=dy;\n        return this;\n    }\n\n}\n","import {Point} from \"./point\";\nimport {Utils} from \"sd-utils\";\nimport {ObjectWithIdAndEditableFields} from \"./object-with-id-and-editable-fields\";\n\nexport class Text extends ObjectWithIdAndEditableFields{\n\n    value='';\n    location; //Point\n\n    constructor(location, value){\n        super();\n        this.location=location;\n        if(!location){\n            this.location = new Point(0,0);\n        }\n\n        if(value) {\n            this.value = value;\n        }\n    }\n\n    moveTo(x,y){ //move to new location\n        this.location.moveTo(x,y);\n        return this;\n    }\n\n    move(dx, dy){ //move by vector\n        this.location.move(dx, dy);\n        return this;\n    }\n}\n","import * as domain from './domain'\nexport {domain}\nexport * from './data-model'\nexport * from './validation-result'\n","import {Utils} from \"sd-utils\";\n\nexport class ValidationResult{\n\n\n    errors = {};\n    warnings = {};\n    objectIdToError={};\n\n    addError(error, obj){\n        if(Utils.isString(error)){\n            error = {name: error};\n        }\n        var name = error.name;\n        var errorsByName = this.errors[name];\n        if(!errorsByName){\n            errorsByName=[];\n            this.errors[name]=errorsByName;\n        }\n        var objE = this.objectIdToError[obj.$id];\n        if(!objE){\n            objE=[];\n            this.objectIdToError[obj.$id]= objE;\n        }\n        errorsByName.push(obj);\n        objE.push(error);\n    }\n\n    addWarning(name, obj){\n        var e = this.warnings[name];\n        if(!e){\n            e=[];\n            this.warnings[name]=e;\n        }\n        e.push(obj)\n    }\n\n    isValid(){\n        return Object.getOwnPropertyNames(this.errors).length === 0\n    }\n\n    static createFromDTO(dto){\n        var v = new ValidationResult();\n        v.errors = dto.errors;\n        v.warnings = dto.warnings;\n        v.objectIdToError = dto.objectIdToError;\n        return v;\n    }\n}\n","export * from './src/index'\n"]}